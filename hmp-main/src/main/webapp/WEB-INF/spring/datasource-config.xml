<?xml version="1.0"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd

        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
       default-lazy-init="true">
    <!-- JDS template and connection manager -->
    <bean id="jdsRestTemplate" class="org.springframework.web.client.RestTemplate"
          c:requestFactory-ref="jdsHttpRequestFactory"/>
    <bean id="jdsHttpRequestFactory" class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory"
          c:httpClient-ref="jdsHttpClient"/>
    <bean id="jdsHttpClient" class="com.codahale.metrics.httpclient.InstrumentedHttpClient">
        <constructor-arg index="0" type="com.codahale.metrics.MetricRegistry" ref="metricsRegistry"/>
        <constructor-arg index="1" type="org.apache.http.conn.ClientConnectionManager" ref="jdsHttpConnectionManager"/>
        <constructor-arg index="2" type="org.apache.http.params.HttpParams" ref="jdsHttpParams"/>
        <constructor-arg index="3" type="java.lang.String" value="jds"/>
        <constructor-arg index="4" type="com.codahale.metrics.httpclient.HttpClientMetricNameStrategy">
            <util:constant static-field="com.codahale.metrics.httpclient.HttpClientMetricNameStrategies.METHOD_ONLY"/>
        </constructor-arg>
    </bean>
    <bean id="jdsHttpConnectionManager" class="com.codahale.metrics.httpclient.InstrumentedClientConnManager"
          destroy-method="shutdown">
        <constructor-arg index="0" ref="metricsRegistry"/>
        <constructor-arg index="1" ref="jdsHttpSchemeRegistry"/>
        <constructor-arg index="2" value="-1"/>
        <constructor-arg index="3" value="MILLISECONDS"/>
        <constructor-arg index="4" ref="jdsHttpDnsResolver"/>
        <constructor-arg index="5" value="jds"/>

        <property name="defaultMaxPerRoute" value="${jds.conn-manager.max-per-route}"/>
    </bean>
    <bean id="jdsHttpParams" class="org.apache.http.params.SyncBasicHttpParams"/>
    <bean id="jdsHttpSchemeRegistry" class="org.apache.http.impl.conn.SchemeRegistryFactory" factory-method="createDefault"/>
    <bean id="jdsHttpDnsResolver" class="org.apache.http.impl.conn.SystemDefaultDnsResolver"/>
    <bean id="jdsHttpConnectionEvictor" class="gov.va.cpe.vpr.pom.jds.JdsHttpConnectionEvictor"
          c:connectionManager-ref="jdsHttpConnectionManager"/>


    <bean id="jdsTemplate" class="gov.va.cpe.vpr.pom.jds.JdsTemplate"
          p:restTemplate-ref="jdsRestTemplate"
          p:jdsUrl="${jds.url}"
          p:connectOnInitialization="false"/>

    <!-- DAO layer configuration TODO: any way to DRY these out, maybe with BeanFactory?)-->
    <bean id="routingDao" class="gov.va.cpe.vpr.dao.multi.DefaultRoutingDataStore"
          p:dataStores-ref="dataStores"
          p:metrics-ref="metricsRegistry"/>

    <bean id="syncErrorDao" class="gov.va.cpe.vpr.dao.jds.JdsVprSyncErrorDao"
          c:genericDao-ref="jdsRepository"
          c:jdsTemplate-ref="jdsTemplate"/>


    <bean id="vistaOperationalDataDao" class="gov.va.cpe.vpr.sync.vista.VistaOperationalDataDAO"
          p:rpcTemplate-ref="synchronizationRpcTemplate"/>

    <!-- JIRA ticket submission DAO -->
    <bean id="jiraDao" class="gov.va.hmp.jira.JiraDao"/>

    <!-- JDS data source config -->
    <beans profile="vpr-datastore-json">

        <bean id="jdsRepository" class="gov.va.cpe.vpr.pom.jds.JdsGenericDAO"
              p:jdsTemplate-ref="jdsTemplate"/>

        <bean id="jdsPatientDao" class="gov.va.cpe.vpr.pom.jds.JdsPatientDAO"
              p:jdsTemplate-ref="jdsTemplate"
              p:genericDao-ref="jdsRepository"/>

        <bean id="jdsPatientSelectDao" class="gov.va.hmp.ptselect.dao.jds.JdsPatientSelectDAO"
              c:genericDao-ref="jdsRepository"
              c:jdsTemplate-ref="jdsTemplate"/>

        <bean id="jdsViewDefDefDao" class="gov.va.cpe.vpr.dao.jms.ViewDefDefJdsDAO"
              p:jdsTemplate-ref="jdsTemplate"/>

        <bean id="jdsVprUpdateDao" class="gov.va.cpe.vpr.dao.jds.JdsVprUpdateDao"
              c:genericDao-ref="jdsRepository"
              c:jdsTemplate-ref="jdsTemplate"/>

        <bean id="syncStatusDao" class="gov.va.cpe.vpr.dao.jds.JdsVprSyncStatusDao"
              c:genericDao-ref="jdsRepository"
              c:jdsTemplate-ref="jdsTemplate"/>

        <bean class="gov.va.cpe.vpr.sync.vista.VistaVprPatientObjectDao"
              p:jdsGenericDao-ref="jdsRepository"
              p:jdsPatientDao-ref="jdsPatientDao"
              p:rpcTemplate-ref="rpcTemplate"/>

        <bean class="gov.va.cpe.vpr.sync.vista.VistaVprPatientDemographicsObjectDao"
              p:jdsGenericDao-ref="jdsRepository"
              p:jdsPatientDao-ref="jdsPatientDao"
              p:rpcTemplate-ref="rpcTemplate"/>

        <bean class="gov.va.cpe.vpr.sync.vista.VistaVprObjectDao"
              p:jdsDao-ref="jdsRepository"
              p:rpcTemplate-ref="rpcTemplate"/>

        <util:map id="dataStores" key-type="java.lang.String" value-type="gov.va.cpe.vpr.pom.IDataStoreDAO"
                  map-class="java.util.TreeMap">
            <entry key="vpr-datastore-json" value-ref="jdsRepository"/>
            <entry key="vpr-datastore-solr" value-ref="defaultSolrDao"/>
        </util:map>
    </beans>
</beans>
