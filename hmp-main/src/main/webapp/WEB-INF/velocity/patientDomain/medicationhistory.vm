<html>
## uncomment to let this function standalone
###parse("/layouts/detail.vm")
<body>
	
## there should only be one row, if there is more than one, then the filters were not applied correctly
#if ($results.getRows().size() > 1)
	ERROR: >1 row
	#stop
#end
#foreach($x in $results.rows)
	#set($row = $x)
#end

#set($dt = $task.getActions()[1])
#set($allFills = $dt.getAllFills())
#set($allAdmins = $dt.getAllAdmins())


<table class="hmp-rowbody-masterdetail"><tr>
<td class="hmp-rowbody-master" style="width: 200px">

    #set($hasFillTab = false)
    #set($hasAdminTab = false)
    ## tabs   defualt to fill or admin .. if both of them exist, fill is default.  If none of them exists, default to order
    <ul class="med-detail-tabs nav nav-pills">
         <li data-uid="orderhx"  #if (!($row.lastFill || $row.vaType == 'O') && !($row.lastAdmin || ($row.vaType == 'I' || $row.vaType == 'V')) ) class="active" #end>
            <a href="#">Order Hx<span class="badge" style="position: relative; top:-0.1em;">${dt.getMeds().size()}</span></a>
        </li>
        #if( $row.lastAdmin || ($row.vaType == 'I' || $row.vaType == 'V') )
            #set($hasAdminTab = true)
            <li data-uid="adminhx" #if (!($row.lastFill || $row.vaType == 'O')) class="active" #end><a href="#">Admin Hx<span class="badge" style="position: relative; top:-0.1em;">${allAdmins.size()}</span></a></li>
        #end
        #if( $row.lastFill || $row.vaType == 'O' )
            #set($hasFillTab = true)
            <li data-uid="fillhx" class="active"><a href="#">Fill Hx<span class="badge" style="position: relative; top:-0.1em;">${allFills.size()}</span></a></li>
        #end
    </ul>

    ## display order meds hx
    <div class="content-wrapper med-detail-orderhx-content"  #if ($hasAdminTab || $hasFillTab) style="display: none" #end>
        <ul id="med-detail-orderhx" class="med-detail-orderhx-list nav nav-pills nav-stacked" data-uid="${row.get('uid')}"
            style="height: 130px;" hasOnlyOrderTab="#if(!$hasAdminTab && !$hasFillTab)true#{else}false#end">
            #foreach($item in $dt.getMeds())
                <li data-uid="${item.uid}" #if($velocityCount == 1) class="active" #end>
                    <a id="med-listing-${item.uid}">
                        $hmp.formatDate($!item.overallStart)
                        &nbsp;-&nbsp;
                        $hmp.formatDate($!item.overallStop)
                        #if($item.isActive()) &nbsp;<span class="label label-success">Active</span>#end
                    </a>
                </li>
            #end
        </ul>
     </div>

    ## display admin hx
    ## add display:none to avoid the detail panel height getting extra long
    <div class="content-wrapper med-detail-adminhx-content" #if (!$hasAdminTab || $hasFillTab) style="display: none" #end>
    #if($row.lastAdmin)
        <ul id="med-detail-adminhx" class="med-detail-adminhx-list nav nav-pills nav-stacked"
            data-uid="adminhx" style="height: 130px;" hasFillTab="$hasFillTab">
            #foreach($admin in $allAdmins)
                <li><a id="">$hmp.formatDateTime($!admin.dateTime) - $admin.status</a>
                    #if (!$admin.comments.isEmpty() || $admin.prnReason)
                        <blockquote>$!admin.prnReason#if ($admin.prnReason)<small>PRN Reason</small>#end
                            #foreach($c in $admin.comments)
                                <p>$c.text<small>$hmp.formatDateTime($c.dateTime) by $c.enteredByName </small></p>
                            #end
                        </blockquote>
                    #end</li>
            #end
        </ul>
    #elseif($row.vaType == 'I' || $row.vaType == 'V')
        <i>No Admin Hx</i>
    #end
    </div>

    ## display fill hx
    ## add display:none to avoid the detail panel height getting extra long
    <div class="content-wrapper med-detail-fillhx-content" #if (!$hasFillTab) style="display: none" #end>
    #if($row.lastFill)
        <ul id="med-detail-fillhx" class="med-detail-fillhx-list nav nav-pills nav-stacked"
            data-uid="fillhx" style="height: 130px;">
            #foreach($fill in $allFills)
                <li><a id="">$hmp.formatDateTime($!fill.dispenseDate):
                    $fill.quantityDispensed for ${fill.daysSupplyDispensed}d - $fill.routingName</a></li>
            #end
        </ul>
    #elseif($row.vaType == 'O')
        <i>No Fill Hx</i>
    #end
    </div>

</td>
<td class="hmp-rowbody-detail" style="width: 300px">
    #foreach($item in $dt.getMeds())
        <table class="hmp-labeled-values" id="med-detail-${item.uid}" style="display: none;">
            <tr><td colspan="2" style="text-align: left;"><pre style="width: 370px;">${item.summary}</pre></td></tr>
    
    		#if($item.vaType == 'O')
    			#if($item.orders[0].prescriptionId)
                <tr>
                    <td>Prescription#</td>
                    <td>$!item.orders[0].prescriptionId</td>
                </tr>
                #end
               <tr>
                    <td>Supply</td>
                    <td>$!item.orders[0].quantityOrdered for $!item.orders[0].daysSupply days ($!item.orders[0].fillsRemaining of $!item.orders[0].fillsAllowed refills remaining)</td>
                </tr>
    		#elseif ($item.vaType == 'I' && $item.orders[0].orderUid)
            	<tr>
            		<td>Order#</td>
            		<td>$!item.orders[0].orderUid.split(':')[5]</td>
            	</tr>
    		#end
    	#*
        ## TODO: Maybe bring this back, for now just use it to drive the alert icon
    	#if($item.meanGap)
        <tr>
                <td>Compliance</td>
                <td>Mean Gap: ${item.meanGap}</td>
        </tr>
    	#end
    	*#
            <tr>
                <td>Dose/Schedule</td>
                <td>
    				#foreach($dosage in $item.dosages)
                    $!dosage.dose $!dosage.routeName $!dosage.scheduleName $!dosage.duration
                    $!dosage.complexDuration $!dosage.complexConjunction<br/>
    				#end
                </td>
            </tr>
            <tr>
                <td>Provider</td>
                <td>$!item.orders[0].providerName</td>
            </tr>
            <tr>
                <td>Pharmacist</td>
                <td>$!item.orders[0].pharmacistName</td>
            </tr>
            <tr>
                <td>Location</td>
                <td>$!item.orders[0].locationName</td>
            </tr>
            <tr>
                <td>Facility</td>
                <td>$!item.facilityName</td>
            </tr>
    
        </table>
	#end
</td>
</tr>
</table>
</body>
<script type="text/javascript">
        // TODO: investigate defining this as an Ext.Component
		var hoverscroll = function(el, showItems) {
            //debugger;
			var ul = el;
            var id = ul.getAttribute('id');
            var lis = ul.select('li');
			var liCount = lis.getCount();
			
			// don't do anything if the list is small
			if (showItems && liCount <= showItems) return;

			// create the wrapper elements and insert the scroller divs
			var ulwrap = ul.wrap({tag: 'div', class: 'wrapper'});
			var ulctnr = ulwrap.wrap({tag: 'div', class: 'li-scroller'});
			var ulup = ulwrap.insertSibling('<div class="arrow_up"></div>', 'before');
			var uldn = ulwrap.insertSibling('<div class="arrow_dn"></div>', 'after');
            ulup.val = -1; uldn.val = 1;
			ulup.hide(); uldn.hide();

            // set ulwrap's height to the height of the last item
			var scrollBy = lis.item(0).getComputedHeight();
			var topIdx = 0, botIdx=liCount-1;
			var uphidden=0;
			var dnhidden=0;
			if (!showItems) {
				// new style, dynamically find the lastel
				lis.each(function() {
                    // if it is at least half visible, count it as shown
					var bottom = this.getOffsetsTo(ul)[1] + (scrollBy/2)
					if (bottom > ul.dom.clientHeight) {
						dnhidden++;
					} else {
						botIdx = lis.indexOf(this); 
					}
				});
				//console.log('dnhidden', dnhidden, 'botIdx', botIdx);
			} else {
				// old style, used specified lastel idx and change height
    			var lastel = lis.item(showItems);
    			var lasteloffsetY = lastel.getOffsetsTo(ul)[1];
    			ulwrap.setHeight(lasteloffsetY);
				dnhidden = liCount-showItems;
			}
			
			// attach listeners to the arrows
			var fnc = function() {
				if (this.val != undefined) {
    				// scroll item into view (top or bottom)
    				var scrollEl = null;
					dnhidden -= this.val; uphidden += this.val;
					botIdx += this.val; topIdx += this.val;
    				if (this.val === 1) { 
    					scrollEl = lis.item(botIdx) 
    				} else { 
    					scrollEl = lis.item(topIdx);
    				}
					if (scrollEl) {
						ulwrap.scrollBy(0, scrollEl.getComputedHeight() * this.val, false);
					}
				}
				
				// update the arrow buttons visibility and counts
				if (dnhidden <= 0) uldn.hide(); else uldn.show();
				if (uphidden <= 0) ulup.hide(); else ulup.show();
				ulup.update(uphidden + ' more');
				uldn.update(dnhidden + ' more');
			};
			
			ulup.on('click', fnc);
			uldn.on('click', fnc);
			
			// initalize
			fnc();
		};
		Ext.onReady(function(){
            // configure the display details
            var tabEls = Ext.select('.hmp-rowbody-master .med-detail-tabs li');
            tabEls.on('click', function(evt, target) { // tab handler
				evt.preventDefault();
				var uid = this.getAttribute('data-uid')
				if (!uid) return; // skip if no data-uid specified
                // clean up
                Ext.select('.hmp-rowbody-detail .hmp-labeled-values').setVisibilityMode(Ext.Element.DISPLAY).hide();    // hide med detail
                Ext.select('.content-wrapper').setVisibilityMode(Ext.Element.DISPLAY).hide();       // hide tab content area
                tabEls.removeCls('active');

                // show the content for the selected tab
                Ext.select('.content-wrapper.med-detail-' + uid + '-content').setVisibilityMode(Ext.Element.DISPLAY).show();
                Ext.get(this).addCls('active');         // set the active tab
                // recover previously selected med - make it active and display the detail
                if (uid == 'orderhx') {
                    var activeMedEl = Ext.select('.med-detail-orderhx-list li.active');
                    var active = activeMedEl.first();
                    var medUid = active.getAttribute('data-uid');
                    var medCmp = Ext.get('med-detail-'+medUid);
                    if(medCmp && Ext.isFunction(medCmp.show)) {
                        medCmp.show();
                    }
                }
            });
            var medEls = Ext.select('.hmp-rowbody-master .med-detail-orderhx-list li');
            medEls.on('click', function(evt, target) {  // med detail handler
                console.log('click',target);
                //debugger;
                evt.preventDefault();
                var uid = this.getAttribute('data-uid');
                if (!uid) return; // skip if no data-uid specified

                Ext.select('.hmp-rowbody-detail .hmp-labeled-values').setVisibilityMode(Ext.Element.DISPLAY).hide();
                medEls.removeCls('active');

                Ext.get('med-detail-' + uid).show();
                Ext.get(this).addCls('active');

                // highlight SVG (and pan into view if necessary)
                if(Ext.fly('svg-order-' + uid)) {

                    var rect = Ext.fly('svg-order-' + uid);
                    var color = rect.dom.style.fill;
                    var svg = rect.up('svg').dom;
                    rect.highlight(color,{attr:'fill',duration:3000})

                    // pan if x is out of the viewport
                    var viewBoxX1 = svg.viewBox.baseVal.x;
                    var viewBoxX2 = viewBoxX1 + svg.viewBox.baseVal.width;
                    var rectX = rect.dom.x.baseVal.value;
                    if (rectX < viewBoxX1 || rectX > viewBoxX2) {
                        svg.viewBox.baseVal.x = rectX;
                    }
                }
            });

            var orderhx = Ext.get('med-detail-orderhx');
            if (orderhx) {
                // dom for orderhx isn't rendered (display: none) because of displaying extra height .. so here we need to
                // show it before creating hoverscroll for it and hide it again.  same for fillhx and adminhx
                Ext.select('.content-wrapper.med-detail-orderhx-content').setVisibilityMode(Ext.Element.DISPLAY).show();
                hoverscroll(orderhx);
                var hasOnlyOrderTab = orderhx.getAttribute('hasOnlyOrderTab');
                if (hasOnlyOrderTab == 'true') {
                    // show the first med (default))
                    var first = orderhx.first();
                    //console.log('first',nav,first);
                    var firstUid = first.getAttribute('data-uid');
                    if(!firstUid) {
                        // IE10-specific bug found on Sencha's forum.
                        // It is reportedly resolved in Ext 4.2, so maybe we can remove this hack when we move to 4.2.
                        // http://www.sencha.com/forum/showthread.php?2PORT7-Ext.Element.getAttribute-not-working-in-IE10
                        for(var aidx = 0; aidx < first.dom.attributes.length && firstUid==null; aidx = aidx+1) {
                            if(first.dom.attributes[aidx].name === 'data-uid') {
                                firstUid = first.dom.attributes[aidx].value;
                            }
                        }
                    }
                    var medCmp = Ext.get('med-detail-'+firstUid);
                    if(medCmp && Ext.isFunction(medCmp.show)) {
                        first.addCls('active');
                        medCmp.show();
                    }
                }  else
                {
                    Ext.select('.content-wrapper.med-detail-orderhx-content').setVisibilityMode(Ext.Element.DISPLAY).hide();
                }
            }

            // also hoverscroll the admin + fill history (if any)
            var adminhx = Ext.get('med-detail-adminhx');
            if (adminhx) {
                Ext.select('.content-wrapper.med-detail-adminhx-content').setVisibilityMode(Ext.Element.DISPLAY).show();
                hoverscroll(adminhx);
                var hasFillTab = adminhx.getAttribute('hasFillTab');
                if (hasFillTab == 'true') {  // if there is fill tab, hide admin tab content
                    Ext.select('.content-wrapper.med-detail-adminhx-content').setVisibilityMode(Ext.Element.DISPLAY).hide();
                }
            }
            var fillhx = Ext.get('med-detail-fillhx');
            if (fillhx) {
                // this is default ... try to show fill tab content first ...
                Ext.select('.content-wrapper.med-detail-fillhx-content').setVisibilityMode(Ext.Element.DISPLAY).show();
                hoverscroll(fillhx);
            }
		});
	</script>
</html>
