KIDS Distribution saved on Sep 09, 2016@17:03:34
eHMP patch 3v1 ICR compliance
**KIDS**:HMP*2.0*3^

**INSTALL NAME**
HMP*2.0*3
"BLD",9709,0)
HMP*2.0*3^HEALTH MANAGEMENT PLATFORM^0^3160909^y
"BLD",9709,4,0)
^9.64PA^^
"BLD",9709,6.3)
2
"BLD",9709,"ABPKG")
n
"BLD",9709,"KRN",0)
^9.67PA^779.2^20
"BLD",9709,"KRN",.4,0)
.4
"BLD",9709,"KRN",.401,0)
.401
"BLD",9709,"KRN",.402,0)
.402
"BLD",9709,"KRN",.403,0)
.403
"BLD",9709,"KRN",.5,0)
.5
"BLD",9709,"KRN",.84,0)
.84
"BLD",9709,"KRN",3.6,0)
3.6
"BLD",9709,"KRN",3.8,0)
3.8
"BLD",9709,"KRN",9.2,0)
9.2
"BLD",9709,"KRN",9.8,0)
9.8
"BLD",9709,"KRN",9.8,"NM",0)
^9.68A^20^20
"BLD",9709,"KRN",9.8,"NM",1,0)
HMPEVNT^^0^B188368907
"BLD",9709,"KRN",9.8,"NM",2,0)
HMPCORD4^^0^B152907266
"BLD",9709,"KRN",9.8,"NM",3,0)
HMPDJ04^^0^B85767802
"BLD",9709,"KRN",9.8,"NM",4,0)
HMPP3I^^1^
"BLD",9709,"KRN",9.8,"NM",5,0)
HMPDJ02^^0^B215396119
"BLD",9709,"KRN",9.8,"NM",6,0)
HMPTFU2^^0^B41602003
"BLD",9709,"KRN",9.8,"NM",7,0)
HMPUPD^^1^
"BLD",9709,"KRN",9.8,"NM",8,0)
HMPWB5A^^0^B33356826
"BLD",9709,"KRN",9.8,"NM",9,0)
HMPDVSIT^^0^B96673510
"BLD",9709,"KRN",9.8,"NM",10,0)
HMPCORD5^^0^B83583685
"BLD",9709,"KRN",9.8,"NM",11,0)
HMPDJFSD^^0^B7195569
"BLD",9709,"KRN",9.8,"NM",12,0)
HMPEF^^0^B86577770
"BLD",9709,"KRN",9.8,"NM",13,0)
HMPCRPC1^^0^B113427224
"BLD",9709,"KRN",9.8,"NM",14,0)
HMPTIU^^1^
"BLD",9709,"KRN",9.8,"NM",15,0)
HMPROS2^^1^
"BLD",9709,"KRN",9.8,"NM",16,0)
HMPROS3^^1^
"BLD",9709,"KRN",9.8,"NM",17,0)
HMPROS4^^1^
"BLD",9709,"KRN",9.8,"NM",18,0)
HMPROS7^^1^
"BLD",9709,"KRN",9.8,"NM",19,0)
HMPCORD^^1^
"BLD",9709,"KRN",9.8,"NM",20,0)
HMPCPAT^^1^
"BLD",9709,"KRN",9.8,"NM","B","HMPCORD",19)

"BLD",9709,"KRN",9.8,"NM","B","HMPCORD4",2)

"BLD",9709,"KRN",9.8,"NM","B","HMPCORD5",10)

"BLD",9709,"KRN",9.8,"NM","B","HMPCPAT",20)

"BLD",9709,"KRN",9.8,"NM","B","HMPCRPC1",13)

"BLD",9709,"KRN",9.8,"NM","B","HMPDJ02",5)

"BLD",9709,"KRN",9.8,"NM","B","HMPDJ04",3)

"BLD",9709,"KRN",9.8,"NM","B","HMPDJFSD",11)

"BLD",9709,"KRN",9.8,"NM","B","HMPDVSIT",9)

"BLD",9709,"KRN",9.8,"NM","B","HMPEF",12)

"BLD",9709,"KRN",9.8,"NM","B","HMPEVNT",1)

"BLD",9709,"KRN",9.8,"NM","B","HMPP3I",4)

"BLD",9709,"KRN",9.8,"NM","B","HMPROS2",15)

"BLD",9709,"KRN",9.8,"NM","B","HMPROS3",16)

"BLD",9709,"KRN",9.8,"NM","B","HMPROS4",17)

"BLD",9709,"KRN",9.8,"NM","B","HMPROS7",18)

"BLD",9709,"KRN",9.8,"NM","B","HMPTFU2",6)

"BLD",9709,"KRN",9.8,"NM","B","HMPTIU",14)

"BLD",9709,"KRN",9.8,"NM","B","HMPUPD",7)

"BLD",9709,"KRN",9.8,"NM","B","HMPWB5A",8)

"BLD",9709,"KRN",19,0)
19
"BLD",9709,"KRN",19.1,0)
19.1
"BLD",9709,"KRN",101,0)
101
"BLD",9709,"KRN",409.61,0)
409.61
"BLD",9709,"KRN",771,0)
771
"BLD",9709,"KRN",779.2,0)
779.2
"BLD",9709,"KRN",870,0)
870
"BLD",9709,"KRN",8989.51,0)
8989.51
"BLD",9709,"KRN",8989.52,0)
8989.52
"BLD",9709,"KRN",8994,0)
8994
"BLD",9709,"KRN",8994,"NM",0)
^9.68A^12^12
"BLD",9709,"KRN",8994,"NM",1,0)
HMP DELETE ROSTER^^1^
"BLD",9709,"KRN",8994,"NM",2,0)
HMP DELETE TIU NOTE^^1^
"BLD",9709,"KRN",8994,"NM",3,0)
HMP GET ROSTER LIST^^1^
"BLD",9709,"KRN",8994,"NM",4,0)
HMP GET SOURCE^^1^
"BLD",9709,"KRN",8994,"NM",5,0)
HMP PREVIEW ROSTER^^1^
"BLD",9709,"KRN",8994,"NM",6,0)
HMP ROSTER PATIENTS^^1^
"BLD",9709,"KRN",8994,"NM",7,0)
HMP ROSTERS^^1^
"BLD",9709,"KRN",8994,"NM",8,0)
HMP SAVE NOTE STUB^^1^
"BLD",9709,"KRN",8994,"NM",9,0)
HMP SUBSCRIBE ROSTERS^^1^
"BLD",9709,"KRN",8994,"NM",10,0)
HMP UPDATE ROSTER^^1^
"BLD",9709,"KRN",8994,"NM",11,0)
HMPCORD RPC^^1^
"BLD",9709,"KRN",8994,"NM",12,0)
HMPCPAT RPC^^1^
"BLD",9709,"KRN",8994,"NM","B","HMP DELETE ROSTER",1)

"BLD",9709,"KRN",8994,"NM","B","HMP DELETE TIU NOTE",2)

"BLD",9709,"KRN",8994,"NM","B","HMP GET ROSTER LIST",3)

"BLD",9709,"KRN",8994,"NM","B","HMP GET SOURCE",4)

"BLD",9709,"KRN",8994,"NM","B","HMP PREVIEW ROSTER",5)

"BLD",9709,"KRN",8994,"NM","B","HMP ROSTER PATIENTS",6)

"BLD",9709,"KRN",8994,"NM","B","HMP ROSTERS",7)

"BLD",9709,"KRN",8994,"NM","B","HMP SAVE NOTE STUB",8)

"BLD",9709,"KRN",8994,"NM","B","HMP SUBSCRIBE ROSTERS",9)

"BLD",9709,"KRN",8994,"NM","B","HMP UPDATE ROSTER",10)

"BLD",9709,"KRN",8994,"NM","B","HMPCORD RPC",11)

"BLD",9709,"KRN",8994,"NM","B","HMPCPAT RPC",12)

"BLD",9709,"KRN","B",.4,.4)

"BLD",9709,"KRN","B",.401,.401)

"BLD",9709,"KRN","B",.402,.402)

"BLD",9709,"KRN","B",.403,.403)

"BLD",9709,"KRN","B",.5,.5)

"BLD",9709,"KRN","B",.84,.84)

"BLD",9709,"KRN","B",3.6,3.6)

"BLD",9709,"KRN","B",3.8,3.8)

"BLD",9709,"KRN","B",9.2,9.2)

"BLD",9709,"KRN","B",9.8,9.8)

"BLD",9709,"KRN","B",19,19)

"BLD",9709,"KRN","B",19.1,19.1)

"BLD",9709,"KRN","B",101,101)

"BLD",9709,"KRN","B",409.61,409.61)

"BLD",9709,"KRN","B",771,771)

"BLD",9709,"KRN","B",779.2,779.2)

"BLD",9709,"KRN","B",870,870)

"BLD",9709,"KRN","B",8989.51,8989.51)

"BLD",9709,"KRN","B",8989.52,8989.52)

"BLD",9709,"KRN","B",8994,8994)

"BLD",9709,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9709,"QUES",0)
^9.62^^
"BLD",9709,"REQB",0)
^9.611^1^1
"BLD",9709,"REQB",1,0)
HMP*2.0*2^2
"BLD",9709,"REQB","B","HMP*2.0*2",1)

"KRN",8994,3792,-1)
1^1
"KRN",8994,3792,0)
HMP DELETE ROSTER
"KRN",8994,3793,-1)
1^2
"KRN",8994,3793,0)
HMP DELETE TIU NOTE
"KRN",8994,3794,-1)
1^3
"KRN",8994,3794,0)
HMP GET ROSTER LIST
"KRN",8994,3795,-1)
1^4
"KRN",8994,3795,0)
HMP GET SOURCE
"KRN",8994,3796,-1)
1^5
"KRN",8994,3796,0)
HMP PREVIEW ROSTER
"KRN",8994,3797,-1)
1^6
"KRN",8994,3797,0)
HMP ROSTER PATIENTS
"KRN",8994,3798,-1)
1^7
"KRN",8994,3798,0)
HMP ROSTERS
"KRN",8994,3799,-1)
1^8
"KRN",8994,3799,0)
HMP SAVE NOTE STUB
"KRN",8994,3800,-1)
1^9
"KRN",8994,3800,0)
HMP SUBSCRIBE ROSTERS
"KRN",8994,3801,-1)
1^10
"KRN",8994,3801,0)
HMP UPDATE ROSTER
"KRN",8994,3802,-1)
1^11
"KRN",8994,3802,0)
HMPCORD RPC
"KRN",8994,3803,-1)
1^12
"KRN",8994,3803,0)
HMPCPAT RPC
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",578,-1)
1^1
"PKG",578,0)
HEALTH MANAGEMENT PLATFORM^HMP^Access patient medical records from all VistA's
"PKG",578,20,0)
^9.402P^^
"PKG",578,22,0)
^9.49I^1^1
"PKG",578,22,1,0)
2.0^3160223^3160909^1
"PKG",578,22,1,"PAH",1,0)
3^3160909
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
20
"RTN","HMPCORD")
1^19
"RTN","HMPCORD4")
0^2^B152907266
"RTN","HMPCORD4",1,0)
HMPCORD4 ;SLC/AGP,ASMR/RRB,JD -Retrieved Orderable Items;Aug 12, 2016 10:54:47
"RTN","HMPCORD4",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**3**;Sep 01, 2011;Build 2
"RTN","HMPCORD4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","HMPCORD4",4,0)
 ;
"RTN","HMPCORD4",5,0)
 ; External References          DBIA#
"RTN","HMPCORD4",6,0)
 ; -------------------          -----
"RTN","HMPCORD4",7,0)
 ; ALL^PSS51P2                  4548   ;DE6363 - JD - 8/23/16
"RTN","HMPCORD4",8,0)
 ;
"RTN","HMPCORD4",9,0)
 ;DE5080 - JD - 7/26/16: Fixed the <UNDEFINED> in VALIDOI section.
"RTN","HMPCORD4",10,0)
 ;DE4488 - JD - 8/12/16: Replaced direct global read of ^PS(51.2 with ALL^PSS51P2 API in
"RTN","HMPCORD4",11,0)
 ;                       ADDROUTE section.
"RTN","HMPCORD4",12,0)
 ;
"RTN","HMPCORD4",13,0)
 Q
"RTN","HMPCORD4",14,0)
 ;
"RTN","HMPCORD4",15,0)
ADDODG ; called by HMPEF
"RTN","HMPCORD4",16,0)
 N CNT,IEN,NUM,NODE,PTR,RESULT,TEMP
"RTN","HMPCORD4",17,0)
 N ERRMSG S ERRMSG="A mumps error occurred while extracting display groups"
"RTN","HMPCORD4",18,0)
 S IEN=0 F  S IEN=$O(^ORD(100.98,IEN)) Q:IEN'>0  D
"RTN","HMPCORD4",19,0)
 .N $ES,$ET
"RTN","HMPCORD4",20,0)
 .S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPCORD4",21,0)
 .I '$D(^ORD(100.98,IEN,1)) D  Q
"RTN","HMPCORD4",22,0)
 ..S NODE=$G(^ORD(100.98,IEN,0)) D SODGNODE(.RESULT,NODE)
"RTN","HMPCORD4",23,0)
 ..S RESULT("uid")=$$SETUID^HMPUTILS("displayGroup","",IEN),RESULT("internal")=IEN
"RTN","HMPCORD4",24,0)
 ..D ADD^HMPEF("RESULT") S HMPCNT=+$G(HMPCNT)+1,HMPLAST=IEN
"RTN","HMPCORD4",25,0)
 .D ADDODG1(IEN,.TEMP)
"RTN","HMPCORD4",26,0)
 .M RESULT=TEMP
"RTN","HMPCORD4",27,0)
 .D ADD^HMPEF("RESULT") S HMPCNT=+$G(HMPCNT)+1,HMPLAST=IEN
"RTN","HMPCORD4",28,0)
 I IEN'>0 S HMPFINI=1
"RTN","HMPCORD4",29,0)
 Q
"RTN","HMPCORD4",30,0)
 ;
"RTN","HMPCORD4",31,0)
ADDODG1(IEN,TEMP) ;
"RTN","HMPCORD4",32,0)
 N CNT,NODE,NUM,PTR
"RTN","HMPCORD4",33,0)
 S NODE=$G(^ORD(100.98,IEN,0)) D SODGNODE(.TEMP,NODE)
"RTN","HMPCORD4",34,0)
 S TEMP("uid")=$$SETUID^HMPUTILS("displayGroup","",IEN),TEMP("internal")=IEN
"RTN","HMPCORD4",35,0)
 I '$D(^ORD(100.98,IEN,1)) Q
"RTN","HMPCORD4",36,0)
 S NUM=0,CNT=0 F  S NUM=$O(^ORD(100.98,IEN,1,NUM)) Q:NUM'>0  D
"RTN","HMPCORD4",37,0)
 .N ARRAY
"RTN","HMPCORD4",38,0)
 .S PTR=$G(^ORD(100.98,IEN,1,NUM,0)) Q:PTR'>0
"RTN","HMPCORD4",39,0)
 .D ADDODG1(PTR,.ARRAY) I '$D(ARRAY) Q
"RTN","HMPCORD4",40,0)
 .S CNT=CNT+1 M TEMP("children",CNT,"item")=ARRAY
"RTN","HMPCORD4",41,0)
 Q
"RTN","HMPCORD4",42,0)
 ;
"RTN","HMPCORD4",43,0)
SODGNODE(RESULT,NODE) ;
"RTN","HMPCORD4",44,0)
 N NAME,TEMP,X
"RTN","HMPCORD4",45,0)
 F X=1:1:4 D
"RTN","HMPCORD4",46,0)
 .S TEMP=$P(NODE,U,X) I X<4,$L(TEMP)>1 S RESULT($S(X=1:"name",X=2:"displayName",X=3:"abbreviation"))=TEMP
"RTN","HMPCORD4",47,0)
 .I X=4,+TEMP>0 S NAME=$P($G(^ORD(101.41,TEMP,0)),U) S RESULT("defaultDialogUid")=$$SETUID^HMPUTILS("orderDialog","",TEMP),RESULT("defaultDialogName")=NAME
"RTN","HMPCORD4",48,0)
 Q
"RTN","HMPCORD4",49,0)
 ;
"RTN","HMPCORD4",50,0)
ADDROUTE ;
"RTN","HMPCORD4",51,0)
 ;DE4488 - Start
"RTN","HMPCORD4",52,0)
 N ERRMSG,IEN
"RTN","HMPCORD4",53,0)
 S IEN=0,ERRMSG="A mumps error occurred while extracting routes."
"RTN","HMPCORD4",54,0)
 I +$G(HMPLAST)>0 S IEN=HMPLAST
"RTN","HMPCORD4",55,0)
 ;Replaced direct global [^PS(51.2)] read with ALL^PSS51P2 API - ICR 4548
"RTN","HMPCORD4",56,0)
 D ALL^PSS51P2("","??","","","HMPSUB")  ;"??" puts ALL med routes into ^TMP($J,"HMPSUB")
"RTN","HMPCORD4",57,0)
 F  S IEN=$O(^TMP($J,"HMPSUB",IEN)) Q:IEN'>0  D
"RTN","HMPCORD4",58,0)
 .N $ES,$ET
"RTN","HMPCORD4",59,0)
 .N HMPLCL,RESULT,UID,X  ;HMPLCL --> Local array
"RTN","HMPCORD4",60,0)
 .S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPCORD4",61,0)
 .K HMPLCL,RESULT
"RTN","HMPCORD4",62,0)
 .M HMPLCL=^TMP($J,"HMPSUB",IEN)
"RTN","HMPCORD4",63,0)
 .I $G(HMPLCL(5))>0 Q  ;Skip over inactive med routes
"RTN","HMPCORD4",64,0)
 .S UID=$$SETUID^HMPUTILS("route","",IEN)
"RTN","HMPCORD4",65,0)
 .S RESULT("uid")=UID,RESULT("internal")=IEN
"RTN","HMPCORD4",66,0)
 .F X=.01,1,4,6 D  ;X is the field number from file #51.2 (e.g. .01=NAME)
"RTN","HMPCORD4",67,0)
 ..N NAME,VALUE
"RTN","HMPCORD4",68,0)
 ..S VALUE=HMPLCL(X) Q:VALUE=""
"RTN","HMPCORD4",69,0)
 ..S NAME=$S(X=.01:"name",X=4:"externalName",X=1:"abbreviation",X=6:"useInIV",1:"")
"RTN","HMPCORD4",70,0)
 ..I NAME="" Q
"RTN","HMPCORD4",71,0)
 ..I X=6 S VALUE=$S(+VALUE=1:"true",1:"false") ;For X=6,VALUE could either be "" or "1^YES"
"RTN","HMPCORD4",72,0)
 ..S RESULT(NAME)=VALUE
"RTN","HMPCORD4",73,0)
 .D ADD^HMPEF("RESULT") S HMPCNT=+$G(HMPCNT)+1,HMPLAST=IEN
"RTN","HMPCORD4",74,0)
 K ^TMP($J,"HMPSUB")  ;Cleanup
"RTN","HMPCORD4",75,0)
 ;DE4488 - End
"RTN","HMPCORD4",76,0)
 I IEN'>0 S HMPFINI=1
"RTN","HMPCORD4",77,0)
 Q
"RTN","HMPCORD4",78,0)
 ;
"RTN","HMPCORD4",79,0)
ADDSCH ;
"RTN","HMPCORD4",80,0)
 N CNT,IEN,NAME,NODE,NUM,RESULT,UID,HMPSCH
"RTN","HMPCORD4",81,0)
 ;D SCHALL^ORWDPS1(.HMPSCH,0,0)
"RTN","HMPCORD4",82,0)
 D SCHED^PSS51P1(0,.HMPSCH)
"RTN","HMPCORD4",83,0)
 N ERRMSG
"RTN","HMPCORD4",84,0)
 S ERRMSG="A mumps error occurred while extracting schedules."
"RTN","HMPCORD4",85,0)
 S CNT=0 F  S CNT=$O(HMPSCH(CNT)) Q:CNT'>0  D
"RTN","HMPCORD4",86,0)
 .N $ES,$ET
"RTN","HMPCORD4",87,0)
 .S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPCORD4",88,0)
 .S NODE=$G(HMPSCH(CNT))
"RTN","HMPCORD4",89,0)
 .S NAME=$P(NODE,U,2)
"RTN","HMPCORD4",90,0)
 .S IEN=$P(NODE,U)
"RTN","HMPCORD4",91,0)
 .;S IEN=$O(^PS(51.1,"B",NAME,"")) I IEN'>0 Q
"RTN","HMPCORD4",92,0)
 .S UID=$$SETUID^HMPUTILS("schedule","",IEN)
"RTN","HMPCORD4",93,0)
 .S RESULT("uid")=UID,RESULT("internal")=IEN
"RTN","HMPCORD4",94,0)
 .S RESULT("name")=NAME
"RTN","HMPCORD4",95,0)
 .I $P(NODE,U,3)'="" S RESULT("externalValue")=$P(NODE,U,3)
"RTN","HMPCORD4",96,0)
 .I $P(NODE,U,4)'="" S RESULT("scheduleType")=$P(NODE,U,4)
"RTN","HMPCORD4",97,0)
 .D ADD^HMPEF("RESULT") S HMPCNT=+$G(HMPCNT)+1,HMPLAST=IEN
"RTN","HMPCORD4",98,0)
 .K RESULT
"RTN","HMPCORD4",99,0)
 I CNT'>0 S HMPFINI=1
"RTN","HMPCORD4",100,0)
 Q
"RTN","HMPCORD4",101,0)
 ;
"RTN","HMPCORD4",102,0)
LAB(RESULT,OI) ;
"RTN","HMPCORD4",103,0)
 N CNT,I,IEN,NODE,SYN,TEMP,HMPLST
"RTN","HMPCORD4",104,0)
 S RESULT("dialogAdditionalInformation","sendPatientTimes",1,"internal")="LT",RESULT("dialogAdditionalInformation","sendPatientTimes",1,"name")="Today"
"RTN","HMPCORD4",105,0)
 S RESULT("dialogAdditionalInformation","sendPatientTimes",2,"internal")="LT+1",RESULT("dialogAdditionalInformation","sendPatientTimes",2,"name")="Tomorrow"
"RTN","HMPCORD4",106,0)
 ;
"RTN","HMPCORD4",107,0)
 D GETLST^XPAR(.HMPLST,"ALL","ORWD COMMON LAB INPT")  ;DBIA 2263
"RTN","HMPCORD4",108,0)
 S I=0 F  S I=$O(HMPLST(I)) Q:'I  D
"RTN","HMPCORD4",109,0)
 . S IEN=$P(HMPLST(I),U,2)
"RTN","HMPCORD4",110,0)
 . K P1
"RTN","HMPCORD4",111,0)
 . S P1="dialogAdditionalInformation"
"RTN","HMPCORD4",112,0)
 . S RESULT("dialogAdditionalInformation","common",I,"uid")=$$SETUID^HMPUTILS("orderable","",IEN)
"RTN","HMPCORD4",113,0)
 . S RESULT("dialogAdditionalInformation","common",I,"internal")=IEN
"RTN","HMPCORD4",114,0)
 . S RESULT("dialogAdditionalInformation","common",I,"name")=$P(^ORD(101.43,IEN,0),U,1)
"RTN","HMPCORD4",115,0)
 ;
"RTN","HMPCORD4",116,0)
 S NODE=$G(^ORD(101.43,OI,"LR"))
"RTN","HMPCORD4",117,0)
 S RESULT("labDetails","speciman")=$P(NODE,U),RESULT("labDetails","labCollect")=$S($P(NODE,U,2)=1:"true",1:"false"),RESULT("labDetails","sequence")=$P(NODE,U,3)
"RTN","HMPCORD4",118,0)
 S RESULT("labDetails","maxOrderFrequency")=$P(NODE,U,4),RESULT("labDetails","dailyOrderMax")=$P(NODE,U,5)
"RTN","HMPCORD4",119,0)
 ;
"RTN","HMPCORD4",120,0)
 S TEMP=$P(NODE,U,6)
"RTN","HMPCORD4",121,0)
 S RESULT("types",1,"abb")=TEMP,RESULT("types",1,"uid")=$$SETUID^HMPUTILS("labType","",TEMP),RESULT("types",1,"internal")=TEMP,RESULT("types",1,"type")=$$LABTYPE(TEMP)
"RTN","HMPCORD4",122,0)
 S TEMP=$P(NODE,U,7)
"RTN","HMPCORD4",123,0)
 I TEMP'="" S RESULT("labDetails","labTypeInternal")=TEMP,RESULT("labDetails","labTypeName")=$S(TEMP="I":"Input",TEMP="O":"Output",TEMP="B":"Both",TEMP="N":"Neither")
"RTN","HMPCORD4",124,0)
 I '$D(^ORD(101.43,OI,2)) Q
"RTN","HMPCORD4",125,0)
 S CNT=0
"RTN","HMPCORD4",126,0)
 S I=0 F  S I=$O(^ORD(101.43,OI,2,I)) Q:I'>0  D
"RTN","HMPCORD4",127,0)
 .S SYN=$G(^ORD(101.43,OI,2,I,0)) Q:SYN=""
"RTN","HMPCORD4",128,0)
 .S CNT=CNT+1,RESULT("synonym",CNT,"name")=SYN
"RTN","HMPCORD4",129,0)
 Q
"RTN","HMPCORD4",130,0)
 ;
"RTN","HMPCORD4",131,0)
LABTYPE(L) ;
"RTN","HMPCORD4",132,0)
 I L="CH" Q "Chemistry"
"RTN","HMPCORD4",133,0)
 I L="MI" Q "MICROBIOLOGY"
"RTN","HMPCORD4",134,0)
 I L="BB" Q "Blood Bank"
"RTN","HMPCORD4",135,0)
 I L="EM" Q "Electron Microscopy"
"RTN","HMPCORD4",136,0)
 I L="SP" Q "Surgical Pathology"
"RTN","HMPCORD4",137,0)
 I L="AU" Q "Autopsy"
"RTN","HMPCORD4",138,0)
 I L="CY" Q "Cytology"
"RTN","HMPCORD4",139,0)
 Q ""
"RTN","HMPCORD4",140,0)
 ;
"RTN","HMPCORD4",141,0)
OI(OITYPE) ; called by HMPEF
"RTN","HMPCORD4",142,0)
 N CNT,ERROR,IEN,NAME,LINK,LINKTYPE,NODE,RADDET,RADTYPE,RESULT,TCNT,TYPE,UID,HMPTEMP
"RTN","HMPCORD4",143,0)
 N ERRMSG
"RTN","HMPCORD4",144,0)
 S ERRMSG="A mumps error occurred while extracting orderable items."
"RTN","HMPCORD4",145,0)
 S CNT=1,IEN=0
"RTN","HMPCORD4",146,0)
 ;
"RTN","HMPCORD4",147,0)
 D RADTYPE(.RADTYPE,.RADDET)
"RTN","HMPCORD4",148,0)
 I +$G(HMPLAST)>0 S IEN=HMPLAST
"RTN","HMPCORD4",149,0)
 I +$G(HMPID)>0 S IEN=HMPID
"RTN","HMPCORD4",150,0)
 F  S IEN=$O(^ORD(101.43,IEN)) Q:IEN'>0  D  I HMPMAX>0,HMPI'<HMPMAX Q
"RTN","HMPCORD4",151,0)
 .N $ES,$ET
"RTN","HMPCORD4",152,0)
 .S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPCORD4",153,0)
 .K RESULT
"RTN","HMPCORD4",154,0)
 .S TYPE=$$VALIDOI(OITYPE,IEN)
"RTN","HMPCORD4",155,0)
 .I TYPE="" Q
"RTN","HMPCORD4",156,0)
 .S NAME=$P(^ORD(101.43,IEN,0),U),LINK=$P($P(^ORD(101.43,IEN,0),U,2),";99",1),LINKTYPE=$P($P(^ORD(101.43,IEN,0),U,2),";99",2)
"RTN","HMPCORD4",157,0)
 .S UID=$$SETUID^HMPUTILS("orderable","",IEN)
"RTN","HMPCORD4",158,0)
 .S RESULT("uid")=UID,RESULT("internal")=IEN
"RTN","HMPCORD4",159,0)
 .S RESULT("name")=NAME
"RTN","HMPCORD4",160,0)
 .S RESULT("link")=LINK
"RTN","HMPCORD4",161,0)
 .S RESULT("linktype")=LINKTYPE
"RTN","HMPCORD4",162,0)
 .I TYPE["PS" D PS(.RESULT,IEN,CNT)
"RTN","HMPCORD4",163,0)
 .I TYPE["RA" D RA(.RESULT,IEN,CNT,.RADTYPE,.RADDET)
"RTN","HMPCORD4",164,0)
 .I TYPE["LR" D LAB(.RESULT,IEN)
"RTN","HMPCORD4",165,0)
 .D ADD^HMPEF("RESULT") S HMPCNT=+$G(HMPCNT)+1,HMPLAST=IEN
"RTN","HMPCORD4",166,0)
 .S CNT=CNT+1
"RTN","HMPCORD4",167,0)
 I IEN'>0 S HMPFINI=1
"RTN","HMPCORD4",168,0)
 Q
"RTN","HMPCORD4",169,0)
 ;
"RTN","HMPCORD4",170,0)
PS(RESULT,IEN,PLACE) ;
"RTN","HMPCORD4",171,0)
 N CNT,COST,DOSE,DOSES,DRUG,MEDS,NAME,NODE,NUM,PSOI,SIZE,TYPE,UID,HMPDOSE
"RTN","HMPCORD4",172,0)
 S CNT=0
"RTN","HMPCORD4",173,0)
 I $D(^ORD(101.43,IEN,9,"B","NV RX")) S CNT=CNT+1 S RESULT("types",CNT,"type")="NON-VA MEDS" S MEDS("NV RX")=""
"RTN","HMPCORD4",174,0)
 I $D(^ORD(101.43,IEN,9,"B","O RX")) S CNT=CNT+1 S RESULT("types",CNT,"type")="OUTPATIENT MEDS" S MEDS("O RX")=""
"RTN","HMPCORD4",175,0)
 I $D(^ORD(101.43,IEN,9,"B","RX")) S CNT=CNT+1 S RESULT("types",CNT,"type")="MEDS" S MEDS("RX")=""
"RTN","HMPCORD4",176,0)
 I $D(^ORD(101.43,IEN,9,"B","UD RX")) S CNT=CNT+1 S RESULT("types",CNT,"type")="INPATIENT MEDS" S MEDS("UD RX")=""
"RTN","HMPCORD4",177,0)
 ;
"RTN","HMPCORD4",178,0)
 K DOSES
"RTN","HMPCORD4",179,0)
 S PSOI=+$P(^ORD(101.43,IEN,0),U,2)
"RTN","HMPCORD4",180,0)
 S TYPE="" F  S TYPE=$O(MEDS(TYPE)) Q:TYPE=""  D
"RTN","HMPCORD4",181,0)
 .D DOSE^PSSOPKI1(.HMPDOSE,PSOI,TYPE,0)
"RTN","HMPCORD4",182,0)
 .S CNT=0 F  S CNT=$O(HMPDOSE(CNT)) Q:CNT'>0  D
"RTN","HMPCORD4",183,0)
 ..S NODE=$G(HMPDOSE(CNT)),SIZE="",UID=0,DRUG="",COST=""
"RTN","HMPCORD4",184,0)
 ..S DOSE=$P(NODE,U,5)
"RTN","HMPCORD4",185,0)
 ..I $D(DOSES(DOSE)) Q
"RTN","HMPCORD4",186,0)
 ..I $P(NODE,U,3)'="",$P(NODE,U,4)'="" S SIZE=$P(NODE,U,3)_" "_$P(NODE,U,4)
"RTN","HMPCORD4",187,0)
 ..S DRUG=$P(NODE,U,6),COST=$P(NODE,U,7)
"RTN","HMPCORD4",188,0)
 ..S DOSES(DOSE)=$G(SIZE)_U_DRUG_U_COST
"RTN","HMPCORD4",189,0)
 ;
"RTN","HMPCORD4",190,0)
 S DOSE="",CNT=1 F  S DOSE=$O(DOSES(DOSE)) Q:DOSE=""  D
"RTN","HMPCORD4",191,0)
 .S NODE=DOSES(DOSE)
"RTN","HMPCORD4",192,0)
 .S RESULT("possibleDosages",CNT,"dose")=DOSE
"RTN","HMPCORD4",193,0)
 .I $P(NODE,U)'="" S RESULT("possibleDosages",CNT,"size")=$P(NODE,U)
"RTN","HMPCORD4",194,0)
 .I $P(NODE,U,2)>0 D
"RTN","HMPCORD4",195,0)
 ..S NAME=$P($G(^PSDRUG($P(NODE,U,2),0)),U)
"RTN","HMPCORD4",196,0)
 ..S RESULT("possibleDosages",CNT,"drugUid")=$$SETUID^HMPUTILS("drug","",$P(NODE,U,2))
"RTN","HMPCORD4",197,0)
 ..S RESULT("possibleDosages",CNT,"drugInternal")=$P(NODE,U,2)
"RTN","HMPCORD4",198,0)
 ..S RESULT("possibleDosages",CNT,"drugName")=NAME
"RTN","HMPCORD4",199,0)
 .;I $P(NODE,U,3)'="" S RESULT("possibleDosages",CNT,"cost")=$P(NODE,U,3) 
"RTN","HMPCORD4",200,0)
 .S CNT=CNT+1
"RTN","HMPCORD4",201,0)
 Q
"RTN","HMPCORD4",202,0)
 ;
"RTN","HMPCORD4",203,0)
RA(RESULT,IEN,PLACE,RADTYPE,RADDET) ;
"RTN","HMPCORD4",204,0)
 N CNT,NODE,TEMP
"RTN","HMPCORD4",205,0)
 S CNT=0
"RTN","HMPCORD4",206,0)
 S NODE=$G(^ORD(101.43,IEN,0))
"RTN","HMPCORD4",207,0)
 Q:$P(NODE,U,3)=""  ;BL;DE801 NULL SUBSCRIPT FOUND AT TEST SITES
"RTN","HMPCORD4",208,0)
 I $P(NODE,U,3)'="",$P(NODE,U,4)'="" S RESULT("code")=$$SETUID^HMPUTILS($$LOW^XLFSTR($P(NODE,U,4)),"",$P(NODE,U,3))
"RTN","HMPCORD4",209,0)
 S NODE=$G(^ORD(101.43,IEN,"RA"))
"RTN","HMPCORD4",210,0)
 S RESULT("imagingDetails","contractMedia")=$P(NODE,U)
"RTN","HMPCORD4",211,0)
 I $P(NODE,U,2)'="" S TEMP=$P(NODE,U,2),RESULT("imagingDetails","procedureType")=$S(TEMP="B":"Board",TEMP="D":"Detailed",TEMP="S":"Series",TEMP="P":"Parent")
"RTN","HMPCORD4",212,0)
 I $P(NODE,U,3)'="",$D(RADTYPE($P(NODE,U,3))) D
"RTN","HMPCORD4",213,0)
 .S TEMP=$G(RADTYPE($P(NODE,U,3))),RESULT("types",1,"type")=$P(TEMP,U,2),RESULT("types",1,"uid")=$$SETUID^HMPUTILS("radType","",$P(TEMP,U)),RESULT("internal")=$P(TEMP,U),RESULT("types",1,"abb")=$P(NODE,U,3)
"RTN","HMPCORD4",214,0)
 .S RESULT("imagingDetails","commonProcedure")=$S($P(NODE,U,4)=1:"true",1:"false")
"RTN","HMPCORD4",215,0)
 .I $D(RADTYPE($P(NODE,U,3))) M RESULT("dialogAdditionalInformation")=RADDET($P(NODE,U,3))
"RTN","HMPCORD4",216,0)
 Q
"RTN","HMPCORD4",217,0)
 ;
"RTN","HMPCORD4",218,0)
RADTYPE(RADTYPE,RADDET) ;
"RTN","HMPCORD4",219,0)
 ;build radiology type array for reused to load imaging types
"RTN","HMPCORD4",220,0)
 N ABB,CNT,IMGTYP,SUBMIT,TCNT,URG,VALUES,HMPTEMP,HMPX
"RTN","HMPCORD4",221,0)
 D IMTYPSEL^ORWDRA32(.HMPTEMP,"")
"RTN","HMPCORD4",222,0)
 D CAT(.VALUES),TRANS(.VALUES),URGENCY(.VALUES)
"RTN","HMPCORD4",223,0)
 S TCNT=""
"RTN","HMPCORD4",224,0)
 F  S TCNT=$O(HMPTEMP(TCNT)) Q:TCNT=""  D
"RTN","HMPCORD4",225,0)
 .S NODE=HMPTEMP(TCNT)
"RTN","HMPCORD4",226,0)
 .S IMGTYP=$P(NODE,U),ABB=$P(NODE,U,3)
"RTN","HMPCORD4",227,0)
 .D SUBMIT(.VALUES,ABB)
"RTN","HMPCORD4",228,0)
 .S RADTYPE(ABB)=IMGTYP_U_$P(NODE,U,2)_U_$P(NODE,U,4)
"RTN","HMPCORD4",229,0)
 .I $D(VALUES) M RADDET(ABB)=VALUES
"RTN","HMPCORD4",230,0)
 .;Radiology Modifier
"RTN","HMPCORD4",231,0)
 .S I=$O(^RA(79.2,"C",ABB,0)) Q:'I
"RTN","HMPCORD4",232,0)
 .S HMPX=0,CNT=0 F  S HMPX=$O(^RAMIS(71.2,"AB",I,HMPX)) Q:'HMPX  D
"RTN","HMPCORD4",233,0)
 ..S CNT=CNT+1
"RTN","HMPCORD4",234,0)
 ..S RADDET(ABB,"modifier",CNT,"uid")=$$SETUID^HMPUTILS("modifier","",HMPX),RADDET(ABB,"modifier",CNT,"internal")=HMPX
"RTN","HMPCORD4",235,0)
 ..S RADDET(ABB,"modifier",CNT,"name")=$P(^RAMIS(71.2,HMPX,0),U)
"RTN","HMPCORD4",236,0)
 Q
"RTN","HMPCORD4",237,0)
 ;
"RTN","HMPCORD4",238,0)
 ;Transport values
"RTN","HMPCORD4",239,0)
TRANS(RADDET) ;
"RTN","HMPCORD4",240,0)
 N CNT,HMPX
"RTN","HMPCORD4",241,0)
 S CNT=0
"RTN","HMPCORD4",242,0)
 F HMPX="A^AMBULATORY","P^PORTABLE","S^STRETCHER","W^WHEELCHAIR" D
"RTN","HMPCORD4",243,0)
 .S CNT=CNT+1,RADDET("transport",CNT,"uid")=$$SETUID^HMPUTILS("transport","",$P(HMPX,U)),RADDET("transport",CNT,"name")=$P(HMPX,U,2),RADDET("transport",CNT,"internal")=$P(HMPX,U)
"RTN","HMPCORD4",244,0)
 Q
"RTN","HMPCORD4",245,0)
 ;
"RTN","HMPCORD4",246,0)
CAT(RADDET) ;category values
"RTN","HMPCORD4",247,0)
 N CNT,HMPX
"RTN","HMPCORD4",248,0)
 S CNT=0
"RTN","HMPCORD4",249,0)
 F HMPX="I^INPATIENT","O^OUTPATIENT","E^EMPLOYEE","C^CONTRACT","S^SHARING","R^RESEARCH" D
"RTN","HMPCORD4",250,0)
 .S CNT=CNT+1,RADDET("category",CNT,"uid")=$$SETUID^HMPUTILS("transport","",$P(HMPX,U)),RADDET("category",CNT,"name")=$P(HMPX,U,2),RADDET("category",CNT,"internal")=$P(HMPX,U)
"RTN","HMPCORD4",251,0)
 Q
"RTN","HMPCORD4",252,0)
 ;
"RTN","HMPCORD4",253,0)
URGENCY(URG) ; Get the allowable urgencies and default
"RTN","HMPCORD4",254,0)
 N CNT,I,HMPX
"RTN","HMPCORD4",255,0)
 S HMPX="",I=0,CNT=0
"RTN","HMPCORD4",256,0)
 F  S ORX=$O(^ORD(101.42,"S.RA",HMPX)) Q:HMPX=""  D
"RTN","HMPCORD4",257,0)
 . S I=$O(^ORD(101.42,"S.RA",HMPX,0))
"RTN","HMPCORD4",258,0)
 . S URG("urgency",CNT,"uid")=$$SETUID^HMPUTILS("urgency","",I),URG("urgency",CNT,"internal")=I
"RTN","HMPCORD4",259,0)
 . S URG("urgency",CNT,"name")=HMPX
"RTN","HMPCORD4",260,0)
 . S URG("urgency",CNT,"default")="false"
"RTN","HMPCORD4",261,0)
 . S CNT=CNT+1
"RTN","HMPCORD4",262,0)
 S I=$O(^ORD(101.42,"B","ROUTINE",0)) I +I=0 Q
"RTN","HMPCORD4",263,0)
 S CNT=CNT+1
"RTN","HMPCORD4",264,0)
 S URG("urgency",CNT,"uid")=$$SETUID^HMPUTILS("urgency","",I),URG("urgency",CNT,"internal")=I
"RTN","HMPCORD4",265,0)
 S URG("urgency",CNT,"name")="Routine"
"RTN","HMPCORD4",266,0)
 S URG("urgency",CNT,"default")="true"
"RTN","HMPCORD4",267,0)
 Q
"RTN","HMPCORD4",268,0)
 ;
"RTN","HMPCORD4",269,0)
SUBMIT(SUBMIT,IMGTYP) ; Get the locations to which the request may be submitted
"RTN","HMPCORD4",270,0)
 N CNT,FIRST,TMPLST,ASK,HMPX
"RTN","HMPCORD4",271,0)
 S CNT=0
"RTN","HMPCORD4",272,0)
 D EN4^RAO7PC1(IMGTYP,"TMPLST")
"RTN","HMPCORD4",273,0)
 S FIRST=1
"RTN","HMPCORD4",274,0)
 S I=0 F  S I=$O(TMPLST(I)) Q:'I  D
"RTN","HMPCORD4",275,0)
 . S CNT=CNT+1,HMPX=$P(TMPLST(I),U,1,2),SUBMIT("submit",CNT,"name")=$P(HMPX,U,2)
"RTN","HMPCORD4",276,0)
 . S SUBMIT("submit",CNT,"default")=$S(FIRST=1:"true",1:"false")
"RTN","HMPCORD4",277,0)
 . S SUBMIT("submit",CNT,"uid")=$$SETUID^HMPUTILS("imagingLocation","",$P(HMPX,U)),SUBMIT("submit",CNT,"internal")=$P(HMPX,U),FIRST=0
"RTN","HMPCORD4",278,0)
 S HMPX=$$GET^XPAR("ALL","RA SUBMIT PROMPT",1,"Q")
"RTN","HMPCORD4",279,0)
 S ASK=$S($L(HMPX):HMPX,1:1)
"RTN","HMPCORD4",280,0)
 S SUBMIT("askSubmit")=$S(ASK=1:"true",ASK=0:"false",1:"true")
"RTN","HMPCORD4",281,0)
 Q
"RTN","HMPCORD4",282,0)
 ;
"RTN","HMPCORD4",283,0)
QO ;
"RTN","HMPCORD4",284,0)
 N IEN,NAME,NODE,RESULT
"RTN","HMPCORD4",285,0)
 N ERRMSG S ERRMSG="A mumps error occurred while extracting orderable items."
"RTN","HMPCORD4",286,0)
 S IEN=0 F  S IEN=$O(^ORD(101.41,IEN)) Q:IEN'>0  D
"RTN","HMPCORD4",287,0)
 .N $ES,$ET
"RTN","HMPCORD4",288,0)
 .S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPCORD4",289,0)
 .S NODE=$G(^ORD(101.41,IEN,0)) I $P(NODE,U,4)'="Q" Q
"RTN","HMPCORD4",290,0)
 .S NAME=$S($P(NODE,U,2)'="":$P(NODE,U,2),1:$P(NODE,U))
"RTN","HMPCORD4",291,0)
 .S RESULT("name")=NAME
"RTN","HMPCORD4",292,0)
 .S RESULT("uid")=$$SETUID^HMPUTILS("qo","",IEN),RESULT("internal")=IEN
"RTN","HMPCORD4",293,0)
 .S HMPCNT=HMPCNT+1 D ADD^HMPEF("RESULT")
"RTN","HMPCORD4",294,0)
 I IEN'>0 S HMPFINI=1
"RTN","HMPCORD4",295,0)
 Q
"RTN","HMPCORD4",296,0)
 ;
"RTN","HMPCORD4",297,0)
VALIDOI(OITYPE,IEN) ;
"RTN","HMPCORD4",298,0)
 N TEMP,TYPE
"RTN","HMPCORD4",299,0)
 I $G(^ORD(101.43,IEN,0))'=""
"RTN","HMPCORD4",300,0)
 S TEMP=$P($G(^ORD(101.43,IEN,0)),U,2)  ;Added $G for DE5080
"RTN","HMPCORD4",301,0)
 S TYPE=$P(TEMP,";",2)
"RTN","HMPCORD4",302,0)
 S TYPE=$E(TYPE,3,$L(TYPE))
"RTN","HMPCORD4",303,0)
 I OITYPE="" Q TYPE
"RTN","HMPCORD4",304,0)
 I TYPE["PS" Q TYPE
"RTN","HMPCORD4",305,0)
 I OITYPE[TYPE Q TYPE
"RTN","HMPCORD4",306,0)
 Q ""
"RTN","HMPCORD4",307,0)
 ;
"RTN","HMPCORD5")
0^10^B83583685
"RTN","HMPCORD5",1,0)
HMPCORD5 ;SLC/AGP,ASMR/EJK,RRB - Retrieved Orderable Items;Sep 1, 2016 17:27:27
"RTN","HMPCORD5",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**3**;Sep 01, 2011;Build 2
"RTN","HMPCORD5",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","HMPCORD5",4,0)
 ;
"RTN","HMPCORD5",5,0)
 ; DE2497/RRB - Removed unused variable, HMP777
"RTN","HMPCORD5",6,0)
 ;
"RTN","HMPCORD5",7,0)
 ; DE6652 - JD - 9/1/16: Removed code behind synching sign-symptom domain for operational data.
"RTN","HMPCORD5",8,0)
 ;                       SIGNS tag.
"RTN","HMPCORD5",9,0)
 ;
"RTN","HMPCORD5",10,0)
 Q
"RTN","HMPCORD5",11,0)
 ;
"RTN","HMPCORD5",12,0)
IMMTYPE ;
"RTN","HMPCORD5",13,0)
 N ORWLST,ORDT,HMPIMM
"RTN","HMPCORD5",14,0)
 S (ORWLST,ORDT)=""
"RTN","HMPCORD5",15,0)
 S (HMPCNT,HMPLAST,HMPI)=0
"RTN","HMPCORD5",16,0)
 N IMM
"RTN","HMPCORD5",17,0)
 ;D IMMTYPE^ORWPCE2(.ORWLST,ORDT)   ;use existing broker call ORWPCE GET IMMUNIZATION TYPE
"RTN","HMPCORD5",18,0)
 N IEN,CNT,BINDEX S (IEN,CNT)=0
"RTN","HMPCORD5",19,0)
 S:'$G(ORDT) ORDT=DT
"RTN","HMPCORD5",20,0)
 ; ^AUTTIMM - IMMUNIZATION file #9999999.14, ***DBIA2454 subscription needed***
"RTN","HMPCORD5",21,0)
 F  S IEN=$O(^AUTTIMM(IEN)) Q:IEN=""!(IEN'?1N.N)  D
"RTN","HMPCORD5",22,0)
 . I $D(^AUTTIMM(IEN,0))#2,+$P(^(0),"^",7)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$G(^(0))
"RTN","HMPCORD5",23,0)
 . Q
"RTN","HMPCORD5",24,0)
 S IMM="",HMPIMM=""
"RTN","HMPCORD5",25,0)
 F  S IMM=$O(ORWLST(IMM)) Q:IMM=""  D
"RTN","HMPCORD5",26,0)
 . S HMPIMM("localId")=$P(ORWLST(IMM),"^",1)  ;get the ien for each item found
"RTN","HMPCORD5",27,0)
 . S HMPIMM("name")=$P(ORWLST(IMM),"^",2) ;get the name for each item found
"RTN","HMPCORD5",28,0)
 . S HMPIMM("mnemonic")=$P(ORWLST(IMM),"^",3)  ;get the mnemonic for each entry
"RTN","HMPCORD5",29,0)
 . S HMPIMM("uid")=$$SETUID^HMPUTILS("immunization",,HMPIMM("localId"))  ;set the uid string
"RTN","HMPCORD5",30,0)
 . S HMPCNT=HMPCNT+1
"RTN","HMPCORD5",31,0)
 . D ADD^HMPEF("HMPIMM") S HMPLAST=HMPCNT  ;add it to the JSON results array
"RTN","HMPCORD5",32,0)
 . Q
"RTN","HMPCORD5",33,0)
 S HMPFINI=1
"RTN","HMPCORD5",34,0)
 Q
"RTN","HMPCORD5",35,0)
 ;
"RTN","HMPCORD5",36,0)
ALLTYPE ; deprecated
"RTN","HMPCORD5",37,0)
 ;N ORX,ROOT,XP,CNT,ORFILE,ORSRC,ORIEN,ORREAX,ALLCNT,ALLLAST,ALLITEM
"RTN","HMPCORD5",38,0)
 ;S ORIEN=0,CNT=0,ORSRC=0,ORFILE="",ALLCNT=0,ALLLAST=0
"RTN","HMPCORD5",39,0)
 ;S X=""
"RTN","HMPCORD5",40,0)
 ;F ROOT="^GMRD(120.82)","^PSNDF(50.6)","^PSNDF(50.67)","^PSDRUG(""B"")","^PS(50.416)","^PS(50.605)" D
"RTN","HMPCORD5",41,0)
 ;F ROOT="^GMRD(120.82,""B"")","^GMRD(120.82,""D"")","^PSDRUG(""C"")","^PS(50.416,""P"")","^PS(50.605,""C"")",$$B^PSNAPIS,$$T^PSNAPIS,"^PSDRUG(""B"")" D
"RTN","HMPCORD5",42,0)
 ;F ROOT="^GMRD(120.82,""B"")","^PSDRUG(""C"")","^PS(50.416,""P"")","^PS(50.605,""C"")",$$B^PSNAPIS,$$T^PSNAPIS,"^PSDRUG(""B"")" D
"RTN","HMPCORD5",43,0)
 ;. S ORSRC=$G(ORSRC)+1,ORFILE=$P(ROOT,",",1)_")",ORSRC(ORSRC)=$P($T(FILENAME+ORSRC),";;",2)
"RTN","HMPCORD5",44,0)
 ;. I (ORSRC'=2),(ORSRC'=6) S:'$D(Y(ORIEN_";"_ROOT)) CNT=CNT+1,Y(ORIEN_";"_ROOT)=ORSRC_U_ORSRC(ORSRC)_U_U_U_"TOP"_U_"+"
"RTN","HMPCORD5",45,0)
 ;. I ORSRC=1!(ORSRC=2) D
"RTN","HMPCORD5",46,0)
 ;.. F  S X=$O(@ROOT@(X)) Q:X=""  D
"RTN","HMPCORD5",47,0)
 ;... I ORSRC=1,X="OTHER ALLERGY/ADVERSE REACTION" Q  ;don't send this entry
"RTN","HMPCORD5",48,0)
 ;... S ORIEN=$O(@ROOT@(X,0))
"RTN","HMPCORD5",49,0)
 ;... I $L($T(SCREEN^XTID)) I $$SCREEN^XTID(120.82,.01,ORIEN_",") Q  ;233 Is term active?
"RTN","HMPCORD5",50,0)
 ;... I ORSRC=2 S:'$D(Y(ORIEN_";"_ROOT)) CNT=CNT+1,Y(ORIEN_";"_ROOT)=ORIEN_U_$P($G(^GMRD(120.82,+ORIEN,0)),U,1)_" <"_X_">"_ROOT
"RTN","HMPCORD5",51,0)
 ;... I ORSRC'=2  S:'$D(Y(ORIEN_";"_ROOT)) CNT=CNT+1,Y(ORIEN_";"_ROOT)=ORIEN_U_X_ROOT
"RTN","HMPCORD5",52,0)
 ;... S Y(ORIEN_";"_ROOT)=Y(ORIEN_";"_ROOT)_U_$P($G(^GMRD(120.82,+ORIEN,0)),U,2)_U_$S(ORSRC=2:1,1:ORSRC)
"RTN","HMPCORD5",53,0)
 ;.. S XP=X F  S XP=$O(@ROOT@(XP)) Q:XP=""  Q:$E(XP,1,$L(X))'=X  D
"RTN","HMPCORD5",54,0)
 ;... I ORSRC=1,XP="OTHER ALLERGY/ADVERSE REACTION" Q  ;don't send this entry
"RTN","HMPCORD5",55,0)
 ;... S ORIEN=$O(@ROOT@(XP,0))
"RTN","HMPCORD5",56,0)
 ;... I $L($T(SCREEN^XTID)) I $$SCREEN^XTID(120.82,.01,ORIEN_",") Q  ;233 Is term active?
"RTN","HMPCORD5",57,0)
 ;... I ORSRC=2 S:'$D(Y(ORIEN_";"_ROOT)) CNT=CNT+1,Y(ORIEN_";"_ROOT)=ORIEN_U_$P($G(^GMRD(120.82,+ORIEN,0)),U,1)_" <"_XP_">"_ROOT ; partial matches
"RTN","HMPCORD5",58,0)
 ;... I ORSRC'=2  S:'$D(Y(ORIEN_";"_ROOT)) CNT=CNT+1,Y(ORIEN_";"_ROOT)=ORIEN_U_XP_ROOT
"RTN","HMPCORD5",59,0)
 ;... S:'$D(Y(ORIEN_";"_ROOT)) Y(ORIEN_";"_ROOT)=Y(ORIEN_";"_ROOT)_U_$P($G(^GMRD(120.82,+ORIEN,0)),U,2)_U_$S(ORSRC=2:1,1:ORSRC)
"RTN","HMPCORD5",60,0)
 ;.. I (ORSRC>2),(ORSRC'=4),(ORSRC'=5),(ORSRC'=6) D
"RTN","HMPCORD5",61,0)
 ;.. N CODE,LIST,VAL,NAME
"RTN","HMPCORD5",62,0)
 ;.. S CODE=$S(ORSRC=3:"S VAL=$$TGTOG2^PSNAPIS(X,.LIST)",ORSRC=4:"D TRDNAME(X,.LIST)",ORSRC=7:"D INGSRCH(X,.LIST)",ORSRC=8:"D CLASRCH(X,.LIST)",1:"") Q:'$L(CODE)
"RTN","HMPCORD5",63,0)
 ;.. X CODE I $D(LIST) S ORIEN=0 F  S ORIEN=$O(LIST(ORIEN)) Q:'ORIEN  D
"RTN","HMPCORD5",64,0)
 ;... S NAME=$P(LIST(ORIEN),U,2)
"RTN","HMPCORD5",65,0)
 ;... Q:$E($P(LIST(ORIEN),U,2),1,$L(X))'=X
"RTN","HMPCORD5",66,0)
 ;... I $L($T(SCREEN^XTID)) I $$SCREEN^XTID($S(ORSRC=3:50.6,(ORSRC=4):50.6,ORSRC=7:50.416,ORSRC=8:50.605,1:0),.01,ORIEN_",") Q
"RTN","HMPCORD5",67,0)
 ;... S:'$D(Y(ORIEN_";"_ROOT)) CNT=CNT+1,Y(ORIEN_";"_ROOT)=ORIEN_U_NAME_ROOT_U_"D"_U_ORSRC
"RTN","HMPCORD5",68,0)
 ;.. I ORSRC=4 D
"RTN","HMPCORD5",69,0)
 ;.. N CODE,LIST,VAL,NAME
"RTN","HMPCORD5",70,0)
 ;.. S CODE="D TRDNAME(X,.LIST)"
"RTN","HMPCORD5",71,0)
 ;.. X CODE I $D(LIST) S ORIEN=0 F  S ORIEN=$O(LIST(ORIEN)) Q:'ORIEN  D
"RTN","HMPCORD5",72,0)
 ;... S NAME=$P(LIST(ORIEN),U,2)
"RTN","HMPCORD5",73,0)
 ;... Q:$E($P(LIST(ORIEN),U,2),1,$L(X))'=X
"RTN","HMPCORD5",74,0)
 ;... I $L($T(SCREEN^XTID)) I $$SCREEN^XTID(50.6,.01,+LIST(ORIEN)_",") Q
"RTN","HMPCORD5",75,0)
 ;... S:'$D(Y(ORIEN_";"_ROOT)) CNT=CNT+1,Y(ORIEN_";"_ROOT)=+LIST(ORIEN)_U_NAME_ROOT_U_"D"_U_ORSRC
"RTN","HMPCORD5",76,0)
 ;S CNT=""
"RTN","HMPCORD5",77,0)
 ;F  S CNT=$O(Y(CNT)) Q:CNT=""  D
"RTN","HMPCORD5",78,0)
 ;. K ALLERGY
"RTN","HMPCORD5",79,0)
 ;. S ALLITEM=$G(Y(CNT))
"RTN","HMPCORD5",80,0)
 ;. I Y(CNT)["^TOP^+" Q
"RTN","HMPCORD5",81,0)
 ;. I Y(CNT)'["^TOP^+" D
"RTN","HMPCORD5",82,0)
 ;.. S ALLERGY("localId")=$P(ALLITEM,"^",1)
"RTN","HMPCORD5",83,0)
 ;.. S ALLERGY("name")=$P(ALLITEM,"^",2)
"RTN","HMPCORD5",84,0)
 ;.. S ALLERGY("root")=$P(ALLITEM,"^",3)
"RTN","HMPCORD5",85,0)
 ;.. S ALLERGY("uid")=$$SETUID^HMPUTILS("allergy-list",,ALLERGY("localId")_";"_$TR(ALLERGY("root"),"""",""))  ;set the uid string
"RTN","HMPCORD5",86,0)
 ;.. S HMPCNT=$G(HMPCNT)+1 D ADD^HMPEF("ALLERGY") S HMPLAST=HMPCNT
"RTN","HMPCORD5",87,0)
 ;.. Q
"RTN","HMPCORD5",88,0)
 ;. Q
"RTN","HMPCORD5",89,0)
 ;S HMPFINI=1
"RTN","HMPCORD5",90,0)
 ;K X,Y
"RTN","HMPCORD5",91,0)
 Q
"RTN","HMPCORD5",92,0)
 ;
"RTN","HMPCORD5",93,0)
VTYPE ; ;VITALS TYPE
"RTN","HMPCORD5",94,0)
 N IEN
"RTN","HMPCORD5",95,0)
 S (HMPCNT,HMPI,HMPLAST,IEN)=0
"RTN","HMPCORD5",96,0)
 F  S IEN=$O(^GMRD(120.51,IEN)) Q:IEN=""!(IEN'?1N.N)  D
"RTN","HMPCORD5",97,0)
 . S VTYPE("localId")=IEN
"RTN","HMPCORD5",98,0)
 . S VTYPE("name")=$P(^GMRD(120.51,IEN,0),"^",1)
"RTN","HMPCORD5",99,0)
 . S VTYPE("abbreviation")=$P(^GMRD(120.51,IEN,0),"^",2)
"RTN","HMPCORD5",100,0)
 . S VTYPE("rate")=$P(^GMRD(120.51,IEN,0),"^",4)
"RTN","HMPCORD5",101,0)
 . I VTYPE("rate")]"" S VTYPE("rate")=$S(VTYPE("rate")=1:"YES",1:"NO")
"RTN","HMPCORD5",102,0)
 . S VTYPE("pce")=$P(^GMRD(120.51,IEN,0),"^",7)
"RTN","HMPCORD5",103,0)
 . S VTYPE("vuid")="urn:va:vuid:"_$P($G(^GMRD(120.51,IEN,"VUID")),"^",1)
"RTN","HMPCORD5",104,0)
 . S VTYPE("masterVuid")=$P($G(^GMRD(120.51,IEN,"VUID")),"^",2)
"RTN","HMPCORD5",105,0)
 . I VTYPE("masterVuid")]"" S VTYPE("masterVuid")=$S(VTYPE("masterVuid")=1:"YES",1:"NO")
"RTN","HMPCORD5",106,0)
 . S VTYPE("effective")=$P($G(^GMRD(120.51,IEN,"TERMSTATUS",1,0)),"^",1)
"RTN","HMPCORD5",107,0)
 . I VTYPE("effective")]"" S VTYPE("effective")=$$JSONDT^HMPUTILS(VTYPE("effective"))
"RTN","HMPCORD5",108,0)
 . S VTYPE("status")=$P($G(^GMRD(120.51,IEN,"TERMSTATUS",1,0)),"^",2)
"RTN","HMPCORD5",109,0)
 . I VTYPE("status")]"" S VTYPE("status")=$S(VTYPE("status")=1:"ACTIVE",1:"INACTIVE")
"RTN","HMPCORD5",110,0)
 . S VTYPE("uid")=$$SETUID^HMPUTILS("vital-type",,VTYPE("localId"))
"RTN","HMPCORD5",111,0)
 . S HMPCNT=HMPCNT+1 D ADD^HMPEF("VTYPE") S HMPLAST=HMPCNT
"RTN","HMPCORD5",112,0)
 S HMPFINI=1
"RTN","HMPCORD5",113,0)
 K VTYPE
"RTN","HMPCORD5",114,0)
 Q
"RTN","HMPCORD5",115,0)
 ;
"RTN","HMPCORD5",116,0)
VQUAL ; VITALS QUALIFIER
"RTN","HMPCORD5",117,0)
 N IEN,I
"RTN","HMPCORD5",118,0)
 S (HMPCNT,HMPI,HMPLAST,IEN)=0
"RTN","HMPCORD5",119,0)
 F  S IEN=$O(^GMRD(120.52,IEN)) Q:IEN=""!(IEN'?1N.N)  D
"RTN","HMPCORD5",120,0)
 . S VQUAL("localId")=IEN
"RTN","HMPCORD5",121,0)
 . S VQUAL("synonym")=$P(^GMRD(120.52,IEN,0),"^",2)
"RTN","HMPCORD5",122,0)
 . S I=0
"RTN","HMPCORD5",123,0)
 . K VQUAL("vtype") ;ejk - stop bleed over from previous extracts. 
"RTN","HMPCORD5",124,0)
 . F  S I=$O(^GMRD(120.52,IEN,1,I)) Q:I=""!(I'?1N.N)  D
"RTN","HMPCORD5",125,0)
 .. S VQUAL("vtype",I,"vitalType")=$P($G(^GMRD(120.52,IEN,1,I,0)),"^",1)
"RTN","HMPCORD5",126,0)
 .. S VQUAL("vtype",I,"category")=$P($G(^GMRD(120.52,IEN,1,I,0)),"^",2)
"RTN","HMPCORD5",127,0)
 .. ;ejk DE294 - vital type and vital category need to be presented as urn entries and not the name
"RTN","HMPCORD5",128,0)
 .. ;I VQUAL("vtype",I,"vitalType")]"" S VQUAL("vtype",I,"vitalType")=$P($G(^GMRD(120.51,I,0)),"^",1)
"RTN","HMPCORD5",129,0)
 .. ;I VQUAL("vtype",I,"category")]"" S VQUAL("vtype",I,"category")=$P($G(^GMRD(120.53,I,0)),"^",1)
"RTN","HMPCORD5",130,0)
 .. I VQUAL("vtype",I,"vitalType")]"" S VQUAL("vtype",I,"vitalType")=$$SETUID^HMPUTILS("vital-type",,VQUAL("vtype",I,"vitalType"))
"RTN","HMPCORD5",131,0)
 .. I VQUAL("vtype",I,"category")]"" S VQUAL("vtype",I,"category")=$$SETUID^HMPUTILS("vital-category",,VQUAL("vtype",I,"category"))
"RTN","HMPCORD5",132,0)
 .. Q
"RTN","HMPCORD5",133,0)
 . S VQUAL("vuid")="urn:va:vuid:"_$P($G(^GMRD(120.52,IEN,"VUID")),"^",1)
"RTN","HMPCORD5",134,0)
 . S VQUAL("masterVuid")=$P($G(^GMRD(120.52,IEN,"VUID")),"^",2)
"RTN","HMPCORD5",135,0)
 . I VQUAL("masterVuid")]"" S VQUAL("masterVuid")=$S(VQUAL("masterVuid")=1:"YES",1:"NO")
"RTN","HMPCORD5",136,0)
 . S VQUAL("effectiveDate")=$P($G(^GMRD(120.52,IEN,"TERMSTATUS",1,0)),"^",1)
"RTN","HMPCORD5",137,0)
 . I VQUAL("effectiveDate")]"" S VQUAL("effectiveDate")=$$JSONDT^HMPUTILS(VQUAL("effectiveDate"))
"RTN","HMPCORD5",138,0)
 . S VQUAL("status")=$P($G(^GMRD(120.52,IEN,"TERMSTATUS",1,0)),"^",2)
"RTN","HMPCORD5",139,0)
 . I VQUAL("status")]"" S VQUAL("status")=$S(VQUAL("status")=1:"ACTIVE",1:"INACTIVE")
"RTN","HMPCORD5",140,0)
 . S VQUAL("uid")=$$SETUID^HMPUTILS("vital-qualifier",,VQUAL("localId"))
"RTN","HMPCORD5",141,0)
 . S VQUAL("qualifier")=$$SETUID^HMPUTILS("vital-qualifier",,VQUAL("localId"))
"RTN","HMPCORD5",142,0)
 . ;ejk DE295 do not include qualifier if it is the same value as the uid
"RTN","HMPCORD5",143,0)
 . I VQUAL("uid")=VQUAL("qualifier") K VQUAL("qualifier")
"RTN","HMPCORD5",144,0)
 . S HMPCNT=HMPCNT+1 D ADD^HMPEF("VQUAL") S HMPLAST=HMPCNT
"RTN","HMPCORD5",145,0)
 S HMPFINI=1
"RTN","HMPCORD5",146,0)
 K VQUAL
"RTN","HMPCORD5",147,0)
 Q
"RTN","HMPCORD5",148,0)
 ;
"RTN","HMPCORD5",149,0)
VCAT ;VITALS CATAGORY
"RTN","HMPCORD5",150,0)
 N IEN,I
"RTN","HMPCORD5",151,0)
 S (HMPCNT,HMPI,HMPLAST,IEN)=0
"RTN","HMPCORD5",152,0)
 F  S IEN=$O(^GMRD(120.53,IEN)) Q:IEN=""!(IEN'?1N.N)  D
"RTN","HMPCORD5",153,0)
 . S VCAT("localId")=IEN
"RTN","HMPCORD5",154,0)
 . I $P($G(^GMRD(120.53,IEN,0)),"^",1)]"" S VCAT("category")=$P(^GMRD(120.53,IEN,0),"^",1)
"RTN","HMPCORD5",155,0)
 . I $P($G(^GMRD(120.53,IEN,0)),"^",2)]"" S VCAT("synonym")=$P(^GMRD(120.53,IEN,0),"^",2)
"RTN","HMPCORD5",156,0)
 . I $G(VCAT("synonym"))="" K VCAT("synonym")
"RTN","HMPCORD5",157,0)
 . S I=0
"RTN","HMPCORD5",158,0)
 . ;EJK - kill off vtype array to stop inheriting values from previous extracts
"RTN","HMPCORD5",159,0)
 . K VCAT("vtype")
"RTN","HMPCORD5",160,0)
 . F  S I=$O(^GMRD(120.53,IEN,1,I)) Q:I=""!(I'?1N.N)  D
"RTN","HMPCORD5",161,0)
 .. ;ejk DE298 do not send null values. 
"RTN","HMPCORD5",162,0)
 .. I $P($G(^GMRD(120.53,IEN,1,I,0)),"^",1)]"" S VCAT("vtype",I,"vitalType")=$P($G(^GMRD(120.53,IEN,1,I,0)),"^",1)
"RTN","HMPCORD5",163,0)
 .. I VCAT("vtype",I,"vitalType")]"" S VCAT("vtype",I,"vitalType")=$$SETUID^HMPUTILS("vital-type",,VCAT("vtype",I,"vitalType"))
"RTN","HMPCORD5",164,0)
 .. I $P($G(^GMRD(120.53,IEN,1,I,0)),"^",3)]"" S VCAT("vtype",I,"maxEntries")=$P($G(^GMRD(120.53,IEN,1,I,0)),"^",3)
"RTN","HMPCORD5",165,0)
 .. I $P($G(^GMRD(120.53,IEN,1,I,0)),"^",5)]"" S VCAT("vtype",I,"printOrder")=$P($G(^GMRD(120.53,IEN,1,I,0)),"^",5)
"RTN","HMPCORD5",166,0)
 .. I $P($G(^GMRD(120.53,IEN,1,I,0)),"^",6)]"" S VCAT("vtype",I,"editOrder")=$P($G(^GMRD(120.53,IEN,1,I,0)),"^",6)
"RTN","HMPCORD5",167,0)
 .. I $P($G(^GMRD(120.53,IEN,1,I,0)),"^",7)]"" S VCAT("vtype",I,"defaultQualifier")=$P($G(^GMRD(120.53,IEN,1,I,0)),"^",7),VCAT("vtype",I,"defaultQualifier")=$$SETUID^HMPUTILS("vital-qualifier",,VCAT("vtype",I,"defaultQualifier"))
"RTN","HMPCORD5",168,0)
 .. Q
"RTN","HMPCORD5",169,0)
 . S VCAT("vuid")="urn:va:vuid:"_$P($G(^GMRD(120.53,IEN,"VUID")),"^",1)
"RTN","HMPCORD5",170,0)
 . S VCAT("masterVuid")=$P($G(^GMRD(120.53,IEN,"VUID")),"^",2)
"RTN","HMPCORD5",171,0)
 . I VCAT("masterVuid")]"" S VCAT("masterVuid")=$S(VCAT("masterVuid")=1:"YES",1:"NO")
"RTN","HMPCORD5",172,0)
 . S VCAT("effectiveDate")=$P($G(^GMRD(120.53,IEN,"TERMSTATUS",1,0)),"^",1)
"RTN","HMPCORD5",173,0)
 . I VCAT("effectiveDate")]"" S VCAT("effectiveDate")=$$JSONDT^HMPUTILS(VCAT("effectiveDate"))
"RTN","HMPCORD5",174,0)
 . S VCAT("status")=$P($G(^GMRD(120.53,IEN,"TERMSTATUS",1,0)),"^",2)
"RTN","HMPCORD5",175,0)
 . I VCAT("status")]"" S VCAT("status")=$S(VCAT("status")=1:"ACTIVE",1:"INACTIVE")
"RTN","HMPCORD5",176,0)
 . S VCAT("uid")=$$SETUID^HMPUTILS("vital-category",,VCAT("localId"))
"RTN","HMPCORD5",177,0)
 . S HMPCNT=HMPCNT+1 D ADD^HMPEF("VCAT") S HMPLAST=HMPCNT
"RTN","HMPCORD5",178,0)
 . Q
"RTN","HMPCORD5",179,0)
 S HMPFINI=1
"RTN","HMPCORD5",180,0)
 K VCAT
"RTN","HMPCORD5",181,0)
 Q
"RTN","HMPCORD5",182,0)
 ;
"RTN","HMPCORD5",183,0)
INGSRCH(NAME,LIST) ;
"RTN","HMPCORD5",184,0)
 K ^TMP($J,"ORWDAL32")
"RTN","HMPCORD5",185,0)
 D NAME^PSN50P41(NAME,"ORWDAL32")
"RTN","HMPCORD5",186,0)
 I $D(^TMP($J,"ORWDAL32","P")) D
"RTN","HMPCORD5",187,0)
 . N I S I="" F  S I=$O(^TMP($J,"ORWDAL32","P",I)) Q:I=""  D
"RTN","HMPCORD5",188,0)
 .. N J S J=0 F  S J=$O(^TMP($J,"ORWDAL32","P",I,J)) Q:'J  S LIST(J)=J_U_I
"RTN","HMPCORD5",189,0)
 K ^TMP($J,"ORWDAL32")
"RTN","HMPCORD5",190,0)
 Q
"RTN","HMPCORD5",191,0)
CLASRCH(NAME,LIST) ;
"RTN","HMPCORD5",192,0)
 K ^TMP($J,"ORWDAL32")
"RTN","HMPCORD5",193,0)
 D C^PSN50P65(,NAME,"ORWDAL32")
"RTN","HMPCORD5",194,0)
 I $D(^TMP($J,"ORWDAL32","C")) D
"RTN","HMPCORD5",195,0)
 . N I S I="" F  S I=$O(^TMP($J,"ORWDAL32","C",I)) Q:I=""  D
"RTN","HMPCORD5",196,0)
 .. N J S J=0 F  S J=$O(^TMP($J,"ORWDAL32","C",I,J)) Q:'J  S LIST(J)=J_U_$G(^TMP($J,"ORWDAL32",J,1))
"RTN","HMPCORD5",197,0)
 K ^TMP($J,"ORWDAL32")
"RTN","HMPCORD5",198,0)
 Q
"RTN","HMPCORD5",199,0)
TRDNAME(NAME,LIST) ;
"RTN","HMPCORD5",200,0)
 K ^TMP($J,"ORWDAL32")
"RTN","HMPCORD5",201,0)
 D ALL^PSN5067(,NAME,,"ORWDAL32")
"RTN","HMPCORD5",202,0)
 I $D(^TMP($J,"ORWDAL32","B")) D
"RTN","HMPCORD5",203,0)
 . N I S I="" F  S I=$O(^TMP($J,"ORWDAL32","B",I)) Q:I=""  D
"RTN","HMPCORD5",204,0)
 .. N J,K S J=$O(^TMP($J,"ORWDAL32","B",I,0)) Q:'J  S K=$$TGTOG^PSNAPIS(I),LIST(J)=K_U_$G(^TMP($J,"ORWDAL32",J,4))
"RTN","HMPCORD5",205,0)
 K ^TMP($J,"ORWDAL32")
"RTN","HMPCORD5",206,0)
 Q
"RTN","HMPCORD5",207,0)
FILENAME ; Display text of filenames for search treeview
"RTN","HMPCORD5",208,0)
 ;;VA Allergies File
"RTN","HMPCORD5",209,0)
 ;;VA Allergies File (Synonyms)  SPACER ONLY - NOT DISPLAYED
"RTN","HMPCORD5",210,0)
 ;;National Drug File - Generic Drug Name
"RTN","HMPCORD5",211,0)
 ;;National Drug file - Trade Name
"RTN","HMPCORD5",212,0)
 ;;Local Drug File
"RTN","HMPCORD5",213,0)
 ;;Local Drug File (Synonyms)  SPACER ONLY - NOT DISPLAYED
"RTN","HMPCORD5",214,0)
 ;;Drug Ingredients File
"RTN","HMPCORD5",215,0)
 ;;VA Drug Class File
"RTN","HMPCORD5",216,0)
 ;;
"RTN","HMPCPAT")
1^20
"RTN","HMPCRPC1")
0^13^B113427224
"RTN","HMPCRPC1",1,0)
HMPCRPC1 ;SLC/AGP,ASMR/RRB,CK,JD - Patient and User routine;Aug 10, 2016 11:10:07
"RTN","HMPCRPC1",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1,3**;May 15, 2016;Build 2
"RTN","HMPCRPC1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","HMPCRPC1",4,0)
 ;
"RTN","HMPCRPC1",5,0)
 ; External References          DBIA#
"RTN","HMPCRPC1",6,0)
 ; -------------------          -----
"RTN","HMPCRPC1",7,0)
 ; ^DPT                         10035
"RTN","HMPCRPC1",8,0)
 ; GET1^DIQ(2,...,.121           4080  ;DE6363
"RTN","HMPCRPC1",9,0)
 ; GETS^DIQ(200                 10060
"RTN","HMPCRPC1",10,0)
 ;
"RTN","HMPCRPC1",11,0)
 ;DE4474 - JD - 8/10/16: If there are KEYS that don't exist, instead of returning nothing,
"RTN","HMPCRPC1",12,0)
 ;                       return the KEYS that do exist.
"RTN","HMPCRPC1",13,0)
 ;
"RTN","HMPCRPC1",14,0)
 Q
"RTN","HMPCRPC1",15,0)
 ;
"RTN","HMPCRPC1",16,0)
GETADD(VALUES,DFN) ;
"RTN","HMPCRPC1",17,0)
 K VAPA
"RTN","HMPCRPC1",18,0)
 D ADD^VADPT
"RTN","HMPCRPC1",19,0)
 N INC,NUM,TEMP
"RTN","HMPCRPC1",20,0)
 I VAPA(12)=1 D
"RTN","HMPCRPC1",21,0)
 .I $L(VAPA(13))>0 S VALUES("confidentIalAddress","street",0)=VAPA(13)
"RTN","HMPCRPC1",22,0)
 .I $L(VAPA(14))>0 S VALUES("confidentIalAddress","street",1)=VAPA(14)
"RTN","HMPCRPC1",23,0)
 .I $L(VAPA(15))>0 S VALUES("confidentIalAddress","street",2)=VAPA(15)
"RTN","HMPCRPC1",24,0)
 .I $L(VAPA(16))>0 S VALUES("confidentIalAddress","city")=VAPA(16)
"RTN","HMPCRPC1",25,0)
 .I $L(VAPA(17))>0 S VALUES("confidentIalAddress","state")=$P(VAPA(17),U,2)
"RTN","HMPCRPC1",26,0)
 .I $L(VAPA(18))>0 S VALUES("confidentIalAddress","zip")=VAPA(18)
"RTN","HMPCRPC1",27,0)
 .I $L(VAPA(20))>0 S VALUES("confidentIalAddress","startDate")=$P(VAPA(20),U,2)
"RTN","HMPCRPC1",28,0)
 .I $L(VAPA(21))>0 S VALUES("confidentIalAddress","stopDate")=$P(VAPA(21),U,2)
"RTN","HMPCRPC1",29,0)
 .S INC=0,NUM=0 F  S INC=$O(VAPA(22,INC)) Q:INC=""  D
"RTN","HMPCRPC1",30,0)
 ..S NUM=NUM+1,VALUES("confidentIalAddress","catgories",NUM,"category")=$P(VAPA(22,INC),U,2)
"RTN","HMPCRPC1",31,0)
 ..S VALUES("confidentIalAddress","catgories",NUM,"status")=$S($P(VAPA(22,INC),U,3)="Y":"true",1:"false")
"RTN","HMPCRPC1",32,0)
 ;
"RTN","HMPCRPC1",33,0)
 ;I $L(VAPA(1))>0 S VALUES("address","street",0)=VAPA(1)
"RTN","HMPCRPC1",34,0)
 ;I $L(VAPA(2))>0 S VALUES("address","street",1)=VAPA(2)
"RTN","HMPCRPC1",35,0)
 ;I $L(VAPA(3))>0 S VALUES("address","street",2)=VAPA(3)
"RTN","HMPCRPC1",36,0)
 ;I $L(VAPA(4))>0 S VALUES("address","city")=VAPA(4)
"RTN","HMPCRPC1",37,0)
 ;I $L(VAPA(5))>0 S VALUES("address","state")=$P(VAPA(5),U,2)
"RTN","HMPCRPC1",38,0)
 ;I $L(VAPA(6))>0 S VALUES("address","zip")=VAPA(6)
"RTN","HMPCRPC1",39,0)
 I VAPA(9)]"" S VALUES("temporaryAddress","startDate")=$P(VAPA(9),U,2)
"RTN","HMPCRPC1",40,0)
 I VAPA(10)]"" S VALUES("temporaryAddress","stopDate")=$P(VAPA(10),U,2)
"RTN","HMPCRPC1",41,0)
ADDX ;
"RTN","HMPCRPC1",42,0)
 ;I $L(VAPA(8))>0 S VALUES("address","phone")=VAPA(8)
"RTN","HMPCRPC1",43,0)
 I $P($G(^DPT(DFN,.13)),U,3)'="" S VALUES("email")=$P($G(^DPT(DFN,.13)),U,3)  ;ICR 10035
"RTN","HMPCRPC1",44,0)
 I +$P($G(^DPT(DFN,.11)),U,16)>0 S VALUES("badAddress")=$$GET1^DIQ(2,DFN_",",.121) ;ICR 4080
"RTN","HMPCRPC1",45,0)
 D KVAR^VADPT
"RTN","HMPCRPC1",46,0)
 Q
"RTN","HMPCRPC1",47,0)
 ;
"RTN","HMPCRPC1",48,0)
GETBSA(DFN) ;
"RTN","HMPCRPC1",49,0)
 N DATE,DATA,NFOUND,TEST,TEXT
"RTN","HMPCRPC1",50,0)
 S TEST=""
"RTN","HMPCRPC1",51,0)
 D BSA^PXRMBMI(DFN,1,0,DT,.NFOUND,.TEST,.DATE,.DATA,.TEXT)
"RTN","HMPCRPC1",52,0)
 Q +$G(DATA(1,"BSA"))
"RTN","HMPCRPC1",53,0)
 ;
"RTN","HMPCRPC1",54,0)
GETBMI(DFN) ;
"RTN","HMPCRPC1",55,0)
 ;  BMI(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) 
"RTN","HMPCRPC1",56,0)
 N DATE,DATA,NFOUND,TEST,TEXT
"RTN","HMPCRPC1",57,0)
 D BMI^PXRMBMI(DFN,1,0,DT,.NFOUND,.TEST,.DATE,.DATA,.TEXT)
"RTN","HMPCRPC1",58,0)
 Q +$G(DATA(1,"BMI"))
"RTN","HMPCRPC1",59,0)
 ;
"RTN","HMPCRPC1",60,0)
GETDEM(VALUES,DFN) ;
"RTN","HMPCRPC1",61,0)
 D DEM^VADPT
"RTN","HMPCRPC1",62,0)
 S VALUES("name")=VADM(1)
"RTN","HMPCRPC1",63,0)
 I VADM(2)]"" S VALUES("ssn")=$P(VADM(2),U,2)
"RTN","HMPCRPC1",64,0)
 I VADM(3)]"" S VALUES("dob")=$P(VADM(3),U,2)
"RTN","HMPCRPC1",65,0)
 I VADM(4)]"" S VALUES("age")=VADM(4)
"RTN","HMPCRPC1",66,0)
 I VADM(5)]"" S VALUES("gender")=$P(VADM(5),U,2)
"RTN","HMPCRPC1",67,0)
 I VADM(6)]"" S VALUES("dateDeath")=$P(VADM(6),U,2)
"RTN","HMPCRPC1",68,0)
 I VADM(7)]"" S VALUES("remarks")=VADM(7)
"RTN","HMPCRPC1",69,0)
 I VADM(8)]"" S VALUES("race")=$P(VADM(8),U,2)
"RTN","HMPCRPC1",70,0)
 D KVAR^VADPT
"RTN","HMPCRPC1",71,0)
 Q
"RTN","HMPCRPC1",72,0)
 ;
"RTN","HMPCRPC1",73,0)
GETKEYS(VALUES,USER) ;
"RTN","HMPCRPC1",74,0)
 N NAME,HMPERR,HMPLIST,CNT
"RTN","HMPCRPC1",75,0)
 ; DE4474 - Replaced LIST^DIC with GETS^DIQ since the former would kill the output array if
"RTN","HMPCRPC1",76,0)
 ; there were any errors.  Therefore, NO keys would have been extracted even if there were 
"RTN","HMPCRPC1",77,0)
 ; only one non-existent key.
"RTN","HMPCRPC1",78,0)
 ; The "N" flag will signal the API not to create an entry in HMPLIST array if the value of 
"RTN","HMPCRPC1",79,0)
 ; the field is null.  So, if there is a non-existent key, it will NOT have a description
"RTN","HMPCRPC1",80,0)
 ; and therefore will NOT have an entry in HMPLIST.  This way, the existent keys will be 
"RTN","HMPCRPC1",81,0)
 ; extracted and the non-existent keys will be skipped.
"RTN","HMPCRPC1",82,0)
 D GETS^DIQ(200,USER_",","51*","EN","HMPLIST","HMPERR")  ;ICR 10060
"RTN","HMPCRPC1",83,0)
 S CNT=0 F  S CNT=$O(HMPLIST(200.051,CNT)) Q:CNT'>0  D
"RTN","HMPCRPC1",84,0)
 . S NAME=$G(HMPLIST(200.051,CNT,.01,"E")) Q:NAME=""
"RTN","HMPCRPC1",85,0)
 . S VALUES("vistaKeys",NAME)="TRUE"
"RTN","HMPCRPC1",86,0)
 Q
"RTN","HMPCRPC1",87,0)
 ;
"RTN","HMPCRPC1",88,0)
GETNOK(VALUES,DFN,TYPE) ;
"RTN","HMPCRPC1",89,0)
 K VAOA
"RTN","HMPCRPC1",90,0)
 S VAOA("A")=TYPE
"RTN","HMPCRPC1",91,0)
 N CNT,CONTACT
"RTN","HMPCRPC1",92,0)
 S CONTACT=$S(TYPE=3:"secondary",1:"primary")
"RTN","HMPCRPC1",93,0)
 S CNT=$S(TYPE=3:2,1:1)
"RTN","HMPCRPC1",94,0)
 D OAD^VADPT
"RTN","HMPCRPC1",95,0)
 ;
"RTN","HMPCRPC1",96,0)
 I VAOA(9)]"" S VALUES("nok",CNT,"name")=VAOA(9)
"RTN","HMPCRPC1",97,0)
 I VAOA(10)]"" S VALUES("nok",CNT,"relationship")=VAOA(10)
"RTN","HMPCRPC1",98,0)
 I VAOA(1)]"" S VALUES("nok",CNT,"address","street",1)=VAOA(1)
"RTN","HMPCRPC1",99,0)
 I VAOA(2)]"" S VALUES("nok",CNT,"address","street",2)=VAOA(2)
"RTN","HMPCRPC1",100,0)
 I VAOA(3)]"" S VALUES("nok",CNT,"address","street",3)=VAOA(3)
"RTN","HMPCRPC1",101,0)
 I VAOA(4)]"" S VALUES("nok",CNT,"address","city")=VAOA(4)
"RTN","HMPCRPC1",102,0)
 I VAOA(5)]"" S VALUES("nok",CNT,"address","state")=$P(VAOA(5),U,2)
"RTN","HMPCRPC1",103,0)
 I VAOA(6)]"" S VALUES("nok",CNT,"address","zip")=VAOA(6)
"RTN","HMPCRPC1",104,0)
 I VAOA(8)]"" S VALUES("nok",CNT,"address","phone")=VAOA(8)
"RTN","HMPCRPC1",105,0)
 D KVAR^VADPT
"RTN","HMPCRPC1",106,0)
 Q
"RTN","HMPCRPC1",107,0)
 ;
"RTN","HMPCRPC1",108,0)
GETMEANS(VALUES,DFN) ;
"RTN","HMPCRPC1",109,0)
 K VAEL
"RTN","HMPCRPC1",110,0)
 D ELIG^VADPT
"RTN","HMPCRPC1",111,0)
 I VAEL(9)]"" S VALUES("meanStatus")=$P(VAEL(9),U,2)
"RTN","HMPCRPC1",112,0)
 D KVAR^VADPT
"RTN","HMPCRPC1",113,0)
 Q
"RTN","HMPCRPC1",114,0)
 ;
"RTN","HMPCRPC1",115,0)
GETPATI(RESULT,DFN) ;
"RTN","HMPCRPC1",116,0)
 N TYPE,VALUES,HMPERR,Y,HMPODEM,HMPSYS
"RTN","HMPCRPC1",117,0)
 S HMPSYS=$$SYS^HMPUTILS
"RTN","HMPCRPC1",118,0)
 D DPT1OD^HMPDJ00(.VALUES)
"RTN","HMPCRPC1",119,0)
 G GPQ
"RTN","HMPCRPC1",120,0)
 S VALUES("pid")=$$PID^HMPDJFS(DFN)
"RTN","HMPCRPC1",121,0)
 ;D BUILDUID^HMPPARAM(.VALUES,"patient",DFN)
"RTN","HMPCRPC1",122,0)
 ;D GETDEM(.VALUES,DFN)
"RTN","HMPCRPC1",123,0)
 D GETADD(.VALUES,DFN)
"RTN","HMPCRPC1",124,0)
 ;F TYPE=1,3 D GETNOK(.VALUES,DFN,TYPE)
"RTN","HMPCRPC1",125,0)
 D GETPATTM(.VALUES,DFN)
"RTN","HMPCRPC1",126,0)
 ;D GETPATVI(.VALUES,DFN)
"RTN","HMPCRPC1",127,0)
 D GETPATIP(.VALUES,DFN)
"RTN","HMPCRPC1",128,0)
 D GETMEANS(.VALUES,DFN)
"RTN","HMPCRPC1",129,0)
 D PRF^HMPFPTC(DFN,.VALUES)
"RTN","HMPCRPC1",130,0)
 S Y=$$CWAD^ORQPT2(DFN)
"RTN","HMPCRPC1",131,0)
 I Y]"" S VALUES("cwad")=Y
"RTN","HMPCRPC1",132,0)
 I $D(VALUES("patientRecordFlags")) S VALUES("cwad")=$G(VALUES("cwad"))_"F"
"RTN","HMPCRPC1",133,0)
 ;D PTINQ^ORWPT(.DEM,DFN)
"RTN","HMPCRPC1",134,0)
 ;S NUM=5,STR=""
"RTN","HMPCRPC1",135,0)
 ;F  S NUM=$O(@DEM@(NUM)) Q:NUM'>0  D
"RTN","HMPCRPC1",136,0)
 ;.S VALUES("patDemDetails","text","\",NUM)=@DEM@(NUM)_$C(13,10)
"RTN","HMPCRPC1",137,0)
 S VALUES("success")="true"
"RTN","HMPCRPC1",138,0)
GPQ D ENCODE^HMPJSON("VALUES","RESULT","HMPERR")
"RTN","HMPCRPC1",139,0)
 I $D(HMPERR) D
"RTN","HMPCRPC1",140,0)
 .K RESULT N TEMP,TXT
"RTN","HMPCRPC1",141,0)
 .S TXT(1)="Problem encoding json output."
"RTN","HMPCRPC1",142,0)
 .D SETERROR^HMPUTILS(.TEMP,.HMPERR,.TXT,.VALUES)
"RTN","HMPCRPC1",143,0)
 .K HMPERR D ENCODE^HMPJSON("TEMP","RESULT","HMPERR")
"RTN","HMPCRPC1",144,0)
 Q
"RTN","HMPCRPC1",145,0)
 ;
"RTN","HMPCRPC1",146,0)
GETPATIP(VALUES,DFN) ;
"RTN","HMPCRPC1",147,0)
 N HMPDATA
"RTN","HMPCRPC1",148,0)
 D INPLOC^ORWPT(.HMPDATA,DFN)
"RTN","HMPCRPC1",149,0)
 I +HMPDATA D
"RTN","HMPCRPC1",150,0)
 . S VALUES("shortInpatientLocation")=$P($G(^SC(+HMPDATA,0)),U,2)
"RTN","HMPCRPC1",151,0)
 . S VALUES("inpatientLocation")=$P(HMPDATA,U,2)
"RTN","HMPCRPC1",152,0)
 I $P($G(^DPT(DFN,.101)),U)'="" S VALUES("roomBed")=$P($G(^DPT(DFN,.101)),U)
"RTN","HMPCRPC1",153,0)
 Q
"RTN","HMPCRPC1",154,0)
 ;
"RTN","HMPCRPC1",155,0)
GETPATVI(VALUES,DFN) ;  DE2818 - PB - Code commented out during SQA review/modifications
"RTN","HMPCRPC1",156,0)
 ;N BMI,DAS,HT,LDATE,HMPTEMP,WT,BSA
"RTN","HMPCRPC1",157,0)
 ;;get weight
"RTN","HMPCRPC1",158,0)
 ;S LDATE=$O(^PXRMINDX(120.5,"PI",DFN,9,""),-1)
"RTN","HMPCRPC1",159,0)
 ;I LDATE>0 D
"RTN","HMPCRPC1",160,0)
 ;.S DAS=$O(^PXRMINDX(120.5,"PI",DFN,9,LDATE,""))
"RTN","HMPCRPC1",161,0)
 ;.I DAS']"" Q
"RTN","HMPCRPC1",162,0)
 ;.D GETDATA^PXRMVITL(DAS,.HMPTEMP)
"RTN","HMPCRPC1",163,0)
 ;.S WT=HMPTEMP("VALUE")
"RTN","HMPCRPC1",164,0)
 ;.S VALUES("lastVitals","weight","value")=WT
"RTN","HMPCRPC1",165,0)
 ;.S VALUES("lastVitals","weight","lastDone")=$$FMTE^XLFDT(LDATE,"D")
"RTN","HMPCRPC1",166,0)
 ;;get height
"RTN","HMPCRPC1",167,0)
 ;K LDATE,DAS
"RTN","HMPCRPC1",168,0)
 ;S LDATE=$O(^PXRMINDX(120.5,"PI",DFN,8,""),-1)
"RTN","HMPCRPC1",169,0)
 ;I LDATE>0 D
"RTN","HMPCRPC1",170,0)
 ;.S DAS=$O(^PXRMINDX(120.5,"PI",DFN,8,LDATE,""))
"RTN","HMPCRPC1",171,0)
 ;.I DAS']"" Q
"RTN","HMPCRPC1",172,0)
 ;.D GETDATA^PXRMVITL(DAS,.HMPTEMP)
"RTN","HMPCRPC1",173,0)
 ;.S HT=HMPTEMP("VALUE")
"RTN","HMPCRPC1",174,0)
 ;.S VALUES("lastVitals","height","value")=HT
"RTN","HMPCRPC1",175,0)
 ;.S VALUES("lastVitals","height","lastDone")=$$FMTE^XLFDT(LDATE,"D")
"RTN","HMPCRPC1",176,0)
 ;S BMI=$$GETBMI(DFN)
"RTN","HMPCRPC1",177,0)
 ;I BMI>0 S VALUES("lastVitals","bmi")=BMI
"RTN","HMPCRPC1",178,0)
 ;S BSA=$$GETBSA(DFN)
"RTN","HMPCRPC1",179,0)
 ;I BSA>0 S VALUES("lastVitals","bsa")=BSA
"RTN","HMPCRPC1",180,0)
 ;Q
"RTN","HMPCRPC1",181,0)
 ;
"RTN","HMPCRPC1",182,0)
GETPATTM(VALUES,DFN) ; -- returns treating team info
"RTN","HMPCRPC1",183,0)
 N CNT,PROV,TEAM,MH,HMPTEAM,MHTEAM
"RTN","HMPCRPC1",184,0)
 S PROV=$$OUTPTPR^SDUTL3(DFN) D NP(+PROV,"primaryProvider")
"RTN","HMPCRPC1",185,0)
 S PROV=$$OUTPTAP^SDUTL3(DFN) D NP(+PROV,"associateProvider")
"RTN","HMPCRPC1",186,0)
 S PROV=$G(^DPT(DFN,.1041)) D NP(+PROV,"attendingProvider")
"RTN","HMPCRPC1",187,0)
 S PROV=$G(^DPT(DFN,.104)) D NP(+PROV,"inpatientProvider")
"RTN","HMPCRPC1",188,0)
 ;
"RTN","HMPCRPC1",189,0)
 S TEAM=$$OUTPTTM^SDUTL3(DFN) I TEAM D
"RTN","HMPCRPC1",190,0)
 . S VALUES("teamInfo","team","uid")=$$SETUID^HMPUTILS("team",,+TEAM)
"RTN","HMPCRPC1",191,0)
 . S VALUES("teamInfo","team","name")=$P(TEAM,U,2)
"RTN","HMPCRPC1",192,0)
 . S VALUES("teamInfo","team","phone")=$P($G(^SCTM(404.51,+TEAM,0)),U,2)
"RTN","HMPCRPC1",193,0)
 I 'TEAM S VALUES("teamInfo","team","name")="unassigned"
"RTN","HMPCRPC1",194,0)
 ;
"RTN","HMPCRPC1",195,0)
 S MH=$$START^SCMCMHTC(DFN) D NP(+MH,"mhCoordinator")
"RTN","HMPCRPC1",196,0)
 S VALUES("teamInfo","mhCoordinator","mhPosition")=$S(MH:$P(MH,U,3),1:"unassigned")
"RTN","HMPCRPC1",197,0)
 S VALUES("teamInfo","mhCoordinator","mhTeam")=$S(MH:$P(MH,U,5),1:"unassigned")
"RTN","HMPCRPC1",198,0)
 ;US5234 - Add Mental Health Team Office Phone - TW
"RTN","HMPCRPC1",199,0)
 I $P($G(MH),U,5)'="" D
"RTN","HMPCRPC1",200,0)
 . S MHTEAM=$O(^SCTM(404.51,"B",$P(MH,U,5),""))
"RTN","HMPCRPC1",201,0)
 . S VALUES("teamInfo","mhCoordinator","mhTeamOfficePhone")=$$GET1^DIQ(404.51,MHTEAM_",",.02)
"RTN","HMPCRPC1",202,0)
 ;
"RTN","HMPCRPC1",203,0)
 D PCDETAIL^ORWPT1(.HMPTEAM,DFN)
"RTN","HMPCRPC1",204,0)
 S CNT=0 F  S CNT=$O(HMPTEAM(CNT)) Q:CNT'>0  D
"RTN","HMPCRPC1",205,0)
 . S VALUES("teamInfo","text","\",CNT)=HMPTEAM(CNT)_$C(13,10)
"RTN","HMPCRPC1",206,0)
 Q
"RTN","HMPCRPC1",207,0)
NP(X,TYPE) ; -- add New Person data to teamInfo array
"RTN","HMPCRPC1",208,0)
 Q:$G(TYPE)=""
"RTN","HMPCRPC1",209,0)
 I $G(X)'>0 S VALUES("teamInfo",TYPE,"name")="unassigned" Q
"RTN","HMPCRPC1",210,0)
 S VALUES("teamInfo",TYPE,"uid")=$$SETUID^HMPUTILS("user",,+X)
"RTN","HMPCRPC1",211,0)
 S VALUES("teamInfo",TYPE,"name")=$P($G(^VA(200,+X,0)),U)
"RTN","HMPCRPC1",212,0)
 S VALUES("teamInfo",TYPE,"analogPager")=$P($G(^VA(200,+X,.13)),U,7)
"RTN","HMPCRPC1",213,0)
 S VALUES("teamInfo",TYPE,"digitalPager")=$P($G(^VA(200,+X,.13)),U,8)
"RTN","HMPCRPC1",214,0)
 S VALUES("teamInfo",TYPE,"officePhone")=$P($G(^VA(200,+X,.13)),U,2)
"RTN","HMPCRPC1",215,0)
 Q
"RTN","HMPCRPC1",216,0)
 ;
"RTN","HMPCRPC1",217,0)
GETPOS(VALUES,USER) ;
"RTN","HMPCRPC1",218,0)
 ; this returns the list of position for an user
"RTN","HMPCRPC1",219,0)
 N CNT,NODE,NUM,ROLEIEN,ROLE,TEAM,TEAMIEN,TEAMPHN,HMPLIST,HMPERR
"RTN","HMPCRPC1",220,0)
 ;$$TPPR^SCAPMC(DUZ,SCDATES,SCPURPA,SCROLEA,"LIST",HMPERR)
"RTN","HMPCRPC1",221,0)
 S NUM=$$TPPR^SCAPMC(USER,"","","","",.HMPERR)
"RTN","HMPCRPC1",222,0)
 F CNT=1:1:NUM D
"RTN","HMPCRPC1",223,0)
 .S NODE=$G(^TMP("SC TMP LIST",$J,CNT))
"RTN","HMPCRPC1",224,0)
 .S VALUES("vistaPositions",CNT,"position")=$P(NODE,U,2)
"RTN","HMPCRPC1",225,0)
 .S VALUES("vistaPositions",CNT,"effectiveDate")=$P(NODE,U,5)
"RTN","HMPCRPC1",226,0)
 .S VALUES("vistaPositions",CNT,"inactiveDate")=$P(NODE,U,6)
"RTN","HMPCRPC1",227,0)
 .S TEAMIEN=$P(NODE,U,3)
"RTN","HMPCRPC1",228,0)
 .S TEAM=$$GET1^DIQ(404.51,(+TEAMIEN_","),.01)
"RTN","HMPCRPC1",229,0)
 .S TEAMPHN=$$GET1^DIQ(404.51,(+TEAMIEN_","),.02)
"RTN","HMPCRPC1",230,0)
 .S VALUES("vistaPositions",CNT,"teamName")=TEAM
"RTN","HMPCRPC1",231,0)
 .S VALUES("vistaPositions",CNT,"teamPhone")=TEAMPHN
"RTN","HMPCRPC1",232,0)
 .I $P(NODE,U,9)>0 D
"RTN","HMPCRPC1",233,0)
 .S VALUES("vistaPositions",CNT,"role")=$$GET1^DIQ(8930,($P(NODE,U,9)_","),.01)
"RTN","HMPCRPC1",234,0)
 Q
"RTN","HMPCRPC1",235,0)
 ;
"RTN","HMPCRPC1",236,0)
GETUSERC(VALUES,USER) ;
"RTN","HMPCRPC1",237,0)
 N ARRAY,CNT,EFFDATE,EXPDATE,ID,IND,LIST,NODE
"RTN","HMPCRPC1",238,0)
 D WHATIS^USRLM(USER,"LIST",1)
"RTN","HMPCRPC1",239,0)
 ;LIST(Uppername_indicator)=UserClassIEN^MembershipIEN^name^EffectDt^ExpireDt
"RTN","HMPCRPC1",240,0)
 S IND=0,CNT=0 F  S IND=$O(LIST(IND)) Q:IND=""  D
"RTN","HMPCRPC1",241,0)
 .S NODE=LIST(IND)
"RTN","HMPCRPC1",242,0)
 .S EFFDATE=$P(NODE,U,4),EXPDATE=$P(NODE,U,5)
"RTN","HMPCRPC1",243,0)
 .I EFFDATE>0,EFFDATE>DT Q
"RTN","HMPCRPC1",244,0)
 .I EXPDATE>0,EXPDATE<DT Q
"RTN","HMPCRPC1",245,0)
 .S CNT=CNT+1
"RTN","HMPCRPC1",246,0)
 .S ID=$P(NODE,U)
"RTN","HMPCRPC1",247,0)
 .S ARRAY(ID)=""
"RTN","HMPCRPC1",248,0)
 .S VALUES("vistaUserClass",CNT,"role")=$P(NODE,U,3)
"RTN","HMPCRPC1",249,0)
 .S VALUES("vistaUserClass",CNT,"uid")=$$SETUID^HMPUTILS("asu-class","",ID,"")
"RTN","HMPCRPC1",250,0)
 .S VALUES("vistaUserClass",CNT,"effectiveDate")=EFFDATE
"RTN","HMPCRPC1",251,0)
 .S VALUES("vistaUserClass",CNT,"expirationDate")=EXPDATE
"RTN","HMPCRPC1",252,0)
 .I $D(^USR(8930,"AD",ID)) D GETUCPAR(.VALUES,ID,.CNT,.ARRAY)
"RTN","HMPCRPC1",253,0)
 I CNT=0 D
"RTN","HMPCRPC1",254,0)
 .S ID=$O(^USR(8930,"B","USER","")) I +ID'>0 Q
"RTN","HMPCRPC1",255,0)
 .S CNT=CNT+1
"RTN","HMPCRPC1",256,0)
 .S VALUES("vistaUserClass",CNT,"role")=$P($G(^USR(8930,ID,0)),U)
"RTN","HMPCRPC1",257,0)
 .S VALUES("vistaUserClass",CNT,"uid")=$$SETUID^HMPUTILS("asu-class","",ID,"")
"RTN","HMPCRPC1",258,0)
 Q
"RTN","HMPCRPC1",259,0)
GETUCPAR(VALUES,ID,CNT,ARRAY) ;
"RTN","HMPCRPC1",260,0)
 N IEN,ROLE
"RTN","HMPCRPC1",261,0)
 S IEN=0 F  S IEN=$O(^USR(8930,"AD",ID,IEN)) Q:IEN'>0  D
"RTN","HMPCRPC1",262,0)
 .I $D(ARRAY(IEN)) Q
"RTN","HMPCRPC1",263,0)
 .S ARRAY(IEN)=""
"RTN","HMPCRPC1",264,0)
 .S ROLE=$P($G(^USR(8930,IEN,0)),U)
"RTN","HMPCRPC1",265,0)
 .S CNT=CNT+1
"RTN","HMPCRPC1",266,0)
 .S VALUES("vistaUserClass",CNT,"role")=ROLE
"RTN","HMPCRPC1",267,0)
 .S VALUES("vistaUserClass",CNT,"uid")=$$SETUID^HMPUTILS("asu-class","",IEN,"")
"RTN","HMPCRPC1",268,0)
 .I $D(^USR(8930,"AD",ID)) D GETUCPAR(.VALUES,IEN,.CNT,.ARRAY)
"RTN","HMPCRPC1",269,0)
 Q
"RTN","HMPCRPC1",270,0)
 ;
"RTN","HMPCRPC1",271,0)
GETUSERI(RESULT,USER) ;
"RTN","HMPCRPC1",272,0)
 N RPCOPT,VALUES,HMPERR,HMPLIST,CPRSPATH
"RTN","HMPCRPC1",273,0)
 D BUILDUID^HMPPARAM(.VALUES,"user",USER)
"RTN","HMPCRPC1",274,0)
 S VALUES("timeout")=$$GET^XPAR("USR^SYS","ORWOR TIMEOUT CHART",1,"I")
"RTN","HMPCRPC1",275,0)
 S VALUES("timeoutCounter")=$$GET^XPAR("USR^SYS^PKG","ORWOR TIMEOUT COUNTDOWN",1,"I")
"RTN","HMPCRPC1",276,0)
 S CPRSPATH=$$GET^XPAR("USR^SYS","HMP CPRS PATH",1,"I")
"RTN","HMPCRPC1",277,0)
 S VALUES("cprsPath")=$S($L($G(CPRSPATH))>0:CPRSPATH,1:"")
"RTN","HMPCRPC1",278,0)
 D FIND^DIC(19,"",1,"X","HMP UI CONTEXT",1,,,,"HMPLIST")
"RTN","HMPCRPC1",279,0)
 S RPCOPT=$S($D(^HMPLIST("DILIST",0)):-1,1:$P(HMPLIST("DILIST","ID",1,1),"version ",2))
"RTN","HMPCRPC1",280,0)
 ;S VALUES("signingPriv")=$S($D(^XUSEC("ORES",DUZ)):3,$D(^XUSEC("ORELSE",DUZ)):2,$D(^XUSEC("OREMAS",DUZ)):1,1:0)
"RTN","HMPCRPC1",281,0)
 S VALUES("orderingRole")=$$ORDROLE(USER)
"RTN","HMPCRPC1",282,0)
 S VALUES("hmpVersion")=RPCOPT
"RTN","HMPCRPC1",283,0)
 S VALUES("domain")=$$KSP^XUPARAM("WHERE")  ; domain
"RTN","HMPCRPC1",284,0)
 S VALUES("service")=+$G(^VA(200,USER,5))     ; service/section
"RTN","HMPCRPC1",285,0)
 D GETUSERC(.VALUES,USER)
"RTN","HMPCRPC1",286,0)
 D GETPOS(.VALUES,USER)
"RTN","HMPCRPC1",287,0)
 D GETKEYS(.VALUES,USER)
"RTN","HMPCRPC1",288,0)
 S VALUES("productionAccount")=$S($$PROD^XUPROD=1:"true",1:"false")
"RTN","HMPCRPC1",289,0)
 ;S RESULT=$$ENCODE^HMPJSON("VALUES","HMPERR")
"RTN","HMPCRPC1",290,0)
 D ENCODE^HMPJSON("VALUES","RESULT","HMPERR")
"RTN","HMPCRPC1",291,0)
 Q
"RTN","HMPCRPC1",292,0)
 ;
"RTN","HMPCRPC1",293,0)
ORDROLE(USER) ; returns the role a person takes in ordering
"RTN","HMPCRPC1",294,0)
 ; VAL: 0=nokey, 1=clerk, 2=nurse, 3=physician, 4=student, 5=bad keys
"RTN","HMPCRPC1",295,0)
 ;I '$G(ORWCLVER) Q 0  ; version of client is to old for ordering
"RTN","HMPCRPC1",296,0)
 I ($D(^XUSEC("OREMAS",USER))+$D(^XUSEC("ORELSE",USER))+$D(^XUSEC("ORES",USER)))>1 Q 5
"RTN","HMPCRPC1",297,0)
 I $D(^XUSEC("OREMAS",USER)) Q 1                           ; clerk
"RTN","HMPCRPC1",298,0)
 I $D(^XUSEC("ORELSE",USER)) Q 2                           ; nurse
"RTN","HMPCRPC1",299,0)
 I $D(^XUSEC("ORES",USER)),$D(^XUSEC("PROVIDER",USER)) Q 3  ; doctor
"RTN","HMPCRPC1",300,0)
 I $D(^XUSEC("PROVIDER",USER)) Q 4                         ; student
"RTN","HMPCRPC1",301,0)
 Q 0
"RTN","HMPCRPC1",302,0)
 ;
"RTN","HMPDJ02")
0^5^B215396119
"RTN","HMPDJ02",1,0)
HMPDJ02 ;ASMR/MKB/JD,CK,CPC,PB - Problems,Allergies,Vitals ;Aug 23, 2016 09:56:26
"RTN","HMPDJ02",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1,2,3**;Sep 02, 2016;Build 2
"RTN","HMPDJ02",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","HMPDJ02",4,0)
 ;
"RTN","HMPDJ02",5,0)
 ; External References          DBIA#
"RTN","HMPDJ02",6,0)
 ; -------------------          -----
"RTN","HMPDJ02",7,0)
 ; ^PXRMINDX                     4290
"RTN","HMPDJ02",8,0)
 ; ^SC                          10040
"RTN","HMPDJ02",9,0)
 ; ^AUPNPROB                     2727 (where items not available from GMPLUTL2)
"RTN","HMPDJ02",10,0)
 ; DIC                           2051
"RTN","HMPDJ02",11,0)
 ; DIQ                           2056
"RTN","HMPDJ02",12,0)
 ; GMPLUTL2                      2741
"RTN","HMPDJ02",13,0)
 ; GMRADPT                      10099
"RTN","HMPDJ02",14,0)
 ; GMRAOR2                       2422
"RTN","HMPDJ02",15,0)
 ; GMRVUT0,^UTILITY($J           1446
"RTN","HMPDJ02",16,0)
 ; GMVGETQL                      5048
"RTN","HMPDJ02",17,0)
 ; GMVGETVT                      5047
"RTN","HMPDJ02",18,0)
 ; GMVUTL                        5046
"RTN","HMPDJ02",19,0)
 ; ICDEX                         5747
"RTN","HMPDJ02",20,0)
 ; XLFSTR                       10104
"RTN","HMPDJ02",21,0)
 ; XUAF4                         2171
"RTN","HMPDJ02",22,0)
 ;
"RTN","HMPDJ02",23,0)
 ; All tags expect DFN, ID, [HMPSTART, HMPSTOP, HMPMAX, HMPTEXT]
"RTN","HMPDJ02",24,0)
 ;
"RTN","HMPDJ02",25,0)
 Q
"RTN","HMPDJ02",26,0)
 ;
"RTN","HMPDJ02",27,0)
GMPL1(ID,POVLST) ; -- problem
"RTN","HMPDJ02",28,0)
 N HMPL,PROB,X,I,DATE,USER,FAC,LEXS
"RTN","HMPDJ02",29,0)
 D DETAIL^GMPLUTL2(ID,.HMPL) Q:'$D(HMPL)  ;doesn't exist
"RTN","HMPDJ02",30,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ02",31,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ02",32,0)
 S ERRMSG="A problem occurred converting record "_ID_" for the problem domain"
"RTN","HMPDJ02",33,0)
 ;
"RTN","HMPDJ02",34,0)
 S PROB("uid")=$$SETUID^HMPUTILS("problem",DFN,ID),PROB("localId")=ID
"RTN","HMPDJ02",35,0)
 S PROB("problemText")=$G(HMPL("NARRATIVE"))
"RTN","HMPDJ02",36,0)
 S DATE=$P($G(HMPL("ENTERED")),U)
"RTN","HMPDJ02",37,0)
 S:$L(DATE) DATE=$$DATE^HMPDGMPL(DATE),PROB("entered")=$$JSONDT^HMPUTILS(DATE)
"RTN","HMPDJ02",38,0)
 S X=$G(HMPL("DIAGNOSIS")) I $L(X) D
"RTN","HMPDJ02",39,0)
 . N ICD9ZN,DIAG,SCTCODE
"RTN","HMPDJ02",40,0)
 . I DATE'>0 S DATE=DT
"RTN","HMPDJ02",41,0)
 . S ICD9ZN=$$ICDDX^ICDEX(X,DATE),DIAG=$S($P($G(ICD9ZN),U,4)'="":$P(ICD9ZN,U,4),1:X) ;Sep 1, 2016 - PB - DE5033
"RTN","HMPDJ02",42,0)
 . ; BEGIN MOD ASF 09/8/15 US 9239 DE 2082
"RTN","HMPDJ02",43,0)
 . ; Only set icdCode and icdName if it is ICD9 (ICD10 is only available in codes array)
"RTN","HMPDJ02",44,0)
 . I HMPL("CSYS")="ICD" S PROB("icdCode")=$$SETNCS^HMPUTILS("icd",HMPL("DIAGNOSIS")),PROB("icdName")=DIAG
"RTN","HMPDJ02",45,0)
 . ; Create codes array for both ICD9 or ICD10
"RTN","HMPDJ02",46,0)
 . S PROB("codes",1,"code")=HMPL("DIAGNOSIS")
"RTN","HMPDJ02",47,0)
 . S PROB("codes",1,"display")=$S(HMPL("CSYS")="ICD":DIAG,HMPL("CSYS")="10D":HMPL("ICDD"))
"RTN","HMPDJ02",48,0)
 . S PROB("codes",1,"system")=$S(HMPL("CSYS")="ICD":"urn:oid:2.16.840.1.113883.6.42",HMPL("CSYS")="10D":"urn:oid:2.16.840.1.113883.6.3",1:"codesystem error")
"RTN","HMPDJ02",49,0)
 . ;SNOMED CT codes
"RTN","HMPDJ02",50,0)
 . S SCTCODE=HMPL("SCTC") ;DE4685 ;9000011,80001 SNOMED CT CONCEPT CODE
"RTN","HMPDJ02",51,0)
 . D:SCTCODE EN^LEXCODE(SCTCODE) ; ICR 1614
"RTN","HMPDJ02",52,0)
 . I $D(LEXS("SCT",1)) D
"RTN","HMPDJ02",53,0)
 . . S PROB("codes",2,"code")=SCTCODE
"RTN","HMPDJ02",54,0)
 . . S PROB("codes",2,"code","\s")="" ; Ensure code is sent as a string
"RTN","HMPDJ02",55,0)
 . . S PROB("codes",2,"display")=$P(LEXS("SCT",1),U,2)
"RTN","HMPDJ02",56,0)
 . . S PROB("codes",2,"system")="http://snomed.info/sct"
"RTN","HMPDJ02",57,0)
 . ; END MOD ASF US 9239 DE 2082
"RTN","HMPDJ02",58,0)
 ;Get the internal date from ^AUPNPROB so the imprecise date can be converted properly
"RTN","HMPDJ02",59,0)
 ;JD - 2/1/16 - DE3548
"RTN","HMPDJ02",60,0)
 S X=$$GET1^DIQ(9000011,ID_",",.01,"I") S:$L(X) PROB("lexiconCode")=X  ; DE4680 May 11, 2016 - added lexiconCode to JDS
"RTN","HMPDJ02",61,0)
 S X=$$GET1^DIQ(9000011,ID_",",.13,"I") S:$L(X) PROB("onset")=$$JSONDT^HMPUTILS(X) ;retrieve internal value for proper date format
"RTN","HMPDJ02",62,0)
 S X=$G(HMPL("MODIFIED")) S:$L(X) X=$$DATE^HMPDGMPL(X),PROB("updated")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ02",63,0)
 S X=$G(HMPL("STATUS")) I $L(X) D
"RTN","HMPDJ02",64,0)
 . S PROB("statusName")=X,X=$E(X)
"RTN","HMPDJ02",65,0)
 . S X=$S(X="A":55561003,X="I":73425007,1:"")
"RTN","HMPDJ02",66,0)
 . S PROB("statusCode")=$$SETNCS^HMPUTILS("sct",X)
"RTN","HMPDJ02",67,0)
 ;S X=$G(HMPL("PRIORITY")) I X]"" D
"RTN","HMPDJ02",68,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.14,"I") I X]"" D  ;DE3988 take directly from the file regardless of status
"RTN","HMPDJ02",69,0)
 . S X=$S(X="C":"chronic",X="A":"acute",1:"")
"RTN","HMPDJ02",70,0)
 . I X'="" S PROB("acuityName")=X,PROB("acuityCode")=$$SETVURN^HMPUTILS("prob-acuity",$E(X))
"RTN","HMPDJ02",71,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.07,"I") S:X PROB("resolved")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ02",72,0)
 S X=$P(HMPL("ENTERED"),U,2) S:$L(X) PROB("enteredBy")=X  ; DE5096 June 24, 2016 - add addt'l problem fields to JDS
"RTN","HMPDJ02",73,0)
 S X=$P(HMPL("RECORDED"),U,2) S:$L(X) PROB("recordedBy")=X  ; DE5096 June 24, 2016
"RTN","HMPDJ02",74,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.09,"I") S:$L(X) PROB("recordedOn")=$$JSONDT^HMPUTILS(X)  ; DE5096 July 1, 2016 
"RTN","HMPDJ02",75,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.02,"I")
"RTN","HMPDJ02",76,0)
 S:X="P" PROB("unverified")="false",PROB("removed")="false"
"RTN","HMPDJ02",77,0)
 S:X="T" PROB("unverified")="true",PROB("removed")="false"
"RTN","HMPDJ02",78,0)
 S:X="H" PROB("unverified")="false",PROB("removed")="true"
"RTN","HMPDJ02",79,0)
 S X=$G(HMPL("SC")),X=$S(X="YES":"true",X="NO":"false",1:"")  ; DE3918, Mar 2, 2016
"RTN","HMPDJ02",80,0)
 S:$L(X) PROB("serviceConnected")=X
"RTN","HMPDJ02",81,0)
 S X=$G(HMPL("PROVIDER")) I $L(X) D
"RTN","HMPDJ02",82,0)
 . S PROB("providerName")=X,X=$$GET1^DIQ(9000011,ID_",",1.05,"I")
"RTN","HMPDJ02",83,0)
 . S PROB("providerUid")=$$SETUID^HMPUTILS("user",,+X)
"RTN","HMPDJ02",84,0)
 S X=$$GET1^DIQ(9000011,ID_",",1.06) S:$L(X) PROB("service")=X
"RTN","HMPDJ02",85,0)
 S X=$G(HMPL("CLINIC")) I $L(X) D
"RTN","HMPDJ02",86,0)
 . S PROB("locationName")=X
"RTN","HMPDJ02",87,0)
 . N LOC S LOC=+$$FIND1^DIC(44,,"QX",X)
"RTN","HMPDJ02",88,0)
 . S:LOC PROB("locationUid")=$$SETUID^HMPUTILS("location",,LOC)
"RTN","HMPDJ02",89,0)
 S X=+$$GET1^DIQ(9000011,ID_",",.06,"I")
"RTN","HMPDJ02",90,0)
 S:X FAC=$$STA^XUAF4(X)_U_$P($$NS^XUAF4(X),U)
"RTN","HMPDJ02",91,0)
 I 'X S FAC=$$FAC^HMPD ;local stn#^name
"RTN","HMPDJ02",92,0)
 D FACILITY^HMPUTILS(FAC,"PROB")
"RTN","HMPDJ02",93,0)
 S I=0 F  S I=$O(HMPL("COMMENT",I)) Q:I<1  D
"RTN","HMPDJ02",94,0)
 . S X=$G(HMPL("COMMENT",I))
"RTN","HMPDJ02",95,0)
 . S USER=$$VA200^HMPDGMPL($P(X,U,2)),DATE=$$DATE^HMPDGMPL($P(X,U))
"RTN","HMPDJ02",96,0)
 . S PROB("comments",I,"noteCounter")=I  ; Feb 24, 2016 - US12724
"RTN","HMPDJ02",97,0)
 . S PROB("comments",I,"enteredByCode")=$$SETUID^HMPUTILS("user",,+USER)
"RTN","HMPDJ02",98,0)
 . S PROB("comments",I,"enteredByName")=$P(X,U,2)
"RTN","HMPDJ02",99,0)
 . S PROB("comments",I,"entered")=$$JSONDT^HMPUTILS(DATE)
"RTN","HMPDJ02",100,0)
 . S PROB("comments",I,"comment")=$P(X,U,3)
"RTN","HMPDJ02",101,0)
 I $D(POVLST) D GMPLVST(ID,"PROB",.POVLST)  ;JL;add encounter information.
"RTN","HMPDJ02",102,0)
 ;== Treatment attributes - Added on 1/4/16 - JD - US12358
"RTN","HMPDJ02",103,0)
 ;Modified 1/8/16 - JD - US12358
"RTN","HMPDJ02",104,0)
 ;Guarding against direct sets into ^AUPNPROB in RPC: "ORQQPL ADD SAVE" by checking for "Y" and "N".
"RTN","HMPDJ02",105,0)
 S X=$$UP^XLFSTR($$GET1^DIQ(9000011,ID_",",1.11,"I"))
"RTN","HMPDJ02",106,0)
 S:$L(X) PROB("agentOrangeExposure")=$S(X=1:"YES",$E(X)="Y":"YES",X=0:"NO",$E(X)="N":"NO",1:X)
"RTN","HMPDJ02",107,0)
 S X=$$UP^XLFSTR($$GET1^DIQ(9000011,ID_",",1.12,"I"))
"RTN","HMPDJ02",108,0)
 S:$L(X) PROB("radiationExposure")=$S(X=1:"YES",$E(X)="Y":"YES",X=0:"NO",$E(X)="N":"NO",1:X)
"RTN","HMPDJ02",109,0)
 S X=$$UP^XLFSTR($$GET1^DIQ(9000011,ID_",",1.13,"I"))
"RTN","HMPDJ02",110,0)
 S:$L(X) PROB("persianGulfExposure")=$S(X=1:"YES",$E(X)="Y":"YES",X=0:"NO",$E(X)="N":"NO",1:X)
"RTN","HMPDJ02",111,0)
 S X=$$UP^XLFSTR($$GET1^DIQ(9000011,ID_",",1.15,"I"))
"RTN","HMPDJ02",112,0)
 S:$L(X) PROB("headNeckCancer")=$S(X=1:"YES",$E(X)="Y":"YES",X=0:"NO",$E(X)="N":"NO",1:X)
"RTN","HMPDJ02",113,0)
 S X=$$UP^XLFSTR($$GET1^DIQ(9000011,ID_",",1.16,"I"))
"RTN","HMPDJ02",114,0)
 S:$L(X) PROB("militarySexualTrauma")=$S(X=1:"YES",$E(X)="Y":"YES",X=0:"NO",$E(X)="N":"NO",1:X)
"RTN","HMPDJ02",115,0)
 S X=$$UP^XLFSTR($$GET1^DIQ(9000011,ID_",",1.17,"I"))
"RTN","HMPDJ02",116,0)
 S:$L(X) PROB("combatVeteran")=$S(X=1:"YES",$E(X)="Y":"YES",X=0:"NO",$E(X)="N":"NO",1:X)
"RTN","HMPDJ02",117,0)
 S X=$$UP^XLFSTR($$GET1^DIQ(9000011,ID_",",1.18,"I"))
"RTN","HMPDJ02",118,0)
 S:$L(X) PROB("shipboardHazard")=$S(X=1:"YES",$E(X)="Y":"YES",X=0:"NO",$E(X)="N":"NO",1:X)
"RTN","HMPDJ02",119,0)
 ;==
"RTN","HMPDJ02",120,0)
 S PROB("lastUpdateTime")=$$EN^HMPSTMP("problem")
"RTN","HMPDJ02",121,0)
 S PROB("stampTime")=PROB("lastUpdateTime") ; RHL 20141231
"RTN","HMPDJ02",122,0)
 ;US6734 - pre-compile metastamp
"RTN","HMPDJ02",123,0)
 I $G(HMPMETA) D ADD^HMPMETA("problem",PROB("uid"),PROB("stampTime")) Q:HMPMETA=1  ;US11019/US6734
"RTN","HMPDJ02",124,0)
 D ADD^HMPDJ("PROB","problem")
"RTN","HMPDJ02",125,0)
 Q
"RTN","HMPDJ02",126,0)
 ;
"RTN","HMPDJ02",127,0)
GMPLVST(ID,Y,POVLST)  ; --- JL;associate problem with visit and notes
"RTN","HMPDJ02",128,0)
 Q:'$G(ID)!'$G(^AUPNPROB(ID,0))!'$D(POVLST)  ;invalid id or no data
"RTN","HMPDJ02",129,0)
 N ICDCODE
"RTN","HMPDJ02",130,0)
 S ICDCODE=$$CODEC^ICDEX(80,$$GET1^DIQ(9000011,ID_",",.01,"I")) Q:ICDCODE=-1  ;invalid icdcode Sep 1, 2016 - PB - DE5033
"RTN","HMPDJ02",131,0)
 Q:$D(POVLST(ICDCODE))=0
"RTN","HMPDJ02",132,0)
 N IDX,VCNT,NCNT,DIEN,VIEN,FAC,STCODE
"RTN","HMPDJ02",133,0)
 S IDX="",VCNT=0,NCNT=0 F  S IDX=$O(POVLST(ICDCODE,IDX)) Q:IDX=""  D
"RTN","HMPDJ02",134,0)
 . S VCNT=VCNT+1
"RTN","HMPDJ02",135,0)
 . S VIEN=+$G(POVLST(ICDCODE,IDX)),FAC=$$FAC^HMPDJ04(VIEN),STCODE=$$STCODE^HMPDJ04(VIEN)
"RTN","HMPDJ02",136,0)
 . I FAC D FACILITY^HMPUTILS(FAC,Y_"(""encounters"","_VCNT_")")  ; facility info
"RTN","HMPDJ02",137,0)
 . I STCODE D STOPCODE^HMPDJ04(STCODE,Y_"(""encounters"","_VCNT_")") ; stop code
"RTN","HMPDJ02",138,0)
 . S @Y@("encounters",VCNT,"dateTime")=$$JSONDT^HMPUTILS($$DATE^HMPDGMPL(+IDX))
"RTN","HMPDJ02",139,0)
 . S @Y@("encounters",VCNT,"visitUid")=$$SETUID^HMPUTILS("visit",DFN,VIEN)
"RTN","HMPDJ02",140,0)
 . N ENINFO S ENINFO=$G(POVLST(ICDCODE,IDX))
"RTN","HMPDJ02",141,0)
 . S DIEN=+$P(ENINFO,U,2)
"RTN","HMPDJ02",142,0)
 . ;W "DIEN is "_DIEN,!
"RTN","HMPDJ02",143,0)
 . I DIEN D
"RTN","HMPDJ02",144,0)
 . . S NCNT=NCNT+1
"RTN","HMPDJ02",145,0)
 . . ; extract the extra data from the document
"RTN","HMPDJ02",146,0)
 . . N DOCINFO S DOCINFO=$E(ENINFO,$F($G(ENINFO),U),$L(ENINFO))
"RTN","HMPDJ02",147,0)
 . . N OUTPUT S OUTPUT="" D EN1^HMPDJ08(DOCINFO,3,.OUTPUT)
"RTN","HMPDJ02",148,0)
 . . N NAME F NAME="documentTypeName","entered","summary","facilityName","authorDisplayName" D
"RTN","HMPDJ02",149,0)
 . . . S:$D(OUTPUT(NAME)) @Y@("documents",NCNT,NAME)=$G(OUTPUT(NAME))
"RTN","HMPDJ02",150,0)
 . . S @Y@("documents",NCNT,"documentUid")=$$SETUID^HMPUTILS("document",DFN,DIEN)
"RTN","HMPDJ02",151,0)
 Q
"RTN","HMPDJ02",152,0)
 ;
"RTN","HMPDJ02",153,0)
GMPLPOV(DFNN,POVLST,DONTKILL) ; -- JL;All problem of visit related to the patient from V POV file
"RTN","HMPDJ02",154,0)
 ;INPUT: Patient's DFN
"RTN","HMPDJ02",155,0)
 ;OUTPUT: Patient's VISIT list in the format of
"RTN","HMPDJ02",156,0)
 ;        OUTPUT(DIAGNOSIS,DATATIME)="VISITIEN"
"RTN","HMPDJ02",157,0)
 ;
"RTN","HMPDJ02",158,0)
 Q:'$G(DFNN)
"RTN","HMPDJ02",159,0)
 N INVVST
"RTN","HMPDJ02",160,0)
 K:'DONTKILL POVLST ; clear the output
"RTN","HMPDJ02",161,0)
 ; Query V POV(^AUPNVPOV() by using "AA" Cross Reference.
"RTN","HMPDJ02",162,0)
 S INVVST="",CURVST="" F  S INVVST=$O(^AUPNVPOV("AA",DFNN,INVVST)) Q:INVVST=""  D
"RTN","HMPDJ02",163,0)
 . N CURVST,DIEN
"RTN","HMPDJ02",164,0)
 . S CURVST=INVVST,DIEN="" F  S DIEN=$O(^AUPNVPOV("AA",DFNN,CURVST,DIEN)) Q:DIEN=""  D
"RTN","HMPDJ02",165,0)
 . . N ICDIEN,PVISIT
"RTN","HMPDJ02",166,0)
 . . S ICDIEN=+$P(^AUPNVPOV(DIEN,0),U,1),PVISIT=$P(^AUPNVPOV(DIEN,0),U,3)
"RTN","HMPDJ02",167,0)
 . . N VISITDT
"RTN","HMPDJ02",168,0)
 . . S VISITDT=+$G(^AUPNVSIT(PVISIT,0)) Q:'$L(VISITDT)  ;quit if no visit is found, bad data entry.
"RTN","HMPDJ02",169,0)
 . . N ICDCODE,VIEN
"RTN","HMPDJ02",170,0)
 . . S ICDCODE=$$CODEC^ICDEX(80,ICDIEN) Q:ICDCODE=-1  ;convert to ICD code, quit if not valid Sep 1, 2016 - PB - DE5033
"RTN","HMPDJ02",171,0)
 . . I $D(POVLST(ICDCODE,VISITDT))'=0 D  Q
"RTN","HMPDJ02",172,0)
 . . . S VIEN=$$GETVIEN(DFNN,VISITDT)
"RTN","HMPDJ02",173,0)
 . . . ; W:VIEN=-1 "Can not find VISIT IEN for "_VISITDT,!
"RTN","HMPDJ02",174,0)
 . . . S:VIEN'=-1 POVLST(ICDCODE,VISITDT)=VIEN
"RTN","HMPDJ02",175,0)
 Q
"RTN","HMPDJ02",176,0)
 ;
"RTN","HMPDJ02",177,0)
GETVIEN(DFNN,VISITDT)  ;JL; get the Visit IEN from VISIT file based on patient ID and Datetime
"RTN","HMPDJ02",178,0)
 Q:'+$G(DFNN)!'$L(VISITDT) -1  ;return -1 if bad parameter
"RTN","HMPDJ02",179,0)
 N REVDT,VISITIEN
"RTN","HMPDJ02",180,0)
 S REVDT=9999999-$P(VISITDT,".",1)_$S($P(VISITDT,".",2)'="":"."_$P(VISITDT,".",2),1:"")
"RTN","HMPDJ02",181,0)
 S VISITIEN=$O(^AUPNVSIT("AA",DFNN,REVDT,""))  ; using "AA" cross-reference
"RTN","HMPDJ02",182,0)
 Q:VISITIEN="" -1
"RTN","HMPDJ02",183,0)
 Q VISITIEN
"RTN","HMPDJ02",184,0)
 ;
"RTN","HMPDJ02",185,0)
DIAGLIST(DIAGS,DFN,ORDATE,ORPRCNT) ;BL,JL; get list diagnosis on past notes
"RTN","HMPDJ02",186,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","HMPDJ02",187,0)
 S:'+$G(ORPRCNT) ORPRCNT=1
"RTN","HMPDJ02",188,0)
 ;Use TIU DOCUMENTS BY CONTEXT to retrieve all notes associated with patient (CONTEXT^TIUSRVLO)
"RTN","HMPDJ02",189,0)
 K ENC,DIAGCODE,CNT,DIAG,DIAGNUM,DIAGLINE,ENCNUM,LINE,IEN,CLASS,CONTEXT,EARLY,LATE,PERSON,OCCLIM,SEQUENCE,SHOWADD,INCUND,LSTNUM,NOTEINFO
"RTN","HMPDJ02",190,0)
 K NEWCNT,OLDLST,DIAGCNT
"RTN","HMPDJ02",191,0)
 S CLASS=3,CONTEXT=1,EARLY=-1,LATE=-1,PERSON=0,OCCLIM=0,SEQUENCE="D",SHOWADD=0,INCUND=0,OLDLST=""
"RTN","HMPDJ02",192,0)
 ;TAKE EXISTING LIST FROM ENCOUNTER CALL AND PRESERVE TO BE APPENDED AFTERWARD
"RTN","HMPDJ02",193,0)
 K DIAGS S DIAGS=""
"RTN","HMPDJ02",194,0)
 D CONTEXT^TIUSRVLO(.DIAGS,CLASS,CONTEXT,DFN,EARLY,LATE,PERSON,OCCLIM,SEQUENCE,SHOWADD,INCUND)
"RTN","HMPDJ02",195,0)
 M DIAGS=^TMP("TIUR",$J)
"RTN","HMPDJ02",196,0)
 ;Go through notes list and use ORWPCE PCE4NOTE to extract diagnosis associated with each encounter to previous problem list (PCE4NOTE^ORWPCE3)
"RTN","HMPDJ02",197,0)
 S LSTNUM=""
"RTN","HMPDJ02",198,0)
 ;THIS CALL WILL EXTRACT ALL THE VISIT INFORMATION TO ^TMP(PXKENC,$J,VISIT)
"RTN","HMPDJ02",199,0)
 N VIEN
"RTN","HMPDJ02",200,0)
 F  S LSTNUM=$O(DIAGS(LSTNUM)) Q:LSTNUM=""  D
"RTN","HMPDJ02",201,0)
 . S NOTEINFO=""
"RTN","HMPDJ02",202,0)
 . S IEN=$P(DIAGS(LSTNUM),"^",1)
"RTN","HMPDJ02",203,0)
 . D PCE4NOTE^ORWPCE3(.NOTEINFO,IEN,DFN)
"RTN","HMPDJ02",204,0)
 . S CNT=0,DIAGCNT=0
"RTN","HMPDJ02",205,0)
 . F  S CNT=$O(NOTEINFO(CNT)) Q:CNT=""  D
"RTN","HMPDJ02",206,0)
 . . Q:$P(NOTEINFO(CNT),"^",1)'["POV"
"RTN","HMPDJ02",207,0)
 . . S DIAGCNT=DIAGCNT+1
"RTN","HMPDJ02",208,0)
 . . S VISITDT=$P($G(NOTEINFO(2)),U,3)  ; get the visit datetime
"RTN","HMPDJ02",209,0)
 . . S ICDCODE=$P(NOTEINFO(CNT),U,2)  ; get the diagnosis code
"RTN","HMPDJ02",210,0)
 . . I $D(ENC(ICDCODE,VISITDT))=0 D
"RTN","HMPDJ02",211,0)
 . . . S VIEN=$$GETVIEN(DFN,VISITDT)
"RTN","HMPDJ02",212,0)
 . . . ;W:VIEN=-1 "Can not find Visit ID for "_NOTEINFO(CNT),!
"RTN","HMPDJ02",213,0)
 . . . S:VIEN'=-1 ENC(ICDCODE,VISITDT)=VIEN_U_$G(DIAGS(LSTNUM)) ;  add to list only if visit ien is valid
"RTN","HMPDJ02",214,0)
 ; KILL DIAGS BECAUSE IT NOW CONTAINS NOTE INFO
"RTN","HMPDJ02",215,0)
 K DIAGS
"RTN","HMPDJ02",216,0)
 M DIAGS=ENC
"RTN","HMPDJ02",217,0)
 ;CLEAN UP ARRAYS
"RTN","HMPDJ02",218,0)
 K NOTEINFO,ENC,DIAG,^TMP("TIUR",$J)
"RTN","HMPDJ02",219,0)
 D GMPLPOV(DFN,.DIAGS,1)  ; Also loop thru V POV file to find extra encounter
"RTN","HMPDJ02",220,0)
 Q
"RTN","HMPDJ02",221,0)
 ;
"RTN","HMPDJ02",222,0)
GMRA1(ID) ; -- allergy/reaction GMRAL(ID)
"RTN","HMPDJ02",223,0)
 N GMRA,HMPY,REAC,X,Y,I,USER,CMMT
"RTN","HMPDJ02",224,0)
 S GMRA=$G(GMRAL(ID)) D EN1^GMRAOR2(ID,"HMPY")
"RTN","HMPDJ02",225,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ02",226,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ02",227,0)
 S ERRMSG="A problem occurred converting record "_ID_" for the allergy domain"
"RTN","HMPDJ02",228,0)
 ;
"RTN","HMPDJ02",229,0)
 S X=$P(HMPY,U,10) I $L(X) S X=$$DATE^HMPDGMRA(X) Q:X<HMPSTART  Q:X>HMPSTOP  S REAC("entered")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ02",230,0)
 S X=$$FAC^HMPD D FACILITY^HMPUTILS(X,"REAC")
"RTN","HMPDJ02",231,0)
 S REAC("kind")="Allergy / Adverse Reaction"
"RTN","HMPDJ02",232,0)
 S REAC("localId")=ID,REAC("uid")=$$SETUID^HMPUTILS("allergy",DFN,ID)
"RTN","HMPDJ02",233,0)
 S (REAC("summary"),REAC("products",1,"name"))=$P(HMPY,U) I $P(GMRA,U,9) D
"RTN","HMPDJ02",234,0)
 . S X=$P(GMRA,U,9),REAC("reference")=X
"RTN","HMPDJ02",235,0)
 . S Y=+$P(X,"(",2) I 'Y,X["PSDRUG" S Y=50
"RTN","HMPDJ02",236,0)
 . S I=$$VUID^HMPD(+X,Y),REAC("products",1,"vuid")=$$SETVURN^HMPUTILS("vuid",I)
"RTN","HMPDJ02",237,0)
 S X=$P(HMPY,U,2) S:$L(X) REAC("originatorName")=X
"RTN","HMPDJ02",238,0)
 S REAC("historical")=$S($E($P(HMPY,U,5))="H":"true",1:"false")
"RTN","HMPDJ02",239,0)
 S X=$P(HMPY,U,6) S:$L(X) REAC("mechanism")=X
"RTN","HMPDJ02",240,0)
 S X=$P(HMPY,U,7) S:$L(X) REAC("typeName")=X
"RTN","HMPDJ02",241,0)
 ; REAC("adverseEventTypeName")=$P(HMPY,U,7)_" "_$P(HMPY,U,6) ;TYPE_MECH
"RTN","HMPDJ02",242,0)
 I $P(HMPY,U,4)="VERIFIED",$P(HMPY,U,9) D
"RTN","HMPDJ02",243,0)
 . S REAC("verified")=$$JSONDT^HMPUTILS($P(HMPY,U,9))
"RTN","HMPDJ02",244,0)
 . S REAC("verifierName")=$P(HMPY,U,8)
"RTN","HMPDJ02",245,0)
 ; severity
"RTN","HMPDJ02",246,0)
 S I=0 F  S I=$O(HMPY("O",I)) Q:I<1  D
"RTN","HMPDJ02",247,0)
 . S X=$G(HMPY("O",I))
"RTN","HMPDJ02",248,0)
 . S REAC("observations",I,"date")=$$JSONDT^HMPUTILS(+X)
"RTN","HMPDJ02",249,0)
 . S REAC("observations",I,"severity")=$P(X,U,2)
"RTN","HMPDJ02",250,0)
 ; reactions
"RTN","HMPDJ02",251,0)
 S I=0 F  S I=$O(GMRAL(ID,"S",I)) Q:I<1  D
"RTN","HMPDJ02",252,0)
 . S X=$G(GMRAL(ID,"S",I))
"RTN","HMPDJ02",253,0)
 . S REAC("reactions",I,"name")=$P(X,";")
"RTN","HMPDJ02",254,0)
 . S Y=$$VUID^HMPD(+$P(X,";",2),120.83)
"RTN","HMPDJ02",255,0)
 . S REAC("reactions",I,"vuid")=$$SETVURN^HMPUTILS("vuid",Y)
"RTN","HMPDJ02",256,0)
 ; drug classes
"RTN","HMPDJ02",257,0)
 S I=0 F  S I=$O(HMPY("V",I)) Q:I<1  D
"RTN","HMPDJ02",258,0)
 . S X=$G(HMPY("V",I))
"RTN","HMPDJ02",259,0)
 . S REAC("drugClasses",I,"code")=$P(X,U)
"RTN","HMPDJ02",260,0)
 . S REAC("drugClasses",I,"name")=$P(X,U,2)
"RTN","HMPDJ02",261,0)
 S I=0 F  S I=$O(HMPY("C",I)) Q:I<1  D
"RTN","HMPDJ02",262,0)
 . S X=$G(HMPY("C",I)),USER=$$VA200^HMPDGMPL($P(X,U,3))
"RTN","HMPDJ02",263,0)
 . S REAC("comments",I,"enteredByUid")=$$SETUID^HMPUTILS("user",,+USER)
"RTN","HMPDJ02",264,0)
 . S REAC("comments",I,"enteredByName")=$P(X,U,3)
"RTN","HMPDJ02",265,0)
 . S REAC("comments",I,"entered")=$$JSONDT^HMPUTILS(+X)
"RTN","HMPDJ02",266,0)
 . K CMMT M CMMT=HMPY("C",I)
"RTN","HMPDJ02",267,0)
 . S REAC("comments",I,"comment")=$$STRING^HMPD(.CMMT)
"RTN","HMPDJ02",268,0)
 I GMRA="" S REAC("removed")="true" ;entered in error
"RTN","HMPDJ02",269,0)
 ; next
"RTN","HMPDJ02",270,0)
 S REAC("lastUpdateTime")=$$EN^HMPSTMP("allergy")
"RTN","HMPDJ02",271,0)
 S REAC("stampTime")=REAC("lastUpdateTime") ; RHL 20141231
"RTN","HMPDJ02",272,0)
 ;US6734 - pre-compile metastamp
"RTN","HMPDJ02",273,0)
 I $G(HMPMETA) D ADD^HMPMETA("allergy",REAC("uid"),REAC("stampTime")) Q:HMPMETA=1  ;US11019/US6734
"RTN","HMPDJ02",274,0)
 D ADD^HMPDJ("REAC","allergy")
"RTN","HMPDJ02",275,0)
 Q
"RTN","HMPDJ02",276,0)
 ;
"RTN","HMPDJ02",277,0)
NKA ; -- no assessment or NKA [GMRAL=0 or ""]
"RTN","HMPDJ02",278,0)
 N REAC,X
"RTN","HMPDJ02",279,0)
 S X=$G(^GMR(120.86,DFN,0)) Q:GMRAL=""!'$P(X,U,2)
"RTN","HMPDJ02",280,0)
 S REAC("uid")=$$SETUID^HMPUTILS("obs",DFN,"120.86;"_DFN)
"RTN","HMPDJ02",281,0)
 S REAC("typeCode")="urn:sct:160244002"
"RTN","HMPDJ02",282,0)
 S REAC("typeName")="No known allergies"
"RTN","HMPDJ02",283,0)
 S X=$$FAC^HMPD D FACILITY^HMPUTILS(X,"REAC")
"RTN","HMPDJ02",284,0)
 D ADD^HMPDJ("REAC","allergy")
"RTN","HMPDJ02",285,0)
 Q
"RTN","HMPDJ02",286,0)
 ;
"RTN","HMPDJ02",287,0)
GMV1(ID) ; -- vital/measurement ^UTILITY($J,"GMRVD",HMPIDT,HMPTYP,ID)
"RTN","HMPDJ02",288,0)
 N VIT,HMPY,X0,TYPE,LOC,FAC,X,Y,MRES,MUNT,HIGH,LOW,I
"RTN","HMPDJ02",289,0)
 D GETREC^GMVUTL(.HMPY,ID,1) S X0=$G(HMPY(0))
"RTN","HMPDJ02",290,0)
 ; GMRVUT0 returns CLiO data with a pseudo-ID >> get real ID
"RTN","HMPDJ02",291,0)
 I X0="",$G(HMPIDT),$D(HMPTYP) D  ;[from HMPDJ0]
"RTN","HMPDJ02",292,0)
 . N GMRVD S GMRVD=$G(^UTILITY($J,"GMRVD",HMPIDT,HMPTYP,ID))
"RTN","HMPDJ02",293,0)
 . S ID=$O(^PXRMINDX(120.5,"PI",DFN,$P(GMRVD,U,3),+GMRVD,""))
"RTN","HMPDJ02",294,0)
 . I $L(ID) D GETREC^GMVUTL(.HMPY,ID,1) S X0=$G(HMPY(0))
"RTN","HMPDJ02",295,0)
 Q:X0=""
"RTN","HMPDJ02",296,0)
 ;
"RTN","HMPDJ02",297,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ02",298,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ02",299,0)
 S ERRMSG="A problem occurred converting record "_ID_" for the vitals domain"
"RTN","HMPDJ02",300,0)
 S VIT("localId")=ID,VIT("kind")="Vital Sign"
"RTN","HMPDJ02",301,0)
 S VIT("uid")=$$SETUID^HMPUTILS("vital",DFN,ID)
"RTN","HMPDJ02",302,0)
 S VIT("observed")=$$JSONDT^HMPUTILS(+X0)
"RTN","HMPDJ02",303,0)
 S VIT("resulted")=$$JSONDT^HMPUTILS(+$P(X0,U,4))
"RTN","HMPDJ02",304,0)
 S TYPE=$$FIELD^GMVGETVT(+$P(X0,U,3),2)
"RTN","HMPDJ02",305,0)
 S VIT("displayName")=TYPE
"RTN","HMPDJ02",306,0)
 S VIT("typeName")=$$FIELD^GMVGETVT($P(X0,U,3),1)
"RTN","HMPDJ02",307,0)
 S VIT("typeCode")="urn:va:vuid:"_$$FIELD^GMVGETVT($P(X0,U,3),4)
"RTN","HMPDJ02",308,0)
 S X=$P(X0,U,8),VIT("result")=X
"RTN","HMPDJ02",309,0)
 S VIT("units")=$$UNIT^HMPDGMV(TYPE),(MRES,MUNT)=""
"RTN","HMPDJ02",310,0)
 I TYPE="T"  S:X=+X MUNT="C",MRES=$J(X-32*5/9,0,1) ;EN1^GMRVUTL
"RTN","HMPDJ02",311,0)
 I TYPE="HT" S MUNT="cm",MRES=$J(2.54*X,0,2)  ;EN2^GMRVUTL
"RTN","HMPDJ02",312,0)
 I TYPE="WT" S MUNT="kg",MRES=$J(X/2.2,0,2)   ;EN3^GMRVUTL
"RTN","HMPDJ02",313,0)
 I TYPE="CG" S MUNT="cm",MRES=$J(2.54*X,0,2)
"RTN","HMPDJ02",314,0)
 S:MRES VIT("metricResult")=MRES,VIT("metricUnits")=MUNT
"RTN","HMPDJ02",315,0)
 S X=$$RANGE^HMPDGMV(TYPE) I $L(X) S VIT("high")=$P(X,U),VIT("low")=$P(X,U,2)
"RTN","HMPDJ02",316,0)
 S VIT("summary")=VIT("typeName")_" "_VIT("result")_" "_VIT("units")
"RTN","HMPDJ02",317,0)
 F I=1:1:$L(HMPY(5),U) S X=$P(HMPY(5),U,I) I X D
"RTN","HMPDJ02",318,0)
 . S VIT("qualifiers",I,"name")=$$FIELD^GMVGETQL(X,1)
"RTN","HMPDJ02",319,0)
 . S VIT("qualifiers",I,"vuid")=$$FIELD^GMVGETQL(X,3)
"RTN","HMPDJ02",320,0)
 ;US4338 - add pulse ox qualifier if it exists. name component is required. vuid is not per Thomas Loth
"RTN","HMPDJ02",321,0)
 I $P(X0,U,10) S VIT("qualifiers",I+1,"name")=$P(X0,U,10)
"RTN","HMPDJ02",322,0)
 I $G(HMPY(2)) D
"RTN","HMPDJ02",323,0)
 . S VIT("removed")="true"        ;entered in error
"RTN","HMPDJ02",324,0)
 . S X=$$GET1^DIQ(120.506,"1,"_ID_",",.01,"E") S:X VIT("reasonEnteredInError")=X
"RTN","HMPDJ02",325,0)
 . S X=$$GET1^DIQ(120.506,"1,"_ID_",",.02,"I") S:X VIT("dateEnteredInError")=$$JSONDT^HMPUTILS(X)
"RTN","HMPDJ02",326,0)
 S LOC=+$P(X0,U,5),FAC=$$FAC^HMPD(LOC)
"RTN","HMPDJ02",327,0)
 S VIT("locationUid")=$$SETUID^HMPUTILS("location",,LOC)
"RTN","HMPDJ02",328,0)
 S VIT("locationName")=$S(LOC:$P($G(^SC(LOC,0)),U),1:"unknown")
"RTN","HMPDJ02",329,0)
 N USERID S USERID=$P(HMPY(0),U,6)
"RTN","HMPDJ02",330,0)
 I $G(USERID) D
"RTN","HMPDJ02",331,0)
 . S VIT("enteredByUid")=$$SETUID^HMPUTILS("user",,USERID)
"RTN","HMPDJ02",332,0)
 . S VIT("enteredByName")=$P($G(^VA(200,USERID,0)),U,1)
"RTN","HMPDJ02",333,0)
 D FACILITY^HMPUTILS(FAC,"VIT")
"RTN","HMPDJ02",334,0)
 S VIT("lastUpdateTime")=$$EN^HMPSTMP("vital")
"RTN","HMPDJ02",335,0)
 S VIT("stampTime")=VIT("lastUpdateTime") ; RHL 20141231
"RTN","HMPDJ02",336,0)
 ;US6734 - pre-compile metastamp
"RTN","HMPDJ02",337,0)
 I $G(HMPMETA) D ADD^HMPMETA("vital",VIT("uid"),VIT("stampTime")) Q:HMPMETA=1  ;US11019/US6734
"RTN","HMPDJ02",338,0)
 D ADD^HMPDJ("VIT","vital")
"RTN","HMPDJ02",339,0)
 Q
"RTN","HMPDJ02",340,0)
 ;
"RTN","HMPDJ02",341,0)
HMP(COLL) ; -- HMP Patient Objects
"RTN","HMPDJ02",342,0)
 N ID I $L($G(HMPID)) D  Q
"RTN","HMPDJ02",343,0)
 . S ID=+HMPID I 'ID S ID=+$O(^HMP(800000.1,"B",HMPID,0)) ;IEN or UID
"RTN","HMPDJ02",344,0)
 . D:ID HMP1(800000.1,ID)
"RTN","HMPDJ02",345,0)
 Q:$G(COLL)=""  ;error
"RTN","HMPDJ02",346,0)
 S ID=0 F  S ID=$O(^HMP(800000.1,"C",DFN,COLL,ID)) Q:ID<1  D HMP1(800000.1,ID)
"RTN","HMPDJ02",347,0)
 Q
"RTN","HMPDJ02",348,0)
HMP1(FNUM,ID) ; -- [patient] object
"RTN","HMPDJ02",349,0)
 N I,X,HMPY
"RTN","HMPDJ02",350,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ02",351,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=$G(DFN)
"RTN","HMPDJ02",352,0)
 S ERRMSG="A problem occurred retreiving record "_ID_" for the HMP domain"
"RTN","HMPDJ02",353,0)
 S I=0 F  S I=$O(^HMP(FNUM,ID,1,I)) Q:I<1  S X=$G(^(I,0)),HMPY(I)=X
"RTN","HMPDJ02",354,0)
 I $D(HMPY) D  ;already encoded JSON
"RTN","HMPDJ02",355,0)
 . S HMPI=HMPI+1 S:HMPI>1 @HMP@(HMPI,.3)=","
"RTN","HMPDJ02",356,0)
 . M @HMP@(HMPI)=HMPY
"RTN","HMPDJ02",357,0)
 . ; -- chunk data if from DQINIT^HMPDJFSP ; i.e. HMPCHNK defined ;*S68-JCH*
"RTN","HMPDJ02",358,0)
 . D CHNKCHK^HMPDJFSP(.HMP,.HMPI) ;*S68-JCH*
"RTN","HMPDJ02",359,0)
 Q
"RTN","HMPDJ04")
0^3^B85767802
"RTN","HMPDJ04",1,0)
HMPDJ04 ;SLC/MKB,ASMR/RRB,ASF,PB - Appointments,Visits;May 24, 2016 15:21:17
"RTN","HMPDJ04",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**2,3**;Sep 01, 2011;Build 2
"RTN","HMPDJ04",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","HMPDJ04",4,0)
 ;
"RTN","HMPDJ04",5,0)
 ; External References          DBIA#
"RTN","HMPDJ04",6,0)
 ; -------------------          -----
"RTN","HMPDJ04",7,0)
 ; ^AUPNVSIT                     2028
"RTN","HMPDJ04",8,0)
 ; ^DGS(41.1                     3796
"RTN","HMPDJ04",9,0)
 ; ^DIC(42                      10039
"RTN","HMPDJ04",10,0)
 ; ^SC                          10040
"RTN","HMPDJ04",11,0)
 ; ^VA(200                      10060
"RTN","HMPDJ04",12,0)
 ; DIQ                           2056
"RTN","HMPDJ04",13,0)
 ; ICPTCOD                       1995
"RTN","HMPDJ04",14,0)
 ; ENCEVENT^PXKENC               1894  ;DE6363 - JD - 8/23/16
"RTN","HMPDJ04",15,0)
 ; SDAMA301                      4433
"RTN","HMPDJ04",16,0)
 ; XLFDT                        10103
"RTN","HMPDJ04",17,0)
 ; XUAF4                         2171
"RTN","HMPDJ04",18,0)
 ; EDP(230                       6275
"RTN","HMPDJ04",19,0)
 ; SC(                             93
"RTN","HMPDJ04",20,0)
 ;
"RTN","HMPDJ04",21,0)
 ; All tags expect DFN, ID, [HMPSTART, HMPSTOP, HMPMAX, HMPTEXT]
"RTN","HMPDJ04",22,0)
 Q
"RTN","HMPDJ04",23,0)
 ;
"RTN","HMPDJ04",24,0)
SDAM1 ; -- appointment ^TMP($J,"SDAMA301",DFN,HMPDT)
"RTN","HMPDJ04",25,0)
 N NODE,HLOC,APPT,X,STS,CLS,FAC,SV,PRV
"RTN","HMPDJ04",26,0)
 S NODE=$G(^TMP($J,"SDAMA301",DFN,HMPDT))
"RTN","HMPDJ04",27,0)
 N $ES,$ET,ERRPAT,ERRMSG
"RTN","HMPDJ04",28,0)
 S $ET="D ERRHDLR^HMPDERRH",ERRPAT=DFN
"RTN","HMPDJ04",29,0)
 S ERRMSG="A problem occurred converting a record for the appointment domain"
"RTN","HMPDJ04",30,0)
 ;
"RTN","HMPDJ04",31,0)
 S HLOC=$P(NODE,U,2),X="A;"_HMPDT_";"_+HLOC
"RTN","HMPDJ04",32,0)
 I $L($G(ID)),$P(ID,";",1,3)'=X Q
"RTN","HMPDJ04",33,0)
 S APPT("localId")=X,APPT("uid")=$$SETUID^HMPUTILS("appointment",DFN,X)
"RTN","HMPDJ04",34,0)
 S X=$P(NODE,U,10),APPT("typeCode")=$P(X,";"),APPT("typeName")=$P(X,";",2)
"RTN","HMPDJ04",35,0)
 S STS=$P(NODE,U,3),CLS=$S($E(STS)="I":"I",1:"O")
"RTN","HMPDJ04",36,0)
 S STS=$P($P(NODE,U,22),";",1,2)  ;DE4469 - PB - APR 26, 2016 changed from using the SDAMA308 API to using the SDAMA301 Supported API to get appointment status ICR 4433
"RTN","HMPDJ04",37,0)
 S APPT("dateTime")=$$JSONDT^HMPUTILS(HMPDT)
"RTN","HMPDJ04",38,0)
 S:$L($P(NODE,U,6)) APPT("comment")=$P(NODE,U,6)
"RTN","HMPDJ04",39,0)
 S:$P(NODE,U,9) APPT("checkIn")=$$JSONDT^HMPUTILS($P(NODE,U,9))
"RTN","HMPDJ04",40,0)
 S:$P(NODE,U,11) APPT("checkOut")=$$JSONDT^HMPUTILS($P(NODE,U,11))
"RTN","HMPDJ04",41,0)
 I $L(ID,";")>3 S APPT("reasonName")=$P(ID,";",4),PRV=+$P(ID,";",5) ;from SDAM event
"RTN","HMPDJ04",42,0)
 S FAC=$$FAC^HMPD(+HLOC) D FACILITY^HMPUTILS(FAC,"APPT") I HLOC D
"RTN","HMPDJ04",43,0)
 . S APPT("locationName")=$P(HLOC,";",2)
"RTN","HMPDJ04",44,0)
 . S APPT("locationUid")=$$SETUID^HMPUTILS("location",,+HLOC)
"RTN","HMPDJ04",45,0)
 . S X=$$GET1^DIQ(44,(+HLOC)_",",1) S:X]"" APPT("shortLocationName")=X  ;DE2818, (#1) ABBREVIATION
"RTN","HMPDJ04",46,0)
 . S X=$$AMIS^HMPDVSIT(+$P(NODE,U,13))
"RTN","HMPDJ04",47,0)
 . S:$L(X) APPT("stopCodeUid")="urn:va:stop-code:"_$P(X,U),APPT("stopCodeName")=$P(X,U,2)
"RTN","HMPDJ04",48,0)
 . S SV=$$GET1^DIQ(44,+HLOC_",",9.5,"I")
"RTN","HMPDJ04",49,0)
 . I SV S APPT("service")=$$SERV^HMPDSDAM(SV)
"RTN","HMPDJ04",50,0)
 ;DE5209 7/14/2016 CK - remove Appointment Provider
"RTN","HMPDJ04",51,0)
 S APPT("patientClassCode")="urn:va:patient-class:"_$S(CLS="I":"IMP",1:"AMB")
"RTN","HMPDJ04",52,0)
 S APPT("patientClassName")=$S(CLS="I":"Inpatient",1:"Ambulatory")
"RTN","HMPDJ04",53,0)
 S APPT("categoryCode")="urn:va:encounter-category:OV",APPT("categoryName")="Outpatient Visit"
"RTN","HMPDJ04",54,0)
 S APPT("appointmentStatus")=$P(STS,";",2)
"RTN","HMPDJ04",55,0)
 S APPT("lastUpdateTime")=$$EN^HMPSTMP("appointment") ;RHL 20150102
"RTN","HMPDJ04",56,0)
 S APPT("stampTime")=APPT("lastUpdateTime") ; RHL 20150102
"RTN","HMPDJ04",57,0)
 ;US6734 - pre-compile metastamp
"RTN","HMPDJ04",58,0)
 I $G(HMPMETA) D ADD^HMPMETA("appointment",APPT("uid"),APPT("stampTime")) Q:HMPMETA=1  ;US6734,US11019
"RTN","HMPDJ04",59,0)
 D ADD^HMPDJ("APPT","appointment")
"RTN","HMPDJ04",60,0)
 Q
"RTN","HMPDJ04",61,0)
 ;
"RTN","HMPDJ04",62,0)
DGS ; scheduled admissions [from APPOINTM^HMPDJ0]
"RTN","HMPDJ04",63,0)
 ;DE2818, ^DGS(41.1) references ICR 3796
"RTN","HMPDJ04",64,0)
 S HMPA=0 F  S HMPA=$O(^DGS(41.1,"B",DFN,HMPA)) Q:HMPA<1  D  Q:HMPI'<HMPMAX
"RTN","HMPDJ04",65,0)
 . S HMPX=$G(^DGS(41.1,HMPA,0))
"RTN","HMPDJ04",66,0)
 . I $L($G(ID)),+$P(ID,";",2)=+$P(HMPX,U,2) D DGS1(HMPA) Q
"RTN","HMPDJ04",67,0)
 . Q:$P(HMPX,U,13)  Q:$P(HMPX,U,17)  ;cancelled or admitted
"RTN","HMPDJ04",68,0)
 . S X=$P(HMPX,U,2) Q:X<HMPSTART!(X>HMPSTOP)  ;out of date range
"RTN","HMPDJ04",69,0)
 . D DGS1(HMPA)
"RTN","HMPDJ04",70,0)
 Q
"RTN","HMPDJ04",71,0)
 ;
"RTN","HMPDJ04",72,0)
DGS1(IFN) ; -- scheduled admission
"RTN","HMPDJ04",73,0)
 N ADM,X0,DATE,HLOC,FAC,SV,X
"RTN","HMPDJ04",74,0)
 S X0=$G(^DGS(41.1,+$G(IFN),0)) Q:X0=""  ;deleted (DE2818, ICR 3796)
"RTN","HMPDJ04",75,0)
 ;
"RTN","HMPDJ04",76,0)
 S DATE=+$P(X0,U,2),HLOC=+$$GET1^DIQ(42,+$P(X0,U,8)_",",.01)  ;DE2818, ICR 10039
"RTN","HMPDJ04",77,0)
 S X="H;"_DATE,ADM("localId")=X,ADM("uid")=$$SETUID^HMPUTILS("appointment",DFN,X)
"RTN","HMPDJ04",78,0)
 S ADM("dateTime")=$$JSONDT^HMPUTILS(DATE)
"RTN","HMPDJ04",79,0)
 S FAC=$$FAC^HMPD(+HLOC) D FACILITY^HMPUTILS(FAC,"ADM") I HLOC D
"RTN","HMPDJ04",80,0)
 . S HLOC=$$GET1^DIQ(44,(+HLOC)_",",.01)  ;DE2818, (#.01) NAME
"RTN","HMPDJ04",81,0)
 . S ADM("uid")=ADM("uid")_";"_+HLOC
"RTN","HMPDJ04",82,0)
 . S ADM("locationName")=$P(HLOC,";",2)
"RTN","HMPDJ04",83,0)
 . S X=$$GET1^DIQ(44,(+HLOC)_",",1)  S:X]"" ADM("shortLocationName")=X  ;DE2818, (#1) ABBREVIATION
"RTN","HMPDJ04",84,0)
 . S ADM("locationUid")=$$SETUID^HMPUTILS("location",,+HLOC)
"RTN","HMPDJ04",85,0)
 . S X=$$GET1^DIQ(44,+HLOC_",",8,"I"),X=$$AMIS^HMPDVSIT(X)
"RTN","HMPDJ04",86,0)
 . S:$L(X) ADM("stopCodeUid")="urn:va:stop-code:"_$P(X,U),ADM("stopCodeName")=$P(X,U,2)
"RTN","HMPDJ04",87,0)
 . S SV=$$GET1^DIQ(44,+HLOC_",",9.5,"I")
"RTN","HMPDJ04",88,0)
 . I SV S ADM("service")=$$SERV^HMPDSDAM(SV)
"RTN","HMPDJ04",89,0)
 S X=+$P(X0,U,5) I X D
"RTN","HMPDJ04",90,0)
 . S ADM("providers",1,"providerUid")=$$SETUID^HMPUTILS("user",,X)
"RTN","HMPDJ04",91,0)
 . S ADM("providers",1,"providerName")=$$GET1^DIQ(200,X_",",.01)  ;DE2818
"RTN","HMPDJ04",92,0)
 S ADM("patientClassCode")="urn:va:patient-class:IMP",ADM("patientClassName")="Inpatient"
"RTN","HMPDJ04",93,0)
 S ADM("categoryCode")="urn:va:encounter-category:AD",ADM("categoryName")="Admission"
"RTN","HMPDJ04",94,0)
 S ADM("appointmentStatus")=$S($P(X0,U,17):"ADMITTED",$P(X0,U,13):"CANCELLED",1:"SCHEDULED")
"RTN","HMPDJ04",95,0)
 S ADM("lastUpdateTime")=$$EN^HMPSTMP("adm") ;RHL 20150102
"RTN","HMPDJ04",96,0)
 S ADM("stampTime")=ADM("lastUpdateTime") ; RHL 20150102
"RTN","HMPDJ04",97,0)
 ;US6734 - pre-compile metastamp
"RTN","HMPDJ04",98,0)
 I $G(HMPMETA) D ADD^HMPMETA("appointment",ADM("uid"),ADM("stampTime")) Q:HMPMETA=1  ;US6734,US11019
"RTN","HMPDJ04",99,0)
 D ADD^HMPDJ("ADM","appointment")
"RTN","HMPDJ04",100,0)
 Q
"RTN","HMPDJ04",101,0)
 ;
"RTN","HMPDJ04",102,0)
VSIT1(ID) ; -- visit
"RTN","HMPDJ04",103,0)
 N VST,X0,X15,X,FAC,LOC,CATG,AMIS,INPT,DA,PS
"RTN","HMPDJ04",104,0)
 I $G(ID)?1"H"1.N D ADM^HMPDJ04A(ID) Q
"RTN","HMPDJ04",105,0)
 ;DE2818, ICR 6275
"RTN","HMPDJ04",106,0)
 I $D(^EDP(230,"V",ID)),$L($T(EDP1^HMPDJ04E)) D EDP1^HMPDJ04E(ID) Q
"RTN","HMPDJ04",107,0)
 ; ENCEVENT^PXAPI(ID)
"RTN","HMPDJ04",108,0)
 ;
"RTN","HMPDJ04",109,0)
 ; DE2818, ^AUPNVSIT - ICR 2028
"RTN","HMPDJ04",110,0)
 S X0=$G(^AUPNVSIT(ID,0)),X15=$G(^(150)) Q:X0=""  ;pjh - quit if visit already deleted
"RTN","HMPDJ04",111,0)
 ; X0=$G(^TMP("PXKENC",$J,ID,"VST",ID,0)),X15=$G(^(150))
"RTN","HMPDJ04",112,0)
 ;Q:$P(X15,U,3)'="P"  Q:$P(X0,U,7)="E"  Q:$P(X0,U,12)  ;primary, not historical or child
"RTN","HMPDJ04",113,0)
 I $P(X0,U,7)="H" D ADM^HMPDJ04A(ID,+X0) Q
"RTN","HMPDJ04",114,0)
 S VST("localId")=ID,VST("uid")=$$SETUID^HMPUTILS("visit",DFN,ID)
"RTN","HMPDJ04",115,0)
 S VST("dateTime")=$$JSONDT^HMPUTILS(+X0)  ;(#.01) VISIT/ADMIT DATE&TIME
"RTN","HMPDJ04",116,0)
 S:$P(X0,U,18) VST("checkOut")=$$JSONDT^HMPUTILS($P(X0,U,18))  ;(#.18) CHECK OUT DATE&TIME
"RTN","HMPDJ04",117,0)
 S:$P(X0,U,12) VST("parentUid")=$$SETUID^HMPUTILS("visit",DFN,$P(X0,U,12))  ;(#.12) PARENT VISIT LINK
"RTN","HMPDJ04",118,0)
 ;(#.06) LOC. OF ENCOUNTER, (#.07) SERVICE CATEGORY, (#.22) HOSPITAL LOCATION
"RTN","HMPDJ04",119,0)
 S FAC=+$P(X0,U,6),CATG=$P(X0,U,7),LOC=+$P(X0,U,22)
"RTN","HMPDJ04",120,0)
 S:FAC X=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","HMPDJ04",121,0)
 S:'FAC X=$$FAC^HMPD(LOC) D FACILITY^HMPUTILS(X,"VST")
"RTN","HMPDJ04",122,0)
 S X=$S(CATG="H":"AD",CATG="C":"CR",CATG="T":"TC",CATG="N":"U",CATG="R":"NH","D^X"[CATG:"O",1:"OV")
"RTN","HMPDJ04",123,0)
 S VST("categoryCode")="urn:va:encounter-category:"_X
"RTN","HMPDJ04",124,0)
 S VST("categoryName")=$S(X="AD":"Admission",X="CR":"Chart Review",X="TC":"Phone Contact",X="U":"Unknown",X="NH":"Nursing Home",X="O":"Other",1:"Outpatient Visit")
"RTN","HMPDJ04",125,0)
 S INPT=$P(X15,U,2) S:INPT="" INPT=$S("H^I^R^D"[CATG:1,1:0)  ;(#15002) PATIENT STATUS IN/OUT
"RTN","HMPDJ04",126,0)
 S X=$P(X15,U,3) S:$L(X) VST("encounterType")=X  ;(#15003) ENCOUNTER TYPE
"RTN","HMPDJ04",127,0)
 S X=$$CPT(ID) S:X VST("typeName")=$P($$CPT^ICPTCOD(X),U,3)
"RTN","HMPDJ04",128,0)
 I 'X S VST("typeName")=$S('INPT&LOC:$$GET1^DIQ(44,LOC_",",.01)_" VISIT",1:$$CATG^HMPDVSIT(CATG))  ;DE2818
"RTN","HMPDJ04",129,0)
 S VST("patientClassCode")="urn:va:patient-class:"_$S(INPT:"IMP",1:"AMB")
"RTN","HMPDJ04",130,0)
 S VST("patientClassName")=$S(INPT:"Inpatient",1:"Ambulatory")
"RTN","HMPDJ04",131,0)
 ; US12589 - add createdByName field to extract
"RTN","HMPDJ04",132,0)
 S X=$$GET1^DIQ(200,$P(X0,U,23)_",",".01") S:$G(X)="" X="UNKNOWN"
"RTN","HMPDJ04",133,0)
 S VST("createdByName")=X
"RTN","HMPDJ04",134,0)
 ;(#.08) DSS ID
"RTN","HMPDJ04",135,0)
 S X=$P(X0,U,8) S:X AMIS=$$AMIS^HMPDVSIT(X) I LOC D
"RTN","HMPDJ04",136,0)
 . I 'X N AMISARR D GETS^DIQ(44,LOC_",",8,"I","AMISARR","ERR") I $G(AMISARR(44,LOC_",",8,"I"))'="" S X=$G(AMISARR(44,LOC_",",8,"I")),AMIS=$$AMIS^HMPDVSIT(X)  ;DE5300 - PB - Jun 30 2015 changed call to get stop code name and number
"RTN","HMPDJ04",137,0)
 . S VST("locationUid")=$$SETUID^HMPUTILS("location",,+LOC)
"RTN","HMPDJ04",138,0)
 . S X=$$GET1^DIQ(44,LOC_",",1) S:X]"" VST("shortLocationName")=X  ;DE2818, (#1) ABBREVIATION
"RTN","HMPDJ04",139,0)
 . S VST("locationName")=$$GET1^DIQ(44,LOC_",",.01)  ;DE2818, (#.01) NAME
"RTN","HMPDJ04",140,0)
 . S VST("locationOos")=$S($$GET1^DIQ(44,LOC_",",50.01,"I"):"true",1:"false")  ;DE2818, (#50.01) OCCASION OF SERVICE CLINIC?
"RTN","HMPDJ04",141,0)
 . S X=$$SERV^HMPDVSIT($$GET1^DIQ(44,LOC_",",9.5,"I")) S:$L(X) VST("service")=X  ;DE2818, (#9.5) TREATING SPECIALTY
"RTN","HMPDJ04",142,0)
 S:$D(AMIS) VST("stopCodeUid")="urn:va:stop-code:"_$P(AMIS,U),VST("stopCodeName")=$P(AMIS,U,2)
"RTN","HMPDJ04",143,0)
 S X=$$POV(ID) S:$L(X) VST("reasonUid")=$$SETNCS^HMPUTILS("icd",$P(X,U)),VST("reasonName")=$P(X,U,2)
"RTN","HMPDJ04",144,0)
 ; provider(s), DE2818 - ^AUPNVPRV references - ICR 2316
"RTN","HMPDJ04",145,0)
 S DA=0 F  S DA=$O(^AUPNVPRV("AD",ID,DA)) Q:DA<1  D
"RTN","HMPDJ04",146,0)
 . S X0=$G(^AUPNVPRV(DA,0))
"RTN","HMPDJ04",147,0)
 . I $P(X0,U,4)="P" D PROV("VST",DA,+X0,"P",1) Q  ;primary
"RTN","HMPDJ04",148,0)
 . D:'$D(PS(+X0)) PROV("VST",DA,+X0,"S")          ;secondary
"RTN","HMPDJ04",149,0)
 . S PS(+X0)=""                                   ; (no duplicates)
"RTN","HMPDJ04",150,0)
 K ^TMP("PXKENC",$J,ID)
"RTN","HMPDJ04",151,0)
 S VST("lastUpdateTime")=$$EN^HMPSTMP("visit") ;RHL 20150103
"RTN","HMPDJ04",152,0)
 S VST("stampTime")=VST("lastUpdateTime") ; RHL 20150103
"RTN","HMPDJ04",153,0)
 ;US6734 - pre-compile metastamp
"RTN","HMPDJ04",154,0)
 I $G(HMPMETA) D ADD^HMPMETA("visit",VST("uid"),VST("stampTime")) Q:HMPMETA=1  ;US6734,US11019
"RTN","HMPDJ04",155,0)
 D ADD^HMPDJ("VST","visit")
"RTN","HMPDJ04",156,0)
 Q
"RTN","HMPDJ04",157,0)
 ;
"RTN","HMPDJ04",158,0)
CPT(VISIT) ; -- Return CPT code of encounter type
"RTN","HMPDJ04",159,0)
 ;DE2818 - Change to use API and not directly access the global
"RTN","HMPDJ04",160,0)
 N DA,Y S Y=""
"RTN","HMPDJ04",161,0)
 ;DE4198 - remove use of ^AUPNVCPT
"RTN","HMPDJ04",162,0)
 D ENCEVENT^PXKENC(VISIT,1)  ;ICR 1894
"RTN","HMPDJ04",163,0)
 S DA=0 F  S DA=$O(^TMP("PXKENC",$J,VISIT,"CPT",DA)) Q:DA<1  D  Q:$L(Y)
"RTN","HMPDJ04",164,0)
 . I +$G(^TMP("PXKENC",$J,VISIT,"CPT",DA,0))?1"992"2N S Y=+$G(^TMP("PXKENC",$J,VISIT,"CPT",DA,0))
"RTN","HMPDJ04",165,0)
 Q Y
"RTN","HMPDJ04",166,0)
 ;
"RTN","HMPDJ04",167,0)
POV(VISIT) ; -- return the primary Purpose of Visit as ICD^ProviderNarrative
"RTN","HMPDJ04",168,0)
 N DA,Y,X,X0,ICD S Y=""
"RTN","HMPDJ04",169,0)
 ;DE2818, ^AUPNVPOV( - ICR 3094
"RTN","HMPDJ04",170,0)
 S DA=0 F  S DA=$O(^AUPNVPOV("AD",VISIT,DA)) Q:DA<1  D  Q:$L(Y)
"RTN","HMPDJ04",171,0)
 . S X0=$G(^AUPNVPOV(DA,0)) Q:$P(X0,U,12)'="P"
"RTN","HMPDJ04",172,0)
 . S X=+$P(X0,U,4),ICD=$$ICD^HMPDVSIT(+X0)
"RTN","HMPDJ04",173,0)
 . S Y=ICD_U_$$EXTERNAL^DILFD(9000010.07,.04,,X)
"RTN","HMPDJ04",174,0)
 Q Y
"RTN","HMPDJ04",175,0)
 ;
"RTN","HMPDJ04",176,0)
PROV(ARR,I,IEN,ROLE,PRIM) ; -- add providers
"RTN","HMPDJ04",177,0)
 S @ARR@("providers",I,"providerUid")=$$SETUID^HMPUTILS("user",,+IEN)
"RTN","HMPDJ04",178,0)
 S @ARR@("providers",I,"providerName")=$$GET1^DIQ(200,(+IEN)_",",.01)  ;DE2818
"RTN","HMPDJ04",179,0)
 S @ARR@("providers",I,"role")=ROLE
"RTN","HMPDJ04",180,0)
 S:$G(PRIM) @ARR@("providers",I,"primary")="true"
"RTN","HMPDJ04",181,0)
 Q
"RTN","HMPDJ04",182,0)
 ;
"RTN","HMPDJ04",183,0)
NAME(IEN) ; -- Return a string 'name' for the visit
"RTN","HMPDJ04",184,0)
 N Y,X0,LOC,DATE
"RTN","HMPDJ04",185,0)
 S X0=$G(^AUPNVSIT(+$G(IEN),0)),Y=""  ;DE2818, ICR 2028
"RTN","HMPDJ04",186,0)
 S DATE=+X0,LOC=+$P(X0,U,22) S:LOC LOC=$$GET1^DIQ(44,LOC_",",.01)_" "  ;DE2818
"RTN","HMPDJ04",187,0)
 S Y=LOC_$$FMTE^XLFDT(DATE,"1D") ;Mon DD, YYYY
"RTN","HMPDJ04",188,0)
 Q Y
"RTN","HMPDJ04",189,0)
 ;
"RTN","HMPDJ04",190,0)
FAC(IEN)  ; -- Return Facility for the visit
"RTN","HMPDJ04",191,0)
 Q:'+$G(IEN) ""
"RTN","HMPDJ04",192,0)
 N FAC S FAC=+$$GET1^DIQ(9000010,IEN_",",.06,"I")
"RTN","HMPDJ04",193,0)
 Q:FAC $$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","HMPDJ04",194,0)
 S FAC=+$$GET1^DIQ(9000010,IEN_",",.22,"I")
"RTN","HMPDJ04",195,0)
 Q $$FAC^HMPD(FAC)
"RTN","HMPDJ04",196,0)
 ;
"RTN","HMPDJ04",197,0)
STCODE(IEN)  ;  -- Return stop code information for the visit Q:'+$G(IEN) ""
"RTN","HMPDJ04",198,0)
 Q:'+$G(IEN) ""
"RTN","HMPDJ04",199,0)
 N STCODE,LIEN S STCODE=+$$GET1^DIQ(9000010,IEN_",",.08,"I")
"RTN","HMPDJ04",200,0)
 Q:STCODE $$AMIS^HMPDVSIT(STCODE)
"RTN","HMPDJ04",201,0)
 S LIEN=+$$GET1^DIQ(9000010,IEN_",",.22,"I")
"RTN","HMPDJ04",202,0)
 I LIEN S STCODE=+$$GET1^DIQ(44,LIEN_",",8,"I")
"RTN","HMPDJ04",203,0)
 Q:STCODE $$AMIS^HMPDVSIT(STCODE)
"RTN","HMPDJ04",204,0)
 Q ""
"RTN","HMPDJ04",205,0)
 ;
"RTN","HMPDJ04",206,0)
STOPCODE(X,Y)  ;  -- Return stop code info for JSON
"RTN","HMPDJ04",207,0)
 S @Y@("stopCodeUid")="urn:va:stop-code:"_$P(X,U)
"RTN","HMPDJ04",208,0)
 S @Y@("stopCodeName")=$P(X,U,2)
"RTN","HMPDJ04",209,0)
 Q
"RTN","HMPDJ04",210,0)
 ;
"RTN","HMPDJFSD")
0^11^B7195569
"RTN","HMPDJFSD",1,0)
HMPDJFSD ;SLC/KCM,ASMR/RRB,MBS -- Domain Lists for Extract and Freshness Stream;Sep 1, 2016 17:28:47
"RTN","HMPDJFSD",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**2,3**;Sep 01, 2011;Build 2
"RTN","HMPDJFSD",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","HMPDJFSD",4,0)
 ;
"RTN","HMPDJFSD",5,0)
 ; DE2818/RRB: SQA findings 1st 3 lines
"RTN","HMPDJFSD",6,0)
 ;
"RTN","HMPDJFSD",7,0)
 ; DE6652 - JD - 9/1/16: Removed sign-symptom domain from the list for operational data.
"RTN","HMPDJFSD",8,0)
 ;                       OPDOMS tag.
"RTN","HMPDJFSD",9,0)
 ;
"RTN","HMPDJFSD",10,0)
 Q
"RTN","HMPDJFSD",11,0)
 ;
"RTN","HMPDJFSD",12,0)
PTDOMS(LIST) ; load default patient domains (put in parameter?); cpc modded order 9/29/2015; DE4879 - Removed "factor" entry
"RTN","HMPDJFSD",13,0)
 ;;order
"RTN","HMPDJFSD",14,0)
 ;;vital
"RTN","HMPDJFSD",15,0)
 ;;lab
"RTN","HMPDJFSD",16,0)
 ;;med
"RTN","HMPDJFSD",17,0)
 ;;document
"RTN","HMPDJFSD",18,0)
 ;;allergy
"RTN","HMPDJFSD",19,0)
 ;;auxiliary
"RTN","HMPDJFSD",20,0)
 ;;appointment
"RTN","HMPDJFSD",21,0)
 ;;diagnosis
"RTN","HMPDJFSD",22,0)
 ;;visit
"RTN","HMPDJFSD",23,0)
 ;;immunization
"RTN","HMPDJFSD",24,0)
 ;;obs
"RTN","HMPDJFSD",25,0)
 ;;problem
"RTN","HMPDJFSD",26,0)
 ;;procedure
"RTN","HMPDJFSD",27,0)
 ;;consult
"RTN","HMPDJFSD",28,0)
 ;;image
"RTN","HMPDJFSD",29,0)
 ;;surgery
"RTN","HMPDJFSD",30,0)
 ;;task
"RTN","HMPDJFSD",31,0)
 ;;ptf
"RTN","HMPDJFSD",32,0)
 ;;exam
"RTN","HMPDJFSD",33,0)
 ;;cpt
"RTN","HMPDJFSD",34,0)
 ;;education
"RTN","HMPDJFSD",35,0)
 ;;pov
"RTN","HMPDJFSD",36,0)
 ;;skin
"RTN","HMPDJFSD",37,0)
 ;;treatment
"RTN","HMPDJFSD",38,0)
 ;;roadtrip
"RTN","HMPDJFSD",39,0)
 ;;patient
"RTN","HMPDJFSD",40,0)
 ;;zzzzz
"RTN","HMPDJFSD",41,0)
 ;
"RTN","HMPDJFSD",42,0)
 ;;mh
"RTN","HMPDJFSD",43,0)
 ;
"RTN","HMPDJFSD",44,0)
 N I,X
"RTN","HMPDJFSD",45,0)
 F I=1:1 S X=$P($T(PTDOMS+I),";;",2,99) Q:X="zzzzz"  S LIST(I)=X
"RTN","HMPDJFSD",46,0)
 Q
"RTN","HMPDJFSD",47,0)
 ;
"RTN","HMPDJFSD",48,0)
OPDOMS(LIST) ; load default operational domains (put in parameter?)
"RTN","HMPDJFSD",49,0)
 ;;asu-class;^USR(8930)
"RTN","HMPDJFSD",50,0)
 ;;asu-rule;^USR(8930.1)
"RTN","HMPDJFSD",51,0)
 ;;category;^HMP(800000.11)
"RTN","HMPDJFSD",52,0)
 ;;charttab;^HMP(800000.11)
"RTN","HMPDJFSD",53,0)
 ;;displaygroup;^ORD(100.98)
"RTN","HMPDJFSD",54,0)
 ;;doc-def;^TIU(8925.1)
"RTN","HMPDJFSD",55,0)
 ;;labgroup;^LAB(64.5,1,1)
"RTN","HMPDJFSD",56,0)
 ;;labpanel;^LAB(60)
"RTN","HMPDJFSD",57,0)
 ;;location;^SC
"RTN","HMPDJFSD",58,0)
 ;;orderable;^ORD(101.43)
"RTN","HMPDJFSD",59,0)
 ;;page;^HMP(800000.11)
"RTN","HMPDJFSD",60,0)
 ;;pt-select;^DPT
"RTN","HMPDJFSD",61,0)
 ;;personphoto;^HMP(800000.11)
"RTN","HMPDJFSD",62,0)
 ;;pointofcare;^HMP(800000.11)
"RTN","HMPDJFSD",63,0)
 ;;quick;^ORD(101.41)
"RTN","HMPDJFSD",64,0)
 ;;roster;^HMPROSTR
"RTN","HMPDJFSD",65,0)
 ;;route;^PS(51.2)
"RTN","HMPDJFSD",66,0)
 ;;schedule;^PS(51.1)
"RTN","HMPDJFSD",67,0)
 ;;team;^HMP(800000.11)
"RTN","HMPDJFSD",68,0)
 ;;teamposition;^HMP(800000.11)
"RTN","HMPDJFSD",69,0)
 ;;user;^VA(200)
"RTN","HMPDJFSD",70,0)
 ;;usertabprefs;^HMP(800000.11)
"RTN","HMPDJFSD",71,0)
 ;;viewdefdef;^HMP(800000.11)
"RTN","HMPDJFSD",72,0)
 ;;viewdefdefcoldefconfigtemplate;^HMP(800000.11)
"RTN","HMPDJFSD",73,0)
 ;;immunization;^AUTTIMM
"RTN","HMPDJFSD",74,0)
 ;;allergy-list;^GMRD(120.82)
"RTN","HMPDJFSD",75,0)
 ;;vital-type;^GMRD(120.51)
"RTN","HMPDJFSD",76,0)
 ;;vital-qualifier;^GMRD(120.52)
"RTN","HMPDJFSD",77,0)
 ;;vital-category;^GMRD(120.53)
"RTN","HMPDJFSD",78,0)
 ;;zzzzz
"RTN","HMPDJFSD",79,0)
 ;
"RTN","HMPDJFSD",80,0)
 ;;problem-list;^LEX(757.01)
"RTN","HMPDJFSD",81,0)
 ;;clioterminology
"RTN","HMPDJFSD",82,0)
 ;;doc-action
"RTN","HMPDJFSD",83,0)
 ;;doc-status
"RTN","HMPDJFSD",84,0)
 ;;sign-symptom;^GMRD(120.83)  ;DE6652 - Removed from OPDOMS list
"RTN","HMPDJFSD",85,0)
 ;
"RTN","HMPDJFSD",86,0)
 N I,X
"RTN","HMPDJFSD",87,0)
 F I=1:1 S X=$P($T(OPDOMS+I),";",3) Q:X="zzzzz"  S LIST(I)=X
"RTN","HMPDJFSD",88,0)
 Q
"RTN","HMPDJFSD",89,0)
 ;
"RTN","HMPDVSIT")
0^9^B96673510
"RTN","HMPDVSIT",1,0)
HMPDVSIT ;SLC/MKB,ASMR/RRB - Visit/Encounter extract;8/2/11  15:29
"RTN","HMPDVSIT",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**3**;Sep 02, 2016;Build 2
"RTN","HMPDVSIT",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","HMPDVSIT",4,0)
 ;
"RTN","HMPDVSIT",5,0)
 ; External References          DBIA#
"RTN","HMPDVSIT",6,0)
 ; -------------------          -----
"RTN","HMPDVSIT",7,0)
 ; ^AUPNVSIT                     2028
"RTN","HMPDVSIT",8,0)
 ; ^DIC(40.7                      557
"RTN","HMPDVSIT",9,0)
 ; ^DIC(42                      10039
"RTN","HMPDVSIT",10,0)
 ; ^DIC(45.7                     1154
"RTN","HMPDVSIT",11,0)
 ; ^DPT(                        10035
"RTN","HMPDVSIT",12,0)
 ; ^SC                          10040
"RTN","HMPDVSIT",13,0)
 ; ^VA(200                      10060
"RTN","HMPDVSIT",14,0)
 ; DGPTFAPI                      3157
"RTN","HMPDVSIT",15,0)
 ; DIC                           2051
"RTN","HMPDVSIT",16,0)
 ; DILFD                         2055
"RTN","HMPDVSIT",17,0)
 ; DIQ                           2056
"RTN","HMPDVSIT",18,0)
 ; ICDEX                         5747
"RTN","HMPDVSIT",19,0)
 ; ICPTCOD                       1995
"RTN","HMPDVSIT",20,0)
 ; PXAPI,^TMP("PXKENC",$J        1894
"RTN","HMPDVSIT",21,0)
 ; SDOE                          2546
"RTN","HMPDVSIT",22,0)
 ; VADPT                        10061
"RTN","HMPDVSIT",23,0)
 ; VADPT2                         325
"RTN","HMPDVSIT",24,0)
 ; XUAF4                         2171
"RTN","HMPDVSIT",25,0)
 Q
"RTN","HMPDVSIT",26,0)
 ; ------------ Get encounter(s) from VistA ------------
"RTN","HMPDVSIT",27,0)
 ;
"RTN","HMPDVSIT",28,0)
EN(DFN,BEG,END,MAX,ID) ; -- find patient's visits and appointments
"RTN","HMPDVSIT",29,0)
 N HMPCNT,HMPITM,HMPDT,HMPLOC,HMPDA
"RTN","HMPDVSIT",30,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDVSIT",31,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDVSIT",32,0)
 ;
"RTN","HMPDVSIT",33,0)
 ; get one visit
"RTN","HMPDVSIT",34,0)
 I $G(ID) D EN1(ID,.HMPITM),XML(.HMPITM) G ENQ
"RTN","HMPDVSIT",35,0)
 ;
"RTN","HMPDVSIT",36,0)
 ; -- get all visits
"RTN","HMPDVSIT",37,0)
 I END,END'["." S END=END_".24" ;assume end of day
"RTN","HMPDVSIT",38,0)
 S HMPCNT=0
"RTN","HMPDVSIT",39,0)
 ;F  S IDX=$Q(@IDX,-1) Q:DFN'=$P(IDX,",",2)  Q:$P(IDX,",",3)<BEG  I $P(IDX,",",5)["P" D
"RTN","HMPDVSIT",40,0)
 S HMPDT=END F  S HMPDT=$O(^AUPNVSIT("AET",DFN,HMPDT),-1)  Q:HMPDT<BEG  D  Q:HMPCNT'<MAX  ;ICR 2028 DE2818 ASF 11/21/15
"RTN","HMPDVSIT",41,0)
 . S HMPLOC=0 F  S HMPLOC=$O(^AUPNVSIT("AET",DFN,HMPDT,HMPLOC)) Q:HMPLOC<1  D
"RTN","HMPDVSIT",42,0)
 .. S HMPDA=0 F  S HMPDA=$O(^AUPNVSIT("AET",DFN,HMPDT,HMPLOC,"P",HMPDA)) Q:HMPDA<1  D
"RTN","HMPDVSIT",43,0)
 ... K HMPITM D EN1(HMPDA,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDVSIT",44,0)
 ... D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDVSIT",45,0)
ENQ ; end
"RTN","HMPDVSIT",46,0)
 K ^TMP("HMPTEXT",$J)
"RTN","HMPDVSIT",47,0)
 Q
"RTN","HMPDVSIT",48,0)
 ;
"RTN","HMPDVSIT",49,0)
ENAA(DFN,BEG,END,MAX,ID) ; -- find patient's visits and appointments [AA]
"RTN","HMPDVSIT",50,0)
 N IDT,DA,HMPCNT,HMPITM
"RTN","HMPDVSIT",51,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","HMPDVSIT",52,0)
 S BEG=$G(BEG,1410101),END=$G(END,4141015),MAX=$G(MAX,9999)
"RTN","HMPDVSIT",53,0)
 I $G(ID) D EN1(ID,.HMPITM),XML(.HMPITM) Q  ;one visit
"RTN","HMPDVSIT",54,0)
 D IDT S HMPCNT=0
"RTN","HMPDVSIT",55,0)
 S IDT=BEG F  S IDT=$O(^AUPNVSIT("AA",DFN,IDT)) Q:IDT<1!(IDT>END)  D  Q:HMPCNT'<MAX  ;ICR 2028 DE2818 ASF 11/21/15
"RTN","HMPDVSIT",56,0)
 . S DA=0 F  S DA=$O(^AUPNVSIT("AA",DFN,IDT,DA)) Q:DA<1  D
"RTN","HMPDVSIT",57,0)
 .. K HMPITM D EN1(DA,.HMPITM) Q:'$D(HMPITM)
"RTN","HMPDVSIT",58,0)
 .. D XML(.HMPITM) S HMPCNT=HMPCNT+1
"RTN","HMPDVSIT",59,0)
 Q
"RTN","HMPDVSIT",60,0)
IDT ; -- invert BEG and END dates for visit format:
"RTN","HMPDVSIT",61,0)
 ;  IDT=(9999999-$P(VDT,"."))_"."_$P(VDT,".",2)
"RTN","HMPDVSIT",62,0)
 N X S X=BEG
"RTN","HMPDVSIT",63,0)
 S BEG=(9999999-$P(END,"."))
"RTN","HMPDVSIT",64,0)
 S END=(9999999-$P(X,"."))_".2359"
"RTN","HMPDVSIT",65,0)
 Q
"RTN","HMPDVSIT",66,0)
 ;
"RTN","HMPDVSIT",67,0)
EN1(IEN,VST) ; -- return a visit in VST("attribute")=value
"RTN","HMPDVSIT",68,0)
 N X0,X15,X,FAC,LOC,CATG,INPT,DA
"RTN","HMPDVSIT",69,0)
 K VST,^TMP("HMPTEXT",$J)
"RTN","HMPDVSIT",70,0)
 S IEN=+$G(IEN) Q:IEN<1  ;invalid
"RTN","HMPDVSIT",71,0)
 D ENCEVENT^PXAPI(IEN)
"RTN","HMPDVSIT",72,0)
 S X0=$G(^TMP("PXKENC",$J,IEN,"VST",IEN,0)),X15=$G(^(150))
"RTN","HMPDVSIT",73,0)
 Q:$P(X15,U,3)'="P"  Q:$P(X0,U,7)="E"  ;want primary, not historical
"RTN","HMPDVSIT",74,0)
 I $P(X0,U,7)="H" D ADM(IEN,+X0,.VST) Q
"RTN","HMPDVSIT",75,0)
 S VST("id")=IEN,VST("dateTime")=+X0
"RTN","HMPDVSIT",76,0)
 S FAC=+$P(X0,U,6),CATG=$P(X0,U,7),LOC=+$P(X0,U,22)
"RTN","HMPDVSIT",77,0)
 S:FAC VST("facility")=$$STA^XUAF4(FAC)_U_$P($$NS^XUAF4(FAC),U)
"RTN","HMPDVSIT",78,0)
 S:'FAC VST("facility")=$$FAC^HMPD(LOC)
"RTN","HMPDVSIT",79,0)
 S VST("serviceCategory")=CATG_U_$$CATG(CATG)
"RTN","HMPDVSIT",80,0)
 S VST("visitString")=LOC_";"_+X0_";"_CATG
"RTN","HMPDVSIT",81,0)
 S INPT=$P(X15,U,2) S:INPT="" INPT=$S("H^I^R^D"[CATG:1,1:0)
"RTN","HMPDVSIT",82,0)
 S X=$$CPT(IEN) S:X VST("type")=$P($$CPT^ICPTCOD(X),U,2,3)
"RTN","HMPDVSIT",83,0)
 I 'X S VST("type")=U_$S('INPT&LOC:$P($G(^SC(LOC,0)),U)_" VISIT",1:$$CATG(CATG)) ;ICR 10040 DE2818 ASF 11/21/15
"RTN","HMPDVSIT",84,0)
 S VST("patientClass")=$S(INPT:"IMP",1:"AMB")
"RTN","HMPDVSIT",85,0)
 S X=$P(X0,U,8) S:X VST("stopCode")=$$AMIS(X) I LOC D
"RTN","HMPDVSIT",86,0)
 . N L0 S L0=$G(^SC(LOC,0)) ;ICR 10040 DE2818 ASF 11/21/15
"RTN","HMPDVSIT",87,0)
 . I 'X S VST("stopCode")=$$AMIS($P(L0,U,7))
"RTN","HMPDVSIT",88,0)
 . S VST("location")=$P(L0,U),VST("service")=$$SERV($P(L0,U,20))
"RTN","HMPDVSIT",89,0)
 . S X=$P(L0,U,18) S:X VST("creditStopCode")=$$AMIS(X)
"RTN","HMPDVSIT",90,0)
 S VST("reason")=$$POV(IEN)
"RTN","HMPDVSIT",91,0)
 ; provider(s)
"RTN","HMPDVSIT",92,0)
 S DA=0 F  S DA=$O(^TMP("PXKENC",$J,IEN,"PRV",DA)) Q:DA<1  S X0=$G(^(DA,0)) D
"RTN","HMPDVSIT",93,0)
 . S VST("provider",DA)=+X0_U_$P($G(^VA(200,+X0,0)),U)_$S($P(X0,U,4)="P":"^P^1",1:"^S^") ;ICR 10060 DE2818 ASF 11/21/15
"RTN","HMPDVSIT",94,0)
 ; note(s)
"RTN","HMPDVSIT",95,0)
 D TIU(IEN)
"RTN","HMPDVSIT",96,0)
 K ^TMP("PXKENC",$J,IEN)
"RTN","HMPDVSIT",97,0)
 Q
"RTN","HMPDVSIT",98,0)
 ;
"RTN","HMPDVSIT",99,0)
TIU(VISIT) ; -- add notes to VST("document")
"RTN","HMPDVSIT",100,0)
 N X,Y,I,HMPX,LT,NT,DA,CNT,HMPY
"RTN","HMPDVSIT",101,0)
 D FIND^DIC(8925,,.01,"QX",+$G(VISIT),,"V",,,"HMPX")
"RTN","HMPDVSIT",102,0)
 S Y="",(I,CNT)=0
"RTN","HMPDVSIT",103,0)
 F  S I=$O(HMPX("DILIST",1,I)) Q:I<1  D
"RTN","HMPDVSIT",104,0)
 . S LT=$G(HMPX("DILIST","ID",I,.01)) Q:$P(LT," ")="Addendum"
"RTN","HMPDVSIT",105,0)
 . S DA=$G(HMPX("DILIST",2,I))
"RTN","HMPDVSIT",106,0)
 . S NT=$$GET1^DIQ(8925,+DA_",",".01:1501")
"RTN","HMPDVSIT",107,0)
 . S CNT=CNT+1,VST("document",CNT)=DA_U_LT_U_NT
"RTN","HMPDVSIT",108,0)
 . S:$G(HMPTEXT) VST("document",CNT,"content")=$$TEXT^HMPDTIU(DA)
"RTN","HMPDVSIT",109,0)
 Q
"RTN","HMPDVSIT",110,0)
 ;
"RTN","HMPDVSIT",111,0)
POV(VISIT) ; -- return the primary Purpose of Visit as ICD^ProviderNarrative
"RTN","HMPDVSIT",112,0)
 N DA,Y,X,X0,ICD S Y=""
"RTN","HMPDVSIT",113,0)
 S DA=0 F  S DA=$O(^TMP("PXKENC",$J,VISIT,"POV",DA)) Q:DA<1  S X0=$G(^(DA,0)) I $P(X0,U,12)="P" D  Q:$L(Y)
"RTN","HMPDVSIT",114,0)
 . S X=+$P(X0,U,4),ICD=$$ICD(+X0)
"RTN","HMPDVSIT",115,0)
 . S Y=ICD_U_$$EXTERNAL^DILFD(9000010.07,.04,,X)
"RTN","HMPDVSIT",116,0)
 Q Y
"RTN","HMPDVSIT",117,0)
 ;
"RTN","HMPDVSIT",118,0)
ICD(IEN) ; -- return code^description for ICD code, or "^" if error
"RTN","HMPDVSIT",119,0)
 N X0,HMPX,N,I,X,Y S IEN=+$G(IEN)
"RTN","HMPDVSIT",120,0)
 S X0=$$ICDDX^ICDEX(IEN) I X0<0 Q "^"  ;Sep 1, 2016 - PB - DE5033 changed to use new API to get ICD code
"RTN","HMPDVSIT",121,0)
 S Y=$P(X0,U,2)_U_$P(X0,U,4)       ;ICD Code^Dx name
"RTN","HMPDVSIT",122,0)
 S N=$$ICDD^ICDEX($P(Y,U),"HMPX") ;ICD Description  Sep 1, 2016 - PB - DE5033 changed to use new API to get ICD code
"RTN","HMPDVSIT",123,0)
 I N>0,$L($G(HMPX(1))) S $P(Y,U,2)=HMPX(1)
"RTN","HMPDVSIT",124,0)
 Q Y
"RTN","HMPDVSIT",125,0)
 ;
"RTN","HMPDVSIT",126,0)
CPT(VISIT) ; -- Return CPT code of encounter type
"RTN","HMPDVSIT",127,0)
 N DA,Y,X,X0 S Y=""
"RTN","HMPDVSIT",128,0)
 S DA=0 F  S DA=$O(^TMP("PXKENC",$J,VISIT,"CPT",DA)) Q:DA<1  S X0=$G(^(DA,0)) D  Q:$L(Y)
"RTN","HMPDVSIT",129,0)
 . S X=$P(X0,U) I X?1"992"2N S Y=X Q
"RTN","HMPDVSIT",130,0)
 Q Y
"RTN","HMPDVSIT",131,0)
 ;
"RTN","HMPDVSIT",132,0)
AMIS(X) ; -- return the AMIS code^name of Credit Stop X
"RTN","HMPDVSIT",133,0)
 N Y,X0 S Y=""
"RTN","HMPDVSIT",134,0)
 S X0=$G(^DIC(40.7,+$G(X),0)) S:$L(X0) Y=$P(X0,U,2)_U_$P(X0,U) ;ICR 557 DE2818 ASF 11/21/15
"RTN","HMPDVSIT",135,0)
 Q Y
"RTN","HMPDVSIT",136,0)
 ;
"RTN","HMPDVSIT",137,0)
CATG(X) ; -- Return name of visit Service Category code X
"RTN","HMPDVSIT",138,0)
 N Y S Y=""
"RTN","HMPDVSIT",139,0)
 I X="A" S Y="AMBULATORY"
"RTN","HMPDVSIT",140,0)
 I X="H" S Y="HOSPITALIZATION"
"RTN","HMPDVSIT",141,0)
 I X="I" S Y="IN HOSPITAL"
"RTN","HMPDVSIT",142,0)
 I X="C" S Y="CHART REVIEW"
"RTN","HMPDVSIT",143,0)
 I X="T" S Y="TELECOMMUNICATIONS"
"RTN","HMPDVSIT",144,0)
 I X="N" S Y="NOT FOUND"
"RTN","HMPDVSIT",145,0)
 I X="S" S Y="DAY SURGERY"
"RTN","HMPDVSIT",146,0)
 I X="O" S Y="OBSERVATION"
"RTN","HMPDVSIT",147,0)
 I X="E" S Y="EVENT (HISTORICAL)"
"RTN","HMPDVSIT",148,0)
 I X="R" S Y="NURSING HOME"
"RTN","HMPDVSIT",149,0)
 I X="D" S Y="DAILY HOSPITALIZATION DATA"
"RTN","HMPDVSIT",150,0)
 I X="X" S Y="ANCILLARY PACKAGE DAILY DATA"
"RTN","HMPDVSIT",151,0)
 Q Y
"RTN","HMPDVSIT",152,0)
 ;
"RTN","HMPDVSIT",153,0)
SERV(FTS) ; -- Return #42.4 Service for a Facility Treating Specialty
"RTN","HMPDVSIT",154,0)
 N Y S Y="",FTS=+$G(FTS)
"RTN","HMPDVSIT",155,0)
 S Y=$$GET1^DIQ(45.7,FTS_",","1:3","E")
"RTN","HMPDVSIT",156,0)
 Q Y
"RTN","HMPDVSIT",157,0)
 ;
"RTN","HMPDVSIT",158,0)
ADM(IEN,DATE,ADM) ; -- return an admission in ADM("attribute")=value
"RTN","HMPDVSIT",159,0)
 N VAINDT,VADMVT,VAIP,VAIN,VAERR,HLOC,ICD,I K ADM
"RTN","HMPDVSIT",160,0)
 S IEN=+$G(IEN),DATE=+$G(DATE) Q:IEN<1  Q:DATE<1
"RTN","HMPDVSIT",161,0)
 S VAINDT=DATE D ADM^VADPT2 Q:VADMVT<1
"RTN","HMPDVSIT",162,0)
 I VADMVT=$G(^DPT(DFN,.105)) D INPT Q  ;current inpatient ICR 10035 DE2818 ASF 11/21/15
"RTN","HMPDVSIT",163,0)
 S VAIP("E")=VADMVT D IN5^VADPT Q:'$G(VAIP(1))  ;deleted
"RTN","HMPDVSIT",164,0)
 S ADM("id")=IEN,ADM("patientClass")="IMP"
"RTN","HMPDVSIT",165,0)
 ; ADM("admitType")=$P($G(VAIP(4)),U,2)
"RTN","HMPDVSIT",166,0)
 S DATE=+$G(VAIP(13,1)),(ADM("dateTime"),ADM("arrivalDateTime"))=DATE,I=0
"RTN","HMPDVSIT",167,0)
 S:$G(VAIP(7)) I=I+1,ADM("provider",I)=VAIP(7)_"^P^1" ;primary
"RTN","HMPDVSIT",168,0)
 S:$G(VAIP(18)) I=I+1,ADM("provider",I)=VAIP(18)_"^A" ;attending
"RTN","HMPDVSIT",169,0)
 S ADM("specialty")=$P($G(VAIP(8)),U,2)
"RTN","HMPDVSIT",170,0)
 S X=$$SERV(+$G(VAIP(8))),ADM("service")=X
"RTN","HMPDVSIT",171,0)
 S ICD=$$POV(IEN) S:'ICD ICD=$$PTF(DFN,VAIP(12)) ;PTF>ICD
"RTN","HMPDVSIT",172,0)
 S ADM("reason")=ICD_U_$G(VAIP(9)) ;ICD code^description^Dx text
"RTN","HMPDVSIT",173,0)
 S HLOC=+$G(^DIC(42,+$G(VAIP(5)),44)) ;ICR 10039 DE2818 ASF 11/21/15
"RTN","HMPDVSIT",174,0)
 S:HLOC ADM("location")=$P($G(^SC(HLOC,0)),U) ;ICR 10040 DE2818 ASF 11/21/15
"RTN","HMPDVSIT",175,0)
 S ADM("facility")=$$FAC^HMPD(+HLOC),ADM("roomBed")=$P(VAIP(6),U,2)
"RTN","HMPDVSIT",176,0)
 S ADM("serviceCategory")="H^HOSPITALIZATION"
"RTN","HMPDVSIT",177,0)
 S X=$$CPT(IEN),ADM("type")=$S(X:$P($$CPT^ICPTCOD(X),U,2,3),1:U_$$CATG("H"))
"RTN","HMPDVSIT",178,0)
 I $G(VAIP(17)) D
"RTN","HMPDVSIT",179,0)
 . S ADM("departureDateTime")=+$G(VAIP(17,1))
"RTN","HMPDVSIT",180,0)
 . ; ADM("disposition")=$G(VAIP(17,3)) ;Discharge Mvt Type
"RTN","HMPDVSIT",181,0)
 S ADM("visitString")=HLOC_";"_DATE_";H"
"RTN","HMPDVSIT",182,0)
 D TIU(IEN) ;notes/summary
"RTN","HMPDVSIT",183,0)
 Q
"RTN","HMPDVSIT",184,0)
 ;
"RTN","HMPDVSIT",185,0)
INPT ; -- return current admission in ADM("attribute")=value [from ADM]
"RTN","HMPDVSIT",186,0)
 K VAINDT D INP^VADPT Q:VAIN(1)<1
"RTN","HMPDVSIT",187,0)
 S ADM("id")=IEN,ADM("patientClass")="IMP"
"RTN","HMPDVSIT",188,0)
 ; ADM("admitType")=$P($G(VAIN(8)),U,2)
"RTN","HMPDVSIT",189,0)
 S DATE=+$G(VAIN(7)),(ADM("dateTime"),ADM("arrivalDateTime"))=DATE,I=0
"RTN","HMPDVSIT",190,0)
 S:$G(VAIN(2)) I=I+1,ADM("provider",I)=VAIN(2)_"^P^1" ;primary
"RTN","HMPDVSIT",191,0)
 S:$G(VAIN(11)) I=I+1,ADM("provider",I)=VAIN(11)_"^A" ;attending
"RTN","HMPDVSIT",192,0)
 S ADM("specialty")=$P($G(VAIN(3)),U,2)
"RTN","HMPDVSIT",193,0)
 S X=$$SERV(+$G(VAIN(3))),ADM("service")=X
"RTN","HMPDVSIT",194,0)
 S ICD=$$POV(IEN) S:'ICD ICD=$$PTF(DFN,VAIN(10)) ;PTF>ICD
"RTN","HMPDVSIT",195,0)
 S ADM("reason")=ICD_U_$G(VAIN(9)) ;ICD code^description^Dx text
"RTN","HMPDVSIT",196,0)
 S HLOC=+$G(^DIC(42,+$G(VAIN(4)),44)) ;ICR 10039 DE2818 ASF 11/21/15
"RTN","HMPDVSIT",197,0)
 S:HLOC ADM("location")=$P($G(^SC(HLOC,0)),U) ;ICR 10040 DE2818 ASF 11/21/15
"RTN","HMPDVSIT",198,0)
 S ADM("facility")=$$FAC^HMPD(+HLOC),ADM("roomBed")=$P(VAIN(5),U,2)
"RTN","HMPDVSIT",199,0)
 S ADM("serviceCategory")="H^HOSPITALIZATION"
"RTN","HMPDVSIT",200,0)
 S X=$$CPT(IEN),ADM("type")=$S(X:$P($$CPT^ICPTCOD(X),U,2,3),1:U_$$CATG("H"))
"RTN","HMPDVSIT",201,0)
 ; ADM("visitString")=HLOC_";"_DATE_";H"
"RTN","HMPDVSIT",202,0)
 D TIU(IEN) ;notes/summary
"RTN","HMPDVSIT",203,0)
 Q
"RTN","HMPDVSIT",204,0)
 ;
"RTN","HMPDVSIT",205,0)
PTF(DFN,PTF) ; -- return ICD code^description for a PTF record
"RTN","HMPDVSIT",206,0)
 N HMPPTF,N,HMPX
"RTN","HMPDVSIT",207,0)
 D:$G(PTF) RPC^DGPTFAPI(.HMPPTF,+PTF) I $G(HMPPTF(0))<1 Q "^"
"RTN","HMPDVSIT",208,0)
 S Y=$P($G(HMPPTF(1)),U,3)_U
"RTN","HMPDVSIT",209,0)
 S N=$$ICDD^ICDEX(Y,"HMPX") ;ICD Description Sep 1, 2016 - PB - DE5033 changed to use new API to get ICD code
"RTN","HMPDVSIT",210,0)
 I N>0,$L($G(HMPX(1))) S Y=Y_HMPX(1)
"RTN","HMPDVSIT",211,0)
 Q Y
"RTN","HMPDVSIT",212,0)
 ;
"RTN","HMPDVSIT",213,0)
ENC(IEN,ENC) ; -- return an encounter in ENC("attribute")=value
"RTN","HMPDVSIT",214,0)
 N X0,DATE,HLOC,TYPE,STS,X,Y K ENC
"RTN","HMPDVSIT",215,0)
 S IEN=+$G(IEN) Q:IEN<1  ;invalid ien
"RTN","HMPDVSIT",216,0)
 S ENC("id")="E"_IEN,X0=$$GETOE^SDOE(IEN) ;^SCE(IEN,0) node ICR 10040 DE2818 ASF 11/21/15
"RTN","HMPDVSIT",217,0)
 S DATE=+X0,ENC("dateTime")=DATE
"RTN","HMPDVSIT",218,0)
 S HLOC=+$P(X0,U,4) I HLOC D
"RTN","HMPDVSIT",219,0)
 . S HLOC=HLOC_U_$P($G(^SC(HLOC,0)),U) ;ICR 10040 DE2818 ASF 11/21/15
"RTN","HMPDVSIT",220,0)
 . S ENC("location")=$P(HLOC,U,2)
"RTN","HMPDVSIT",221,0)
 . S X=$$GET1^DIQ(44,+HLOC_",",9.5,"I")
"RTN","HMPDVSIT",222,0)
 . I X S ENC("service")=$$SERV(X)
"RTN","HMPDVSIT",223,0)
 S ENC("facility")=$$FAC^HMPD(+HLOC)
"RTN","HMPDVSIT",224,0)
 S STS=$$EXTERNAL^DILFD(409.68,.12,,$P(X0,U,12))
"RTN","HMPDVSIT",225,0)
 S X=$S(STS?1"INP".E:"IMP",1:"AMB"),ENC("patientClass")=X,TYPE=$E(X)
"RTN","HMPDVSIT",226,0)
 S ENC("type")=U_$S(HLOC:$P(HLOC,U,2)_" VISIT",1:$$CATG(TYPE))
"RTN","HMPDVSIT",227,0)
 S ENC("serviceCategory")=TYPE_U_$$CATG(TYPE)
"RTN","HMPDVSIT",228,0)
 S ENC("visitString")=+HLOC_";"_DATE_";"_TYPE
"RTN","HMPDVSIT",229,0)
 Q
"RTN","HMPDVSIT",230,0)
 ;
"RTN","HMPDVSIT",231,0)
 ; ------------ Return data to middle tier ------------
"RTN","HMPDVSIT",232,0)
 ;
"RTN","HMPDVSIT",233,0)
XML(VISIT) ; -- Return patient visit as XML
"RTN","HMPDVSIT",234,0)
 N ATT,X,Y,NAMES,I,J
"RTN","HMPDVSIT",235,0)
 D ADD("<visit>") S HMPTOTL=$G(HMPTOTL)+1
"RTN","HMPDVSIT",236,0)
 S ATT="" F  S ATT=$O(VISIT(ATT)) Q:ATT=""  D  D:$L(Y) ADD(Y)
"RTN","HMPDVSIT",237,0)
 . I $O(VISIT(ATT,0)) D  S Y="" Q  ;multiples
"RTN","HMPDVSIT",238,0)
 .. D ADD("<"_ATT_"s>")
"RTN","HMPDVSIT",239,0)
 .. S I=0 F  S I=$O(VISIT(ATT,I)) Q:I<1  D
"RTN","HMPDVSIT",240,0)
 ... S X=$G(VISIT(ATT,I)),NAMES=""
"RTN","HMPDVSIT",241,0)
 ... I ATT="document" S NAMES="id^localTitle^nationalTitle^Z"
"RTN","HMPDVSIT",242,0)
 ... I ATT="provider" S NAMES="code^name^role^primary^Z"
"RTN","HMPDVSIT",243,0)
 ... S Y="<"_ATT_" "_$$LOOP ;_"/>" D ADD(Y)
"RTN","HMPDVSIT",244,0)
 ... S X=$G(VISIT(ATT,I,"content")) I '$L(X) S Y=Y_"/>" D ADD(Y) Q
"RTN","HMPDVSIT",245,0)
 ... S Y=Y_">" D ADD(Y)
"RTN","HMPDVSIT",246,0)
 ... S Y="<content xml:space='preserve'>" D ADD(Y)
"RTN","HMPDVSIT",247,0)
 ... S J=0 F  S J=$O(@X@(J)) Q:J<1  S Y=$$ESC^HMPD(@X@(J)) D ADD(Y)
"RTN","HMPDVSIT",248,0)
 ... D ADD("</content>"),ADD("</"_ATT_">")
"RTN","HMPDVSIT",249,0)
 .. D ADD("</"_ATT_"s>")
"RTN","HMPDVSIT",250,0)
 . S X=$G(VISIT(ATT)),Y="" Q:'$L(X)
"RTN","HMPDVSIT",251,0)
 . S NAMES="code^name^"_$S(ATT="reason":"narrative^",1:"")_"Z"
"RTN","HMPDVSIT",252,0)
 . I X'["^" S Y="<"_ATT_" value='"_$$ESC^HMPD(X)_"' />" Q
"RTN","HMPDVSIT",253,0)
 . I $L(X)>1 S Y="<"_ATT_" "_$$LOOP_"/>"
"RTN","HMPDVSIT",254,0)
 D ADD("</visit>")
"RTN","HMPDVSIT",255,0)
 Q
"RTN","HMPDVSIT",256,0)
 ;
"RTN","HMPDVSIT",257,0)
LOOP() ; -- build sub-items string from NAMES and X
"RTN","HMPDVSIT",258,0)
 N STR,P,TAG S STR=""
"RTN","HMPDVSIT",259,0)
 F P=1:1 S TAG=$P(NAMES,U,P) Q:TAG="Z"  I $L($P(X,U,P)) S STR=STR_TAG_"='"_$$ESC^HMPD($P(X,U,P))_"' "
"RTN","HMPDVSIT",260,0)
 Q STR
"RTN","HMPDVSIT",261,0)
 ;
"RTN","HMPDVSIT",262,0)
ADD(X) ; -- Add a line @HMP@(n)=X
"RTN","HMPDVSIT",263,0)
 S HMPI=$G(HMPI)+1
"RTN","HMPDVSIT",264,0)
 S @HMP@(HMPI)=X
"RTN","HMPDVSIT",265,0)
 Q
"RTN","HMPEF")
0^12^B86577770
"RTN","HMPEF",1,0)
HMPEF ;SLC/MKB,ASMR/RRB,JD,SRG,CK - Serve VistA operational data as JSON via RPC;Sep 1, 2016 17:21:57
"RTN","HMPEF",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1,2,3**;May 15, 2016;Build 2
"RTN","HMPEF",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","HMPEF",4,0)
 ;
"RTN","HMPEF",5,0)
 ; DE2818 - SQA findings. Newed L42 and L44 in LOC+1.  RRB - 10/30/2015
"RTN","HMPEF",6,0)
 ;
"RTN","HMPEF",7,0)
 ; DE6652 - JD - 9/1/16: Removed code behind synching sign-symptom domain for operational data.
"RTN","HMPEF",8,0)
 ;                       SIGNS tag.
"RTN","HMPEF",9,0)
 ;
"RTN","HMPEF",10,0)
 ; ^SC references - IA 10040, HOSPITAL LOCATION file (#44)
"RTN","HMPEF",11,0)
 ; ^DIC(42) references - IA #10039, WARD LOCATION file
"RTN","HMPEF",12,0)
 Q
"RTN","HMPEF",13,0)
 ;
"RTN","HMPEF",14,0)
 ; The following variables can not be newed or killed because they are used
"RTN","HMPEF",15,0)
 ; from upstream by scope (NOT as input parameters):
"RTN","HMPEF",16,0)
 ;      HMPBATCH, HMPFADOM, HMPFLDON, HMPFZTSK, HMPMETA, HMPSTMP, LEX("LIST", and ZTQUEUED.
"RTN","HMPEF",17,0)
GET(HMP,FILTER) ; -- Return search results as JSON in @HMP@(n)
"RTN","HMPEF",18,0)
 ; RPC = HMP GET OPERATIONAL DATA
"RTN","HMPEF",19,0)
 ; where FILTER("domain")  = name of desired data type (see $$TAG)
"RTN","HMPEF",20,0)
 ;       FILTER("limit")   = maximum number of items to return [opt]
"RTN","HMPEF",21,0)
 ;       FILTER("start")   = ien to start search from          [opt]
"RTN","HMPEF",22,0)
 ;       FILTER("id")      = single item id to return          [opt]
"RTN","HMPEF",23,0)
 ;
"RTN","HMPEF",24,0)
 ; HMPLAST - last record processed
"RTN","HMPEF",25,0)
 N HMPSYS,TYPE,HMPMAX,HMPI,HMPID,HMPERR,HMPTN,HMPLAST,HMPCNT,HMPFINI
"RTN","HMPEF",26,0)
 S HMP=$NA(^TMP("HMP",$J)),HMPI=0 K @HMP
"RTN","HMPEF",27,0)
 S HMPSYS=$$SYS^HMPUTILS ;DE4463 - CK - 4/22/2016
"RTN","HMPEF",28,0)
 ;
"RTN","HMPEF",29,0)
 ; parse & validate input parameters
"RTN","HMPEF",30,0)
 S TYPE=$P($G(FILTER("domain")),"#") ;,TYPE=$$LOW^XLFSTR(TYPE)
"RTN","HMPEF",31,0)
 S HMPMAX=+$G(FILTER("limit")),HMPCNT=0
"RTN","HMPEF",32,0)
 S HMPLAST=+$G(FILTER("start"))
"RTN","HMPEF",33,0)
 S HMPID=$G(FILTER("id"))
"RTN","HMPEF",34,0)
 ;
"RTN","HMPEF",35,0)
 K ^TMP($J,"HMP ERROR")
"RTN","HMPEF",36,0)
 ;
"RTN","HMPEF",37,0)
 ; extract data
"RTN","HMPEF",38,0)
 I TYPE="" S HMPERR="Missing or invalid reference type" G GTQ
"RTN","HMPEF",39,0)
 ; *** convert code below to use $$HANDLE^XUSRB4 for zero node in ^XTMP, IA 4770***
"RTN","HMPEF",40,0)
 I $D(ZTQUEUED) S HMP=$NA(^XTMP(HMPBATCH,HMPFZTSK,FILTER("domain"))) K @HMP
"RTN","HMPEF",41,0)
 I TYPE="new",$L($T(EN^HMPEFX)) D EN^HMPEFX(HMPID,HMPMAX) Q
"RTN","HMPEF",42,0)
 S HMPTN=$$TAG(TYPE) Q:'$L(HMPTN)  ;D ERR(2) Q
"RTN","HMPEF",43,0)
 D @HMPTN
"RTN","HMPEF",44,0)
 ;
"RTN","HMPEF",45,0)
GTQ ; add item count and terminating characters
"RTN","HMPEF",46,0)
 N ERROR I $D(^TMP($J,"HMP ERROR"))>0 D BUILDERR(.ERROR) S ERROR(1)=ERROR(1)_"}"
"RTN","HMPEF",47,0)
 I +$G(FILTER("noHead"))=1 D  Q
"RTN","HMPEF",48,0)
 .S @HMP@("total")=+$G(HMPI)
"RTN","HMPEF",49,0)
 .S @HMP@("last")=HMPLAST
"RTN","HMPEF",50,0)
 .S @HMP@("finished")=+$G(HMPFINI)
"RTN","HMPEF",51,0)
 .I $L($G(ERROR(1)))>1 S @HMP@("error")=ERROR(1)
"RTN","HMPEF",52,0)
 I '$D(@HMP)!'$G(HMPI) D  Q
"RTN","HMPEF",53,0)
 .I '$D(^TMP($J,"HMP ERROR")) S @HMP@(1)="""data"":{""totalItems"":0,""items"":[]}}" Q
"RTN","HMPEF",54,0)
 .S @HMP@(1)="""data"":{""totalItems"":0,""items"":[]},"
"RTN","HMPEF",55,0)
 .M @HMP@(2)=ERROR
"RTN","HMPEF",56,0)
 ;
"RTN","HMPEF",57,0)
 I $D(@HMP),$G(HMPI) D
"RTN","HMPEF",58,0)
 . S @HMP@(.5)="{""apiVersion"":""1.01"",""data"":{""updated"":"""_$$HL7NOW_""",""currentItemCount"":"_HMPI
"RTN","HMPEF",59,0)
 . S:$G(HMPCNT) @HMP@(.5)=@HMP@(.5)_",""totalItems"":"_HMPCNT
"RTN","HMPEF",60,0)
 . S:$G(HMPLAST) @HMP@(.5)=@HMP@(.5)_",""last"":"_HMPLAST
"RTN","HMPEF",61,0)
 . S @HMP@(.5)=@HMP@(.5)_",""items"":["
"RTN","HMPEF",62,0)
 . S HMPI=HMPI+1,@HMP@(HMPI)=$S($D(^TMP($J,"HMP ERROR"))>0:"]}",1:"]}}")
"RTN","HMPEF",63,0)
 I $D(^TMP($J,"HMP ERROR"))>0 S HMPI=HMPI+1,@HMP@(HMPI,.3)="," M @HMP@(HMPI)=ERROR ;S HMPI=HMPI+1,@HMP@(HMPI)="}"
"RTN","HMPEF",64,0)
 K ^TMP($J,"HMP ERROR")
"RTN","HMPEF",65,0)
 Q
"RTN","HMPEF",66,0)
 ;
"RTN","HMPEF",67,0)
BUILDERR(RESULT) ;  error array
"RTN","HMPEF",68,0)
 N CNT,COUNT,DOM,DOMCNT,ERRMSG,ERROR,FIELD,MESSAGE,MSG,MSGCNT,T,TEMP
"RTN","HMPEF",69,0)
 S COUNT=$G(^TMP($J,"HMP ERROR","# of Errors"))
"RTN","HMPEF",70,0)
 S MESSAGE="A mumps error occurred when extracting data. A total of "_COUNT_" occurred.\n\r"
"RTN","HMPEF",71,0)
 S CNT=1,ERROR("error","message","\",CNT)="A mumps error occurred when extracting patient data. A total of "_COUNT_" occurred.\n\r"
"RTN","HMPEF",72,0)
 S MSGCNT=0 F  S MSGCNT=$O(^TMP($J,"HMP ERROR","ERROR MESSAGE",MSGCNT)) Q:MSGCNT'>0  D
"RTN","HMPEF",73,0)
 . S CNT=CNT+1,MESSAGE=MESSAGE_$G(^TMP($J,"HMP ERROR","ERROR MESSAGE",MSGCNT))_"\n\r"
"RTN","HMPEF",74,0)
 S RESULT(1)="""error"":{""message"":"_""""_MESSAGE_""""_"}"
"RTN","HMPEF",75,0)
 Q
"RTN","HMPEF",76,0)
 ;
"RTN","HMPEF",77,0)
TAG(X) ; -- linetag for reference domain X
"RTN","HMPEF",78,0)
 N Y S Y="HMP",X=$G(X)
"RTN","HMPEF",79,0)
 ; default = HMP Object (various types)
"RTN","HMPEF",80,0)
 I X="location"      S Y="LOC"
"RTN","HMPEF",81,0)
 I X="pt-select"     S Y="PAT"
"RTN","HMPEF",82,0)
 I X="person"        S Y="NP"
"RTN","HMPEF",83,0)
 I X="user"          S Y="NP"
"RTN","HMPEF",84,0)
 I X="labgroup"      S Y="LABGRP"
"RTN","HMPEF",85,0)
 I X="labpanel"      S Y="LABPNL"
"RTN","HMPEF",86,0)
 I X["orderable"     S Y="OI"
"RTN","HMPEF",87,0)
 I X["schedule"      S Y="SCHEDULE"
"RTN","HMPEF",88,0)
 I X["route"         S Y="ROUTE"
"RTN","HMPEF",89,0)
 I X["quick"         S Y="QO"
"RTN","HMPEF",90,0)
 I X="displayGroup"  S Y="ODG"
"RTN","HMPEF",91,0)
 I X["asu-"          S Y="ASU"
"RTN","HMPEF",92,0)
 I X["doc-"          S Y="ASU"
"RTN","HMPEF",93,0)
 I X="immunization"    S Y="IMMTYPE"
"RTN","HMPEF",94,0)
 I X="allergy-list"         S Y="ALLTYPE"
"RTN","HMPEF",95,0)
 ;I X="problem-list"        S Y="PROB"
"RTN","HMPEF",96,0)
 I X="vital-type"      S Y="VTYPE"
"RTN","HMPEF",97,0)
 I X="vital-qualifier"  S Y="VQUAL"
"RTN","HMPEF",98,0)
 I X="vital-category"   S Y="VCAT"
"RTN","HMPEF",99,0)
 I X["clioterm"      S Y="MDTERMS"
"RTN","HMPEF",100,0)
 Q Y
"RTN","HMPEF",101,0)
 ;
"RTN","HMPEF",102,0)
ERR(X,VAL) ;  return error message
"RTN","HMPEF",103,0)
 N MSG  S MSG="Error"
"RTN","HMPEF",104,0)
 I X=2  S MSG="Domain type '"_$G(VAL)_"' not recognized"
"RTN","HMPEF",105,0)
 I X=3  S MSG="UID '"_$G(VAL)_"' not found"
"RTN","HMPEF",106,0)
 I X=99 S MSG="Unknown request"
"RTN","HMPEF",107,0)
 Q MSG
"RTN","HMPEF",108,0)
 ;
"RTN","HMPEF",109,0)
ERRMSG(X,VAL) ; -- return error message
"RTN","HMPEF",110,0)
 N Y S Y="A MUMPS error occurred while extracting "_X_" data"
"RTN","HMPEF",111,0)
 S:$G(VAL) Y=Y_", ien "_VAL
"RTN","HMPEF",112,0)
 Q Y
"RTN","HMPEF",113,0)
 ;
"RTN","HMPEF",114,0)
ERRQ ; -- Quit on error
"RTN","HMPEF",115,0)
 Q
"RTN","HMPEF",116,0)
 ;
"RTN","HMPEF",117,0)
HL7NOW() ; -- Return current time in HL7 format
"RTN","HMPEF",118,0)
 Q $$FMTHL7^HMPSTMP($$NOW^XLFDT)  ; DE5016
"RTN","HMPEF",119,0)
 ;
"RTN","HMPEF",120,0)
ALL() ;
"RTN","HMPEF",121,0)
 Q "location;patient;person;orderable;schedule;route;quick;displayGroup;asu-class;asu-rule;asu-role;doc-action;doc-status;clioterm;immunization;allergy-list;sign-symptom;vital-type;vital-qualifier;vital-category"
"RTN","HMPEF",122,0)
 ;
"RTN","HMPEF",123,0)
ADD(ITEM) ; -- add ITEM to @HMP@(HMPI)
"RTN","HMPEF",124,0)
 N HMPY,HMPERR
"RTN","HMPEF",125,0)
 I $G(HMPSTMP)]"" S @ITEM@("stampTime")=HMPSTMP ; US6734
"RTN","HMPEF",126,0)
 E  S @ITEM@("stampTime")=$$EN^HMPSTMP("NOW") ; DE2616 - must add stampTime to receive OPD freshness update from ADHOC^HMPUTIL1
"RTN","HMPEF",127,0)
 D ENCODE^HMPJSON(ITEM,"HMPY","HMPERR")
"RTN","HMPEF",128,0)
 I $D(HMPERR) D  ;return ERRor instead of ITEM
"RTN","HMPEF",129,0)
 . N HMPTMP,HMPTXT,HMPITM
"RTN","HMPEF",130,0)
 . M HMPITM=@ITEM K HMPY
"RTN","HMPEF",131,0)
 . S HMPTXT(1)="Problem encoding json output."
"RTN","HMPEF",132,0)
 . D SETERROR^HMPUTILS(.HMPTMP,.HMPERR,.HMPTXT,.HMPITM)
"RTN","HMPEF",133,0)
 . K HMPERR D ENCODE^HMPJSON("HMPTMP","HMPY","HMPERR")
"RTN","HMPEF",134,0)
 I $D(HMPY) D
"RTN","HMPEF",135,0)
 . Q:'$D(@ITEM@("uid"))
"RTN","HMPEF",136,0)
 . I $G(HMPMETA) D ADD^HMPMETA($P(HMPFADOM,"#"),@ITEM@("uid"),HMPSTMP) Q:HMPMETA=1  ;US6734,US11019
"RTN","HMPEF",137,0)
 . I HMPI D COMMA(HMPI)
"RTN","HMPEF",138,0)
 . ;I HMPI,'$G(FILTER("noHead")) D COMMA(HMPI)
"RTN","HMPEF",139,0)
 . S HMPI=HMPI+1 M @HMP@(HMPI)=HMPY
"RTN","HMPEF",140,0)
 Q
"RTN","HMPEF",141,0)
 ;
"RTN","HMPEF",142,0)
COMMA(I) ; -- add comma between items
"RTN","HMPEF",143,0)
 I $D(ZTQUEUED) Q
"RTN","HMPEF",144,0)
 N J S J=+$O(@HMP@(I,"A"),-1) ;last sub-node for item I
"RTN","HMPEF",145,0)
 S J=J+1,@HMP@(I,J)=","
"RTN","HMPEF",146,0)
 Q
"RTN","HMPEF",147,0)
 ;
"RTN","HMPEF",148,0)
TOTAL(ROOT) ; -- Return total #items in @ROOT@(n)
"RTN","HMPEF",149,0)
 Q $P($G(@ROOT@(0)),U,4)
"RTN","HMPEF",150,0)
 ;
"RTN","HMPEF",151,0)
TEST(TYPE,ID,IN) ; -- test GET, write results to screen
"RTN","HMPEF",152,0)
 N OUT,IDX
"RTN","HMPEF",153,0)
 S U="^"
"RTN","HMPEF",154,0)
 S IN("domain")=$G(TYPE)
"RTN","HMPEF",155,0)
 S:$D(ID) IN("id")=ID
"RTN","HMPEF",156,0)
 D GET(.OUT,.IN)
"RTN","HMPEF",157,0)
 ;
"RTN","HMPEF",158,0)
 S IDX=OUT
"RTN","HMPEF",159,0)
 F  S IDX=$Q(@IDX) Q:IDX'?1"^TMP(""HMP"","1.N.E  Q:+$P(IDX,",",2)'=$J  W !,@IDX
"RTN","HMPEF",160,0)
 Q
"RTN","HMPEF",161,0)
 ;
"RTN","HMPEF",162,0)
 ; ** Reference file searches, using FILTER("parameter")
"RTN","HMPEF",163,0)
 ;
"RTN","HMPEF",164,0)
PAT ;Patients
"RTN","HMPEF",165,0)
 N DFN,PAT,HMPPOPD
"RTN","HMPEF",166,0)
 S HMPPOPD=1
"RTN","HMPEF",167,0)
 S HMPCNT=$$TOTAL("^DPT")
"RTN","HMPEF",168,0)
 I $G(HMPID) S DFN=+HMPID D LKUP^HMPDJ00 Q
"RTN","HMPEF",169,0)
 N ERRMSG S ERRMSG="A mumps error occurred while extracting patients."
"RTN","HMPEF",170,0)
 S DFN=+$G(HMPLAST) F  S DFN=$O(^DPT(DFN)) Q:DFN<1  D  I HMPMAX>0,HMPI'<HMPMAX Q
"RTN","HMPEF",171,0)
 . N $ES,$ET
"RTN","HMPEF",172,0)
 . S $ET="D ERRHDLR^HMPDERRH"
"RTN","HMPEF",173,0)
 . I $P($G(^DPT(DFN,0)),U)="" Q
"RTN","HMPEF",174,0)
 . S ERRMSG=$$ERRMSG("Patient",DFN)
"RTN","HMPEF",175,0)
 . K PAT D LKUP^HMPDJ00
"RTN","HMPEF",176,0)
 . S HMPLAST=DFN
"RTN","HMPEF",177,0)
 I DFN<1 S HMPFINI=1
"RTN","HMPEF",178,0)
 Q
"RTN","HMPEF",179,0)
LOC ; Hospital Location (#44) and Ward Location (#42)  /DE2818
"RTN","HMPEF",180,0)
 D LOC^HMPEF1(.HMPFINI,.HMPFLDON,$G(HMPMETA))
"RTN","HMPEF",181,0)
 Q
"RTN","HMPEF",182,0)
 ;
"RTN","HMPEF",183,0)
ACTWRD(IEN) ;Boolean TRUE if active WARD LOCATION
"RTN","HMPEF",184,0)
 ; IEN - IEN in file 42
"RTN","HMPEF",185,0)
 S D0=IEN D WIN^DGPMDDCF Q 'X  ; SRG: need DBIA
"RTN","HMPEF",186,0)
 ;
"RTN","HMPEF",187,0)
ACTLOC(LOC) ;Boolean TRUE if active hospital location
"RTN","HMPEF",188,0)
 ; ^SC - IA 10040
"RTN","HMPEF",189,0)
 N D0,X I +$G(^SC(LOC,"OOS")) Q 0                ; screen out OOS entry
"RTN","HMPEF",190,0)
 S D0=+$G(^SC(LOC,42)) I D0 D WIN^DGPMDDCF Q 'X  ; chk out of svc wards
"RTN","HMPEF",191,0)
 S X=$G(^SC(LOC,"I")) I +X=0 Q 1                 ; no inactivate date
"RTN","HMPEF",192,0)
 I DT>$P(X,U)&($P(X,U,2)=""!(DT<$P(X,U,2))) Q 0  ; chk reactivate date
"RTN","HMPEF",193,0)
 Q 1                                             ; must still be active
"RTN","HMPEF",194,0)
 ;
"RTN","HMPEF",195,0)
NP ;New Persons
"RTN","HMPEF",196,0)
 D NP^HMPEF1
"RTN","HMPEF",197,0)
 Q
"RTN","HMPEF",198,0)
 ;
"RTN","HMPEF",199,0)
KEYS(IEN) ;user's keys
"RTN","HMPEF",200,0)
 N HMPKEY,IENS,X,CNT
"RTN","HMPEF",201,0)
 D GETS^DIQ(200,IEN_",","51*","IE","HMPKEY") S CNT=0
"RTN","HMPEF",202,0)
 S IENS="" F  S IENS=$O(HMPKEY(200.051,IENS)) Q:IENS=""  D
"RTN","HMPEF",203,0)
 . S X=$G(HMPKEY(200.051,IENS,.01,"E")),CNT=CNT+1
"RTN","HMPEF",204,0)
 . S USER("vistaKeys",CNT,"name")=X
"RTN","HMPEF",205,0)
 . S X=$G(HMPKEY(200.051,IENS,3,"I"))
"RTN","HMPEF",206,0)
 . S:X USER("vistaKeys",CNT,"reviewDate")=$$JSONDT^HMPUTILS(X)
"RTN","HMPEF",207,0)
 Q
"RTN","HMPEF",208,0)
 ;
"RTN","HMPEF",209,0)
ODG ;
"RTN","HMPEF",210,0)
 D ADDODG^HMPCORD4
"RTN","HMPEF",211,0)
 Q
"RTN","HMPEF",212,0)
 ;
"RTN","HMPEF",213,0)
OI ;
"RTN","HMPEF",214,0)
 D OI^HMPCORD4("PS^RAP^LRT")
"RTN","HMPEF",215,0)
 Q
"RTN","HMPEF",216,0)
 ;
"RTN","HMPEF",217,0)
PROB ;get problem list OPD store
"RTN","HMPEF",218,0)
 D PROB^HMPEF1(.HMPFINI,LEX)
"RTN","HMPEF",219,0)
 Q
"RTN","HMPEF",220,0)
 ;
"RTN","HMPEF",221,0)
QO ;
"RTN","HMPEF",222,0)
 D QO^HMPCORD4
"RTN","HMPEF",223,0)
 Q
"RTN","HMPEF",224,0)
 ;
"RTN","HMPEF",225,0)
SCHEDULE ;
"RTN","HMPEF",226,0)
 N RESULT
"RTN","HMPEF",227,0)
 D ADDSCH^HMPCORD4
"RTN","HMPEF",228,0)
 Q
"RTN","HMPEF",229,0)
 ;
"RTN","HMPEF",230,0)
ROUTE ;
"RTN","HMPEF",231,0)
 N RESULT
"RTN","HMPEF",232,0)
 D ADDROUTE^HMPCORD4
"RTN","HMPEF",233,0)
 Q
"RTN","HMPEF",234,0)
 ;
"RTN","HMPEF",235,0)
HMP ; HMP Objects
"RTN","HMPEF",236,0)
 N IEN
"RTN","HMPEF",237,0)
 S HMPCNT=$$TOTAL("^HMP(800000.11)")
"RTN","HMPEF",238,0)
 I $L(HMPID) D  Q
"RTN","HMPEF",239,0)
 . I HMPID=+HMPID S IEN=HMPID
"RTN","HMPEF",240,0)
 . E  S IEN=+$O(^HMP(800000.11,"B",HMPID,0))
"RTN","HMPEF",241,0)
 . S ERRMSG=$$ERRMSG("HMP Object",IEN)
"RTN","HMPEF",242,0)
 . D:IEN HMP1^HMPDJ02(800000.11,IEN)
"RTN","HMPEF",243,0)
 S IEN=+$G(HMPLAST) F  S IEN=$O(^HMP(800000.11,"C",TYPE,IEN)) Q:IEN<1  D  I HMPMAX>0,HMPI'<HMPMAX Q
"RTN","HMPEF",244,0)
 . S ERRMSG=$$ERRMSG("HMP Object",IEN)
"RTN","HMPEF",245,0)
 . D HMP1^HMPDJ02(800000.11,IEN) S HMPLAST=IEN
"RTN","HMPEF",246,0)
 I IEN<1 S HMPFINI=1
"RTN","HMPEF",247,0)
 Q
"RTN","HMPEF",248,0)
 ;
"RTN","HMPEF",249,0)
SOURCE(SRC) ;
"RTN","HMPEF",250,0)
 N X S X=""
"RTN","HMPEF",251,0)
 I SRC["SC("        S X="clinic"
"RTN","HMPEF",252,0)
 I SRC["DPT("       S X="patient"
"RTN","HMPEF",253,0)
 I SRC["DIC(42"     S X="ward"
"RTN","HMPEF",254,0)
 I SRC["SCTM"       S X="pcmm"
"RTN","HMPEF",255,0)
 I SRC["OR(100.21"  S X="cprs"
"RTN","HMPEF",256,0)
 I SRC["DIC(45.7"   S X="specialty"
"RTN","HMPEF",257,0)
 I SRC["VA(200"     S X="provider"
"RTN","HMPEF",258,0)
 I SRC["PXRM(810.4" S X="pxrm"
"RTN","HMPEF",259,0)
 Q X
"RTN","HMPEF",260,0)
 ;
"RTN","HMPEF",261,0)
ASU ; ASU files
"RTN","HMPEF",262,0)
 N X,RTN S X=$P($G(TYPE),"-",2)
"RTN","HMPEF",263,0)
 S RTN=$$UP^XLFSTR(X)_"^HMPEASU"
"RTN","HMPEF",264,0)
 I X'="",$L($T(@RTN)) D @RTN
"RTN","HMPEF",265,0)
 Q
"RTN","HMPEF",266,0)
 ;
"RTN","HMPEF",267,0)
MDTERMS ; CP Terminology
"RTN","HMPEF",268,0)
 D:$L($T(TERM^HMPMDUTL)) TERM^HMPMDUTL
"RTN","HMPEF",269,0)
 Q
"RTN","HMPEF",270,0)
LABGRP ;
"RTN","HMPEF",271,0)
 D SHWCUMR2^HMPELAB
"RTN","HMPEF",272,0)
 Q
"RTN","HMPEF",273,0)
LABPNL ;
"RTN","HMPEF",274,0)
 D SHWORPNL^HMPELAB
"RTN","HMPEF",275,0)
 Q
"RTN","HMPEF",276,0)
 ;
"RTN","HMPEF",277,0)
 ;DE2818, changed reference to ^VA(201) to a FileMan call
"RTN","HMPEF",278,0)
ISPROXY(IEN) ; Boolean function, is NEW PERSON entry an APPLICATION PROXY?
"RTN","HMPEF",279,0)
 N APP,HMPMSG,HMPUCLS,T,V
"RTN","HMPEF",280,0)
 ; APP - returned value
"RTN","HMPEF",281,0)
 ; HMPUCLS - user class array
"RTN","HMPEF",282,0)
 ; HMPMSG - FileMan message array
"RTN","HMPEF",283,0)
 ;
"RTN","HMPEF",284,0)
 D GETS^DIQ(200,IEN_",","9.5*","E","HMPUCLS","HMPMSG")  ; get external format
"RTN","HMPEF",285,0)
 S APP=0,T="APPLICATION PROXY",V="HMPUCLS"
"RTN","HMPEF",286,0)
 ; search returned array for value equal to T
"RTN","HMPEF",287,0)
 F  S V=$Q(@V) Q:V=""!APP  S:@V=T APP=1
"RTN","HMPEF",288,0)
 Q APP
"RTN","HMPEF",289,0)
 ;
"RTN","HMPEF",290,0)
IMMTYPE ;immunization types
"RTN","HMPEF",291,0)
 D IMMTYPE^HMPCORD5
"RTN","HMPEF",292,0)
 Q
"RTN","HMPEF",293,0)
 ;
"RTN","HMPEF",294,0)
ALLTYPE ;allergy-list types
"RTN","HMPEF",295,0)
 ;BL;REMOVE FROM ODS
"RTN","HMPEF",296,0)
 ;D ALLTYPE^HMPCORD5
"RTN","HMPEF",297,0)
 Q
"RTN","HMPEF",298,0)
 ;
"RTN","HMPEF",299,0)
VTYPE ;vital types
"RTN","HMPEF",300,0)
 D VTYPE^HMPCORD5
"RTN","HMPEF",301,0)
 Q
"RTN","HMPEF",302,0)
 ;
"RTN","HMPEF",303,0)
VQUAL ;vital qualifiers
"RTN","HMPEF",304,0)
 D VQUAL^HMPCORD5
"RTN","HMPEF",305,0)
 Q
"RTN","HMPEF",306,0)
 ;
"RTN","HMPEF",307,0)
VCAT ;vital categories
"RTN","HMPEF",308,0)
 D VCAT^HMPCORD5
"RTN","HMPEF",309,0)
 Q
"RTN","HMPEF",310,0)
 ;
"RTN","HMPEF",311,0)
FILENAME ; text of filenames for search treeview
"RTN","HMPEF",312,0)
 ;;VA Allergies File
"RTN","HMPEF",313,0)
 ;;VA Allergies File (Synonyms)  SPACER ONLY - NOT DISPLAYED
"RTN","HMPEF",314,0)
 ;;National Drug File - Generic Drug Name
"RTN","HMPEF",315,0)
 ;;National Drug file - Trade Name
"RTN","HMPEF",316,0)
 ;;Local Drug File
"RTN","HMPEF",317,0)
 ;;Local Drug File (Synonyms)  SPACER ONLY - NOT DISPLAYED
"RTN","HMPEF",318,0)
 ;;Drug Ingredients File
"RTN","HMPEF",319,0)
 ;;VA Drug Class File
"RTN","HMPEF",320,0)
 ;;
"RTN","HMPEVNT")
0^1^B188368907
"RTN","HMPEVNT",1,0)
HMPEVNT ;SLC/MKB,ASMR/JD,RRB,CPC,MBS -- VistA event listeners;Aug 23, 2016 11:56:13
"RTN","HMPEVNT",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**2,3,4**;May 15, 2016;Build 2
"RTN","HMPEVNT",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","HMPEVNT",4,0)
 ;
"RTN","HMPEVNT",5,0)
 ; External References          DBIA#
"RTN","HMPEVNT",6,0)
 ; -------------------          -----
"RTN","HMPEVNT",7,0)
 ; DG FIELD MONITOR              3344
"RTN","HMPEVNT",8,0)
 ; DGPM MOVEMENT EVENTS          1181
"RTN","HMPEVNT",9,0)
 ; GMRA ENTERED IN ERROR         1467
"RTN","HMPEVNT",10,0)
 ; GMRA SIGN-OFF ON DATA         1469
"RTN","HMPEVNT",11,0)
 ; GMRC EVSEND OR                3140
"RTN","HMPEVNT",12,0)
 ; LR70 CH EVSEND OR             6087
"RTN","HMPEVNT",13,0)
 ; MDC OBSERVATION UPDATE        6084
"RTN","HMPEVNT",14,0)
 ; PS EVSEND OR                  2415
"RTN","HMPEVNT",15,0)
 ; PSB EVSEND HMP                6085
"RTN","HMPEVNT",16,0)
 ; PXK VISIT DATA EVENT          1298
"RTN","HMPEVNT",17,0)
 ; RA EVSEND OR                  6086
"RTN","HMPEVNT",18,0)
 ; SDAM APPOINTMENT EVENTS       1320
"RTN","HMPEVNT",19,0)
 ; ^AUPNVSIT                     2028
"RTN","HMPEVNT",20,0)
 ; ^DPT                         10035
"RTN","HMPEVNT",21,0)
 ; ^OR(100                       5771
"RTN","HMPEVNT",22,0)
 ; DIQ                           2056
"RTN","HMPEVNT",23,0)
 ; GMVUTL                        5046
"RTN","HMPEVNT",24,0)
 ; TIUSRVLO                      2834
"RTN","HMPEVNT",25,0)
 ; VADPT                        10061
"RTN","HMPEVNT",26,0)
 ; VASITE                       10112
"RTN","HMPEVNT",27,0)
 ; XLFDT                        10103
"RTN","HMPEVNT",28,0)
 ; XTHC10                        5515
"RTN","HMPEVNT",29,0)
 ; ORDRNUM^PSSUTLA2              6426  ;DE6363 - JD - 8/23/16
"RTN","HMPEVNT",30,0)
 ;
"RTN","HMPEVNT",31,0)
 ; DE2818 - SQA findings.
"RTN","HMPEVNT",32,0)
 ;          1) Correct unkilled variables by modifying line tags to accept variables as
"RTN","HMPEVNT",33,0)
 ;          parameters and modifying associated protocol routine calls to pass variables
"RTN","HMPEVNT",34,0)
 ;          as parameters. RRB - 10/28/2015
"RTN","HMPEVNT",35,0)
 ;
"RTN","HMPEVNT",36,0)
 ;Oct 15, 2015 - PB - modified to trigger an unsolicited sync action when an order is discontinued and the patient is subscribed to eHMP
"RTN","HMPEVNT",37,0)
 ;
"RTN","HMPEVNT",38,0)
 ;DE3327 - 5/4/16 - JD - Removed the server hardcoding (hmp-development-box).
"RTN","HMPEVNT",39,0)
 ;                       *** NOTE ***
"RTN","HMPEVNT",40,0)
 ;                       It is understood that as of the date of modifying this code (5/4/16), there
"RTN","HMPEVNT",41,0)
 ;                       is one AND ONLY one server entry in the HMP Subscription file (#800000)
"RTN","HMPEVNT",42,0)
 ;                       per site.  This will be fixed in future releases to accommodate multiple
"RTN","HMPEVNT",43,0)
 ;                       servers per site.
"RTN","HMPEVNT",44,0)
 ;
"RTN","HMPEVNT",45,0)
 Q
"RTN","HMPEVNT",46,0)
 ;
"RTN","HMPEVNT",47,0)
DG(DGDA,DGFIELD,DGFILE) ; -- DG FIELD MONITOR protocol listener  /DE2818 
"RTN","HMPEVNT",48,0)
 Q:$G(DGFILE)'=2         ;Patient file only
"RTN","HMPEVNT",49,0)
 N DFN S DFN=+$G(DGDA)
"RTN","HMPEVNT",50,0)
 ; operational pt-select - *s68 BEGIN
"RTN","HMPEVNT",51,0)
 I "^.01^.02^.03^.09^.101^.351^.361^"[(U_+$G(DGFIELD)_U) D
"RTN","HMPEVNT",52,0)
 . ; -- if patient entry has been deleted, delete pt-select object
"RTN","HMPEVNT",53,0)
 . I $G(DGFIELD)=".01",'$D(^DPT(DFN)) D POSTX("pt-select",DFN,"@") Q  ; *s68 - END
"RTN","HMPEVNT",54,0)
 . D POSTX("pt-select",DFN_"&"_$G(DGFIELD))
"RTN","HMPEVNT",55,0)
 ; subscribed patient
"RTN","HMPEVNT",56,0)
 I $D(^HMP(800000,"AITEM",DFN)),$$FLD(+$G(DGFIELD)) D POST(DFN,"patient",DFN)
"RTN","HMPEVNT",57,0)
 Q
"RTN","HMPEVNT",58,0)
 ;
"RTN","HMPEVNT",59,0)
FLD(X) ; --Return 1 or 0, if X is a field tracked by HMP
"RTN","HMPEVNT",60,0)
 S X=U_+$G(X)_U
"RTN","HMPEVNT",61,0)
 I "^.01^.02^.03^.05^.08^.09^.351^.361^.364^"[X Q 1         ;demographic
"RTN","HMPEVNT",62,0)
 I "^.111^.1112^.112^.113^.114^.115^.131^.132^.134^"[X Q 1  ;addr/phone
"RTN","HMPEVNT",63,0)
 I "^.211^.212^.213^.214^.216^.217^.218^.219^"[X Q 1        ;NOK
"RTN","HMPEVNT",64,0)
 I "^.301^.302^1901^.32102^.32103^.32201^.5295^"[X Q 1      ;serv conn
"RTN","HMPEVNT",65,0)
 ;New fields.  JD - 9/24/15
"RTN","HMPEVNT",66,0)
 I "^.133^"[X Q 1                                           ;email address
"RTN","HMPEVNT",67,0)
 I "^.1211^.1212^.1213^.1214^.1215^.1216^"[X Q 1            ;temporary address
"RTN","HMPEVNT",68,0)
 I "^.331^.332^.333^.334^.335^.336^.337^.338^.339^.33011^"[X Q 1  ;emergency contact addr/phone
"RTN","HMPEVNT",69,0)
 I "^.215^.21011^"[X Q 1                                    ;NOK addr line 3 and work phone
"RTN","HMPEVNT",70,0)
 I "^.3731^"[X Q 1                                          ;service connected conditions
"RTN","HMPEVNT",71,0)
 I "^.18^3^8^16^"[X Q 1                                     ;insurance  
"RTN","HMPEVNT",72,0)
 Q 0
"RTN","HMPEVNT",73,0)
 ;
"RTN","HMPEVNT",74,0)
DGPM(DGPMA,DGPMDA,DGPMP,DGPMT) ; -- DGPM MOVEMENT EVENTS protocol listener  /DE2818
"RTN","HMPEVNT",75,0)
 ;    [expects DFN,DGPM* variables]
"RTN","HMPEVNT",76,0)
 N ADM,ACT S ADM=DGPMDA
"RTN","HMPEVNT",77,0)
 I DGPMT'=1 S ADM=$S(DGPMA:$P(DGPMA,U,14),1:$P(DGPMP,U,14)) Q:ADM<1
"RTN","HMPEVNT",78,0)
 S ACT=$S(DGPMA:"",1:"@")
"RTN","HMPEVNT",79,0)
 I $D(^HMP(800000,"AITEM",DFN)) D POST(DFN,"visit","H"_ADM,ACT)
"RTN","HMPEVNT",80,0)
 ; update roster(s) if current movement
"RTN","HMPEVNT",81,0)
 N ADMX,MVTX,PREV,NEW,OLD,WARD
"RTN","HMPEVNT",82,0)
 S ADMX=$Q(^DGPM("ATID1",DFN)) Q:$QS(ADMX,4)'=ADM
"RTN","HMPEVNT",83,0)
 S MVTX=$Q(^DGPM("APMV",DFN,ADM)) Q:$QS(MVTX,5)'=DGPMDA
"RTN","HMPEVNT",84,0)
 S PREV=$G(DGPMP) I 'PREV,DGPMT'=1 D  ;previous or edited mvt
"RTN","HMPEVNT",85,0)
 . S MVTX=$Q(@MVTX) Q:DFN'=$QS(MVTX,2)  Q:ADM'=$QS(MVTX,3)
"RTN","HMPEVNT",86,0)
 . S PREV=$G(^DGPM(+$QS(MVTX,5),0))
"RTN","HMPEVNT",87,0)
 S NEW=$P(DGPMA,U,6),OLD=$P(PREV,U,6)
"RTN","HMPEVNT",88,0)
 I NEW'=OLD F WARD=NEW,OLD I WARD D
"RTN","HMPEVNT",89,0)
 . S I=0 F  S I=$O(^HMPROSTR("AD",WARD_";DIC(42,",I)) Q:I<1  D POSTX("roster",I)
"RTN","HMPEVNT",90,0)
 Q
"RTN","HMPEVNT",91,0)
 ;-find visit# for corresponding admission [not used]
"RTN","HMPEVNT",92,0)
 N ADM,PTF,IDT,ID,ACT
"RTN","HMPEVNT",93,0)
 I DGPMA S ADM=+DGPMA,PTF=+$P(DGPMA,U,16)
"RTN","HMPEVNT",94,0)
 E  S ADM=+DGPMP,PTF=+$P(DGPMP,U,16)
"RTN","HMPEVNT",95,0)
 I DGPMT'=1 D  Q:ADM<1
"RTN","HMPEVNT",96,0)
 . N VAIP S VAIP("E")=DGPMDA
"RTN","HMPEVNT",97,0)
 . D IN5^VADPT S ADM=+VAIP(13,1),PTF=+VAIP(12)
"RTN","HMPEVNT",98,0)
 S IDT=9999999-$P(ADM,".") S:ADM["." IDT=IDT_"."_$P(ADM,".",2)
"RTN","HMPEVNT",99,0)
 S ID=+$O(^AUPNVSIT("AAH",DFN,IDT,0)) Q:'ID
"RTN","HMPEVNT",100,0)
 S ACT=$S(DGPMA:"",1:"@")
"RTN","HMPEVNT",101,0)
 D POST(DFN,"visit",ID,ACT)
"RTN","HMPEVNT",102,0)
 ; POST(DFN,"ptf",PTF,ACT):DGPMT=3
"RTN","HMPEVNT",103,0)
 Q
"RTN","HMPEVNT",104,0)
 ;
"RTN","HMPEVNT",105,0)
NEWINPT() ; -- is DFN newly admitted?
"RTN","HMPEVNT",106,0)
 N Y S Y=0
"RTN","HMPEVNT",107,0)
 I DGPMT=1,DGPMA,'DGPMP,+$G(^DPT(DFN,.105))=DGPMDA S Y=1 ;new admission
"RTN","HMPEVNT",108,0)
 Q Y
"RTN","HMPEVNT",109,0)
 ;
"RTN","HMPEVNT",110,0)
PCMMT(SCPTTMAF,SCPTTMB4) ; -- SCMC PATIENT TEAM CHANGES protocol listener /DE2818
"RTN","HMPEVNT",111,0)
 ;I '$P($G(SCPTTMB4),U,8),'$P($G(SCPTTMAF),U,8) Q  ;not pc change ;DE5410 removed to track changes to other teams
"RTN","HMPEVNT",112,0)
 N DFN S DFN=$S($G(SCPTTMAF):+SCPTTMAF,1:+$G(SCPTTMB4)) Q:'DFN
"RTN","HMPEVNT",113,0)
 D POST(DFN,"patient",DFN)
"RTN","HMPEVNT",114,0)
 Q
"RTN","HMPEVNT",115,0)
 ;
"RTN","HMPEVNT",116,0)
PCMMTP(SCPTTPAF,SCPTTPB4) ; -- SCMC PATIENT TEAM POSITION CHANGES protocol listener /DE2818
"RTN","HMPEVNT",117,0)
 ;I '$P($G(SCPTTPB4),U,5),'$P($G(SCPTTPAF),U,5) Q  ;not pc change ;DE5410 removed to track changes to other teams
"RTN","HMPEVNT",118,0)
 N TM,DFN
"RTN","HMPEVNT",119,0)
 S TM=$S($G(SCPTTPAF):+SCPTTPAF,1:+$G(SCPTTPB4)) Q:'TM
"RTN","HMPEVNT",120,0)
 ;DE2818
"RTN","HMPEVNT",121,0)
 S DFN=$$GET1^DIQ(404.42,+TM_",",.01,"I")  ;ICR 1922
"RTN","HMPEVNT",122,0)
 D POST(DFN,"patient",DFN)
"RTN","HMPEVNT",123,0)
 Q
"RTN","HMPEVNT",124,0)
 ;
"RTN","HMPEVNT",125,0)
SDAM(SDATA) ; -- SDAM APPOINTMENT EVENTS protocol listener /DE2818
"RTN","HMPEVNT",126,0)
 I $G(SDATA)'="" D  Q  ;appointments ;DE5411 still process if Piece 1 not set, catches auto-rebook status
"RTN","HMPEVNT",127,0)
 . N DFN,DATE,HLOC,STS,REASON,PROV
"RTN","HMPEVNT",128,0)
 . S DFN=+$P(SDATA,U,2) Q:DFN<1
"RTN","HMPEVNT",129,0)
 . Q:'$D(^HMP(800000,"AITEM",DFN))
"RTN","HMPEVNT",130,0)
 . S DATE=+$P(SDATA,U,3),HLOC=+$P(SDATA,U,4),(PROV,REASON)=""
"RTN","HMPEVNT",131,0)
 . D POST(DFN,"appointment","A;"_DATE_";"_HLOC_";"_REASON_";"_$TR($P(PROV,U,1,2),"^",";"))
"RTN","HMPEVNT",132,0)
 Q
"RTN","HMPEVNT",133,0)
 ;
"RTN","HMPEVNT",134,0)
PCE ; -- PXK VISIT DATA EVENT protocol listener, used by HMP PCE EVENTS protocol
"RTN","HMPEVNT",135,0)
 N ACT,DA,DFN,HMPPXK,IEN,PX0A,PX0B,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK ;DE4195 and DE6485
"RTN","HMPEVNT",136,0)
 S IEN=+$O(^TMP("PXKCO",$J,0)) Q:IEN<1
"RTN","HMPEVNT",137,0)
 S PX0A=$G(^TMP("PXKCO",$J,IEN,"VST",IEN,0,"AFTER")),PX0B=$G(^("BEFORE"))
"RTN","HMPEVNT",138,0)
 S DFN=$S($L(PX0A):+$P(PX0A,U,5),1:+$P(PX0B,U,5))
"RTN","HMPEVNT",139,0)
 Q:DFN<1  Q:'$D(^HMP(800000,"AITEM",DFN))
"RTN","HMPEVNT",140,0)
 ; Visit file
"RTN","HMPEVNT",141,0)
 S ACT=$S(PX0A="":"@",1:"")
"RTN","HMPEVNT",142,0)
 ;DE4195 - put subsequent processing into taskman
"RTN","HMPEVNT",143,0)
 M HMPPXK=^TMP("PXKCO",$J)
"RTN","HMPEVNT",144,0)
 ; DE6485, add null device in ZTIO
"RTN","HMPEVNT",145,0)
 S ZTRTN="PCE2^HMPEVNT",ZTDTH=$H,ZTIO="",ZTSAVE("HMPPXK(")="",ZTSAVE("DFN")="",ZTSAVE("IEN")="",ZTSAVE("ACT")=""
"RTN","HMPEVNT",146,0)
 S ZTDESC="HMP PXK VISIT EVENT HANDLER"
"RTN","HMPEVNT",147,0)
 D ^%ZTLOAD
"RTN","HMPEVNT",148,0)
 Q
"RTN","HMPEVNT",149,0)
PCE2 ; DE4195 - run in taskman
"RTN","HMPEVNT",150,0)
 N DA,SUB
"RTN","HMPEVNT",151,0)
 D POST(DFN,"visit",IEN,ACT)
"RTN","HMPEVNT",152,0)
 ; check V-files
"RTN","HMPEVNT",153,0)
 ;DE4879 - Removed Health Factors from loop (was SUB="HF","IMM",...)
"RTN","HMPEVNT",154,0)
 F SUB="IMM","XAM","CPT","PED","POV","SK" D
"RTN","HMPEVNT",155,0)
 . S DA=0 F  S DA=$O(HMPPXK(IEN,SUB,DA)) Q:DA<1  D
"RTN","HMPEVNT",156,0)
 .. S ACT=$S($G(HMPPXK(IEN,SUB,DA,0,"AFTER"))="":"@",1:"")
"RTN","HMPEVNT",157,0)
 .. D POST(DFN,$$NAME(SUB),DA,ACT)
"RTN","HMPEVNT",158,0)
 Q
"RTN","HMPEVNT",159,0)
 ;
"RTN","HMPEVNT",160,0)
NAME(X) ; -- return object name for V-files
"RTN","HMPEVNT",161,0)
 N Y S Y=""
"RTN","HMPEVNT",162,0)
 I X="HF"  S Y="factor"
"RTN","HMPEVNT",163,0)
 I X="IMM" S Y="immunization"
"RTN","HMPEVNT",164,0)
 I X="XAM" S Y="exam"
"RTN","HMPEVNT",165,0)
 I X="CPT" S Y="cpt"
"RTN","HMPEVNT",166,0)
 I X="PED" S Y="education"
"RTN","HMPEVNT",167,0)
 I X="POV" S Y="pov"
"RTN","HMPEVNT",168,0)
 I X="SK"  S Y="skin"
"RTN","HMPEVNT",169,0)
 Q Y
"RTN","HMPEVNT",170,0)
 ;
"RTN","HMPEVNT",171,0)
ZPCE ; -- old PXK VISIT DATA EVENT protocol listener [not in use]
"RTN","HMPEVNT",172,0)
 N IEN,PX0,PX150,DFN,DA
"RTN","HMPEVNT",173,0)
 S IEN=+$O(^TMP("PXKCO",$J,0)) Q:IEN<1
"RTN","HMPEVNT",174,0)
 S PX0=$G(^TMP("PXKCO",$J,IEN,"VST",IEN,0,"AFTER")) Q:$P(PX0,U,7)="E"
"RTN","HMPEVNT",175,0)
 I PX0="" D POST(DFN,"visit",IEN,"@") Q  ;deleted
"RTN","HMPEVNT",176,0)
 S PX150=$G(^TMP("PXKCO",$J,IEN,"VST",IEN,150,"AFTER")) Q:$P(PX150,U,3)'="P"
"RTN","HMPEVNT",177,0)
 S DFN=+$P(PX0,U,5) Q:DFN<1  Q:'$D(^HMP(800000,"AITEM",DFN))
"RTN","HMPEVNT",178,0)
 D POST(DFN,"visit",IEN)
"RTN","HMPEVNT",179,0)
 S DA=0 F  S DA=$O(^TMP("PXKCO",$J,IEN,"IMM",DA)) Q:DA<1  D POST(DFN,"immunization",DA)
"RTN","HMPEVNT",180,0)
 S DA=0 F  S DA=$O(^TMP("PXKCO",$J,IEN,"HF",DA)) Q:DA<1  D POST(DFN,"factor",DA)
"RTN","HMPEVNT",181,0)
 Q
"RTN","HMPEVNT",182,0)
 ;
"RTN","HMPEVNT",183,0)
XQOR(MSG) ; -- messaging listener (update meds, labs, xrays, consults)
"RTN","HMPEVNT",184,0)
 N HMPMSG,HMPPKG,MSH,ORC,DFN
"RTN","HMPEVNT",185,0)
 S HMPMSG=$S($L($G(MSG)):MSG,1:"MSG") Q:'$O(@HMPMSG@(0))
"RTN","HMPEVNT",186,0)
 S MSH=0 F  S MSH=$O(@HMPMSG@(MSH)) Q:MSH'>0  Q:$E(@HMPMSG@(MSH),1,3)="MSH"
"RTN","HMPEVNT",187,0)
 Q:'MSH  Q:'$L($G(@HMPMSG@(MSH)))
"RTN","HMPEVNT",188,0)
 S HMPPKG=$$TYPE($P(@HMPMSG@(MSH),"|",3))  Q:'$L(HMPPKG)
"RTN","HMPEVNT",189,0)
 S DFN=$$PID Q:DFN<1  Q:'$D(^HMP(800000,"AITEM",DFN))
"RTN","HMPEVNT",190,0)
 S ORC=MSH F  S ORC=$O(@HMPMSG@(+ORC)) Q:ORC'>0  I $E(@HMPMSG@(ORC),1,3)="ORC" D
"RTN","HMPEVNT",191,0)
 . N ORDCNTRL,PKGIFN,ORIFN,PORIFN
"RTN","HMPEVNT",192,0)
 . S ORC=ORC_U_@HMPMSG@(ORC),ORDCNTRL=$TR($P(ORC,"|",2),"@","P")
"RTN","HMPEVNT",193,0)
 . ; QUIT if action failed, conversion, purge, or backdoor verify/new
"RTN","HMPEVNT",194,0)
 . ;I ORDCNTRL["U"!("DE^ZC^ZP^ZR^ZV^SN"[ORDCNTRL) Q
"RTN","HMPEVNT",195,0)
 . I ORDCNTRL["U"!("DE^ZP^ZR^ZV^SN"[ORDCNTRL) Q  ;Oct 15, 2015 - PB - modified to trigger an unsolicited sync action when a signed order is discontinued
"RTN","HMPEVNT",196,0)
 . S ORIFN=+$P($P(ORC,"|",3),U),PKGIFN=$P($P(ORC,"|",4),U)
"RTN","HMPEVNT",197,0)
 . ; If this is a child order get the parent and send it too
"RTN","HMPEVNT",198,0)
 . ; PORIFN = PARENT ORDER IFN
"RTN","HMPEVNT",199,0)
 . S PORIFN=+$P($G(^OR(100,ORIFN,3)),U,9)
"RTN","HMPEVNT",200,0)
 . I $$RESULT D  ;update ancillary domains
"RTN","HMPEVNT",201,0)
 .. D POST(DFN,HMPPKG,PKGIFN)
"RTN","HMPEVNT",202,0)
 .. D:HMPPKG="image" POST(DFN,"document",PKGIFN)
"RTN","HMPEVNT",203,0)
 .. I HMPPKG="lab",PKGIFN'["CH",'$$LRTIU(DFN,PKGIFN) D POST(DFN,"document",$P(PKGIFN,";",4,5))
"RTN","HMPEVNT",204,0)
 . I ORIFN,ORDCNTRL'="ZD" D  ;update order(s)
"RTN","HMPEVNT",205,0)
 .. D POST(DFN,"order",ORIFN)
"RTN","HMPEVNT",206,0)
 .. I PORIFN D POST(DFN,"order",PORIFN)
"RTN","HMPEVNT",207,0)
 .. N ORIG S ORIG=+$P($G(^OR(100,ORIFN,3)),U,5)
"RTN","HMPEVNT",208,0)
 .. I ORIG D POST(DFN,"order",ORIG) ;need fwd ptrs, sig flds
"RTN","HMPEVNT",209,0)
 Q
"RTN","HMPEVNT",210,0)
 ;
"RTN","HMPEVNT",211,0)
RESULT() ; -- Return 1 or 0, if message broadcasts a result
"RTN","HMPEVNT",212,0)
 ;           [may modify PKGIFN for use in POST]
"RTN","HMPEVNT",213,0)
 N Y S Y=0
"RTN","HMPEVNT",214,0)
 I HMPPKG="consult" S Y=1,PKGIFN=+PKGIFN G RQ
"RTN","HMPEVNT",215,0)
 I HMPPKG="med"     S Y=1,PKGIFN=ORIFN G RQ
"RTN","HMPEVNT",216,0)
 I HMPPKG="lab"     S:ORDCNTRL="RE"&($L(PKGIFN,";")>3) Y=1 G RQ
"RTN","HMPEVNT",217,0)
 I HMPPKG="image"   S:PKGIFN["~" Y=1,PKGIFN=$TR($P(PKGIFN,"~",2,3),"~","-") G RQ
"RTN","HMPEVNT",218,0)
RQ Q Y
"RTN","HMPEVNT",219,0)
 ;
"RTN","HMPEVNT",220,0)
LRTIU(DFN,ORPK) ; -- Return 1 or 0, if LR report is in TIU
"RTN","HMPEVNT",221,0)
 I $G(DFN)<1!'$L($G(ORPK)) Q 0
"RTN","HMPEVNT",222,0)
 I ORPK["CH"!(ORPK["MI") Q 0
"RTN","HMPEVNT",223,0)
 N SUB,IDT,LRDFN
"RTN","HMPEVNT",224,0)
 S SUB=$P(ORPK,";",4),IDT=+$P(ORPK,";",5),LRDFN=+$G(^DPT(+DFN,"LR"))
"RTN","HMPEVNT",225,0)
 I $O(^LR(LRDFN,SUB,IDT,.05,0)) Q 1
"RTN","HMPEVNT",226,0)
 Q 0
"RTN","HMPEVNT",227,0)
 ;
"RTN","HMPEVNT",228,0)
NA(MSG) ; -- messaging listener (new backdoor orders)
"RTN","HMPEVNT",229,0)
 N HMPMSG,HMPPKG,MSH,ORC,DFN
"RTN","HMPEVNT",230,0)
 S HMPMSG=$S($L($G(MSG)):MSG,1:"MSG") Q:'$O(@HMPMSG@(0))
"RTN","HMPEVNT",231,0)
 S MSH=0 F  S MSH=$O(@HMPMSG@(MSH)) Q:MSH'>0  Q:$E(@HMPMSG@(MSH),1,3)="MSH"
"RTN","HMPEVNT",232,0)
 Q:'MSH  Q:'$L($G(@HMPMSG@(MSH)))
"RTN","HMPEVNT",233,0)
 S HMPPKG=$$TYPE($P(@HMPMSG@(MSH),"|",5))  Q:'$L(HMPPKG)
"RTN","HMPEVNT",234,0)
 S DFN=$$PID Q:DFN<1  Q:'$D(^HMP(800000,"AITEM",DFN))
"RTN","HMPEVNT",235,0)
 S ORC=MSH F  S ORC=$O(@HMPMSG@(+ORC)) Q:ORC'>0  I $E(@HMPMSG@(ORC),1,3)="ORC" D
"RTN","HMPEVNT",236,0)
 . N ORDCNTRL,ORIFN
"RTN","HMPEVNT",237,0)
 . S ORC=ORC_U_@HMPMSG@(ORC),ORDCNTRL=$TR($P(ORC,"|",2),"@","P")
"RTN","HMPEVNT",238,0)
 . Q:ORDCNTRL'="NA"
"RTN","HMPEVNT",239,0)
 . S ORIFN=+$P($P(ORC,"|",3),U) D POST(DFN,"order",ORIFN)
"RTN","HMPEVNT",240,0)
 . I HMPPKG="med" D POST(DFN,HMPPKG,ORIFN)
"RTN","HMPEVNT",241,0)
 Q
"RTN","HMPEVNT",242,0)
 ;
"RTN","HMPEVNT",243,0)
TYPE(NAME) ; -- Returns type name for XML
"RTN","HMPEVNT",244,0)
 I NAME="LABORATORY"  Q "lab"
"RTN","HMPEVNT",245,0)
 I NAME="PHARMACY"    Q "med"
"RTN","HMPEVNT",246,0)
 I NAME="CONSULTS"    Q "consult"
"RTN","HMPEVNT",247,0)
 I NAME="PROCEDURES"  Q "consult"
"RTN","HMPEVNT",248,0)
 I NAME="RADIOLOGY"   Q "image"
"RTN","HMPEVNT",249,0)
 I NAME="IMAGING"     Q "image"
"RTN","HMPEVNT",250,0)
 I NAME="ORDER ENTRY" Q "order"
"RTN","HMPEVNT",251,0)
 I NAME="DIETETICS"   Q "diet"
"RTN","HMPEVNT",252,0)
 Q ""
"RTN","HMPEVNT",253,0)
 ;
"RTN","HMPEVNT",254,0)
PID() ; -- Returns patient from PID segment in current msg
"RTN","HMPEVNT",255,0)
 N I,SEG,Y S I=MSH
"RTN","HMPEVNT",256,0)
 F  S I=$O(@HMPMSG@(I)) Q:I'>0  S SEG=$E(@HMPMSG@(I),1,3) Q:SEG="ORC"  I SEG="PID" D  Q
"RTN","HMPEVNT",257,0)
 . S Y=+$P(@HMPMSG@(I),"|",4)
"RTN","HMPEVNT",258,0)
 .;I '$D(^DPT(Y,0)) S:$L($P(@HMPMSG@(I),"|",5)) Y=+$P(@HMPMSG@(I),"|",5) ;alt ID for Lab
"RTN","HMPEVNT",259,0)
 Q Y
"RTN","HMPEVNT",260,0)
 ;
"RTN","HMPEVNT",261,0)
PV1() ; -- Returns patient class from PV1 segment in current msg
"RTN","HMPEVNT",262,0)
 N I,SEG,Y S I=MSH,Y=""
"RTN","HMPEVNT",263,0)
 F  S I=$O(@HMPMSG@(I)) Q:I'>0  S SEG=$E(@HMPMSG@(I),1,3) Q:SEG="ORC"  I SEG="PV1" D  Q
"RTN","HMPEVNT",264,0)
 . S Y=$P(@HMPMSG@(I),"|",3)
"RTN","HMPEVNT",265,0)
 I Y="",$G(ORIFN) S Y=$$GET1^DIQ(100,+ORIFN_",",10,"I")
"RTN","HMPEVNT",266,0)
 Q Y
"RTN","HMPEVNT",267,0)
 ;
"RTN","HMPEVNT",268,0)
GMRA(ACT) ; -- GMRA SIGN-OFF ON DATA protocol listener
"RTN","HMPEVNT",269,0)
 ;   also GMRA ENTERED IN ERROR [ACT=@]
"RTN","HMPEVNT",270,0)
 N DFN,IEN
"RTN","HMPEVNT",271,0)
 S DFN=+$G(GMRAPA(0)),IEN=+$G(GMRAPA)
"RTN","HMPEVNT",272,0)
 D POST(DFN,"allergy",IEN,$G(ACT))
"RTN","HMPEVNT",273,0)
 Q
"RTN","HMPEVNT",274,0)
 ;
"RTN","HMPEVNT",275,0)
GMPL(DFN,IEN) ; -- GMPL EVENT protocol listener
"RTN","HMPEVNT",276,0)
 S DFN=+$G(DFN),IEN=+$G(IEN)
"RTN","HMPEVNT",277,0)
 ;N ACT S ACT=$S($P($G(^AUPNPROB(IEN,1)),U,2)="H":"@",1:"")
"RTN","HMPEVNT",278,0)
 D POST(DFN,"problem",IEN) ;,ACT)
"RTN","HMPEVNT",279,0)
 Q
"RTN","HMPEVNT",280,0)
 ;
"RTN","HMPEVNT",281,0)
GMRV(DFN,IEN,ERR) ; -- Vital Measurement file #120.5 AHMP index
"RTN","HMPEVNT",282,0)
 S DFN=+$G(DFN),IEN=+$G(IEN)
"RTN","HMPEVNT",283,0)
 N ACT S ACT=$S($G(ERR):"@",1:"")
"RTN","HMPEVNT",284,0)
 D POST(DFN,"vital",IEN,ACT)
"RTN","HMPEVNT",285,0)
 Q
"RTN","HMPEVNT",286,0)
 ;
"RTN","HMPEVNT",287,0)
MDC(OBS) ; -- MDC OBSERVATION UPDATE protocol listener
"RTN","HMPEVNT",288,0)
 N DFN,ID,ACT
"RTN","HMPEVNT",289,0)
 S DFN=+$G(OBS("PATIENT_ID","I")) Q:DFN<1
"RTN","HMPEVNT",290,0)
 S ID=$G(OBS("OBS_ID","I")) Q:'$L(ID)
"RTN","HMPEVNT",291,0)
 S ACT=$S('$G(OBS("STATUS","I")):"@",1:"")
"RTN","HMPEVNT",292,0)
 D POST(DFN,"obs",ID,ACT)
"RTN","HMPEVNT",293,0)
 I $G(OBS("DOMAIN","VITALS")) D POST(DFN,"vital",ID,ACT)
"RTN","HMPEVNT",294,0)
 Q
"RTN","HMPEVNT",295,0)
 ;
"RTN","HMPEVNT",296,0)
CP(DFN,ID,ACT) ; -- CP Transaction file #702 AHMP index
"RTN","HMPEVNT",297,0)
 S DFN=+$G(DFN),ID=$G(ID)
"RTN","HMPEVNT",298,0)
 D POST(DFN,"document",ID,$G(ACT)) ;de3944 also need to generate document for procedure to link results to
"RTN","HMPEVNT",299,0)
 D POST(DFN,"procedure",ID,$G(ACT))
"RTN","HMPEVNT",300,0)
 Q
"RTN","HMPEVNT",301,0)
 ;
"RTN","HMPEVNT",302,0)
SR(DFN,IEN,ACT) ; -- Surgery [SROERR] update
"RTN","HMPEVNT",303,0)
 S DFN=+$G(DFN),IEN=+$G(IEN)
"RTN","HMPEVNT",304,0)
 D POST(DFN,"surgery",IEN,$G(ACT))
"RTN","HMPEVNT",305,0)
 Q
"RTN","HMPEVNT",306,0)
 ;*s68 - BEGINS
"RTN","HMPEVNT",307,0)
TIU(DFN,IEN) ; -- TIU Document file #8925 AHMP index
"RTN","HMPEVNT",308,0)
 N ACT,STS,DAD,REPCAT
"RTN","HMPEVNT",309,0)
 S DFN=+$G(DFN),IEN=+$G(IEN),ACT=""
"RTN","HMPEVNT",310,0)
 S STS=$G(X(2)),DAD=$G(X(3)) ;X = FM data array for index
"RTN","HMPEVNT",311,0)
 S:DAD IEN=DAD I 'DAD D      ;if addendum, repull entire note
"RTN","HMPEVNT",312,0)
 . ;I STS=15 S ACT="@"       ;retracted; DE3693 - do not delete note from JDS if retracted, March 18, 2016
"RTN","HMPEVNT",313,0)
 . I $G(X2(1))="" S ACT="@"  ;deleted (new title = null)
"RTN","HMPEVNT",314,0)
 D POST(DFN,"document",IEN,ACT)
"RTN","HMPEVNT",315,0)
 ;DE3944 update surgery based on reports
"RTN","HMPEVNT",316,0)
 S REPCAT=$$CATG^HMPDTIU($$GET1^DIQ(8925,IEN_",",".01","I"))
"RTN","HMPEVNT",317,0)
 I REPCAT="SR" D
"RTN","HMPEVNT",318,0)
 . N REPCASE S REPCASE=$$GET1^DIQ(8925,IEN_",","1701","I")
"RTN","HMPEVNT",319,0)
 . S REPCASE=$P(REPCASE,"Case #: ",2)
"RTN","HMPEVNT",320,0)
 . I REPCASE D POST(DFN,"surgery",REPCASE)
"RTN","HMPEVNT",321,0)
 ;DE3241 - If TIU update changes CWADF values, trigger patient update so change get in fresh. stream
"RTN","HMPEVNT",322,0)
 ;If this note has a parent document type of "CLINICAL WARNING", "CRISIS NOTE", or "ADVANCE DIRECTIVE"...
"RTN","HMPEVNT",323,0)
 ;parent document type is "Document Class"...
"RTN","HMPEVNT",324,0)
 ;AND this note's status is COMPLETED or AMENDED
"RTN","HMPEVNT",325,0)
 ;THEN this document may update the C, W, or D CWADF values and patient fresh. stream update needs to be triggered
"RTN","HMPEVNT",326,0)
 N DADTYPE,DADNAME,STATUS
"RTN","HMPEVNT",327,0)
 S DADTYPE=$$GET1^DIQ(8925,IEN_",",".04","I") Q:'DADTYPE  Q:$$GET1^DIQ(8925.1,DADTYPE_",",".04","I")'="DC"
"RTN","HMPEVNT",328,0)
 S DADNAME=$$GET1^DIQ(8925.1,DADTYPE_",",".01")
"RTN","HMPEVNT",329,0)
 I $S(DADNAME="CLINICAL WARNING":0,DADNAME="CRISIS NOTE":0,DADNAME="ADVANCE DIRECTIVE":0,1:1) Q
"RTN","HMPEVNT",330,0)
 D POST(DFN,"patient",DFN)
"RTN","HMPEVNT",331,0)
 Q
"RTN","HMPEVNT",332,0)
 ; Deprecated calls
"RTN","HMPEVNT",333,0)
DOCDEF ;
"RTN","HMPEVNT",334,0)
DOCITEM ;
"RTN","HMPEVNT",335,0)
USR ;
"RTN","HMPEVNT",336,0)
 Q
"RTN","HMPEVNT",337,0)
 ; *s68 - END
"RTN","HMPEVNT",338,0)
PSB(PSBIEN) ; -- HMP PSB EVENTS protocol listener (BCMA) /DE2818
"RTN","HMPEVNT",339,0)
 N IEN,DFN,ORPK,TYPE,ORIFN
"RTN","HMPEVNT",340,0)
 S IEN=$S($P($G(PSBIEN),",",2)'="":+$P(PSBIEN,",",2),$G(PSBIEN)="+1":+$G(PSBIEN(1)),1:+$G(PSBIEN))
"RTN","HMPEVNT",341,0)
 S DFN=+$G(^PSB(53.79,IEN,0)),ORPK=$P($G(^(.1)),U)
"RTN","HMPEVNT",342,0)
 Q:DFN<1  Q:ORPK<1  S TYPE=$S(ORPK["V":"IV",ORPK["U":5,1:"") Q:TYPE=""
"RTN","HMPEVNT",343,0)
 S ORIFN=$$ORDRNUM^PSSUTLA2(DFN,TYPE,+ORPK)  ;DE4382 get order number from PSSUTLA2. ICR 6426
"RTN","HMPEVNT",344,0)
 D:ORIFN POST(DFN,"med",ORIFN)
"RTN","HMPEVNT",345,0)
 Q
"RTN","HMPEVNT",346,0)
 ;
"RTN","HMPEVNT",347,0)
XU(IEN,ACT) ; -- XU USER ADD/CHANGE/TERMINATE option listener
"RTN","HMPEVNT",348,0)
 S IEN=+$G(IEN) Q:IEN<1
"RTN","HMPEVNT",349,0)
 D POSTX("user",IEN,$G(ACT))
"RTN","HMPEVNT",350,0)
 Q
"RTN","HMPEVNT",351,0)
 ;
"RTN","HMPEVNT",352,0)
POST(DFN,TYPE,ID,ACT) ; -- track updated patient data
"RTN","HMPEVNT",353,0)
 S DFN=+$G(DFN),TYPE=$G(TYPE),ID=$G(ID)
"RTN","HMPEVNT",354,0)
 Q:DFN<1  Q:TYPE=""  Q:ID=""   ;incomplete request
"RTN","HMPEVNT",355,0)
 Q:$G(^XTMP("HMP-off",TYPE))   ;domain turned 'off'
"RTN","HMPEVNT",356,0)
 Q:'$D(^HMP(800000,"AITEM",DFN))  ;patient not subscribed to
"RTN","HMPEVNT",357,0)
 N HMPDT S HMPDT="HMP-"_DT
"RTN","HMPEVNT",358,0)
 ;S ^XTMP(HMPDT,$$NEXT)=DFN_U_TYPE_U_ID_U_$G(ACT)
"RTN","HMPEVNT",359,0)
 N NODES
"RTN","HMPEVNT",360,0)
 D POST^HMPDJFS(DFN,TYPE,ID,$G(ACT),"",.NODES)
"RTN","HMPEVNT",361,0)
 Q
"RTN","HMPEVNT",362,0)
 ;
"RTN","HMPEVNT",363,0)
POSTX(TYPE,ID,ACT) ; -- track updated reference items
"RTN","HMPEVNT",364,0)
 S TYPE=$G(TYPE),ID=$G(ID)
"RTN","HMPEVNT",365,0)
 Q:TYPE=""  Q:ID=""            ;incomplete request
"RTN","HMPEVNT",366,0)
 Q:$G(^XTMP("HMP-off",TYPE))   ;domain turned 'off'
"RTN","HMPEVNT",367,0)
 N HMPDT S HMPDT="HMP-"_DT ;"HMPEF-"_DT
"RTN","HMPEVNT",368,0)
 ;S ^XTMP(HMPDT,$$NEXT)=U_TYPE_U_ID_U_$G(ACT)
"RTN","HMPEVNT",369,0)
 N NODES
"RTN","HMPEVNT",370,0)
 D POST^HMPDJFS("OPD",TYPE,ID,$G(ACT),"",.NODES)
"RTN","HMPEVNT",371,0)
 Q
"RTN","HMPEVNT",372,0)
 ;
"RTN","HMPEVNT",373,0)
NEXT() ; -- Return next sequential number in ^XTMP(HMPDT,n)
"RTN","HMPEVNT",374,0)
 L +^XTMP(HMPDT):5 ;I'$T ??
"RTN","HMPEVNT",375,0)
 N Y S Y=+$O(^XTMP(HMPDT,"A"),-1)+1
"RTN","HMPEVNT",376,0)
 I '$D(^XTMP(HMPDT,0)) S ^(0)=$$FMADD^XLFDT(DT,3)_U_DT_"^HMP Updates"
"RTN","HMPEVNT",377,0)
 L -^XTMP(HMPDT)
"RTN","HMPEVNT",378,0)
 Q Y
"RTN","HMPEVNT",379,0)
 ;
"RTN","HMPEVNT",380,0)
HTTP(URL,DFN,TYPE,ID) ; -- send message that TYPE/ID has been updated [not in use]
"RTN","HMPEVNT",381,0)
 N DIV,X,HMPX
"RTN","HMPEVNT",382,0)
 S DFN=+$G(DFN) Q:DFN<1  ;patient req'd
"RTN","HMPEVNT",383,0)
 S DIV=$P($$SITE^VASITE,U,3) ;station number
"RTN","HMPEVNT",384,0)
 S URL=$G(URL)_"?division="_DIV_"&dfn="_+$G(DFN)
"RTN","HMPEVNT",385,0)
 I $L($G(TYPE)) S URL=URL_"&type="_TYPE
"RTN","HMPEVNT",386,0)
 I $L($G(ID))   S URL=URL_"&id="_ID
"RTN","HMPEVNT",387,0)
 S ^XTMP("HMP",DFN,"HTTP")=$H
"RTN","HMPEVNT",388,0)
 S X=$$GETURL^XTHC10(URL,,"HMPX")
"RTN","HMPEVNT",389,0)
 ; I X>200 = ERROR
"RTN","HMPEVNT",390,0)
 Q
"RTN","HMPEVNT",391,0)
DGREG ; register a newly registered patient in eHMP during the initial registration - Sep 29, 2015 - Phil Burkhalter
"RTN","HMPEVNT",392,0)
 Q:'+$G(DFN)
"RTN","HMPEVNT",393,0)
 Q:'$D(^DPT(DFN,0))  ; Quit if patient is not in the patient file
"RTN","HMPEVNT",394,0)
 ;check the XPAR for HMP Auto Enrollment with newly registered patients, 
"RTN","HMPEVNT",395,0)
 ;if set to yes for automatically adding a new HMP subscription:
"RTN","HMPEVNT",396,0)
 ;add the patient to HMP(800000 and to a pt-select update. Only want to do an update for the one patient if possible.
"RTN","HMPEVNT",397,0)
 ;if set to no for automatically adding a new HMP subscrption:
"RTN","HMPEVNT",398,0)
 ;only do the pt-select update, DO NOT add to the HMP subscription
"RTN","HMPEVNT",399,0)
 S X=$$GET^XPAR("SYS","HMP AUTOSYNC REG")  ;X=1 Yes auto subscribe patient to HMP, X="" or X=0 No don't auto subscribe the patient to HMP
"RTN","HMPEVNT",400,0)
 I $G(X)'=1 D POSTX(DFN,"patient",DFN) Q  ; Do pt-select
"RTN","HMPEVNT",401,0)
 I $G(X)=1 D
"RTN","HMPEVNT",402,0)
 .Q:$D(^HMP(800000,"AITEM",DFN))  ; Quit if the patient has already been added to the eHMP subscription
"RTN","HMPEVNT",403,0)
 .S ARGS("command")="putPtSubscription",ARGS("localId")=$G(DFN)
"RTN","HMPEVNT",404,0)
 .;DE3327
"RTN","HMPEVNT",405,0)
 .I '$L($G(ARGS("server"))) S ARGS("server")=$P($G(^HMP(800000,1,0)),"^")  ; See comments at the top
"RTN","HMPEVNT",406,0)
 .D API^HMPDJFS(.RSLT,.ARGS) D POSTX(DFN,"patient",DFN)  ; add patient to HMP(800000 and if patient is added, add patient to the freshness stream
"RTN","HMPEVNT",407,0)
 .K ARGS,RSLT
"RTN","HMPEVNT",408,0)
 K X
"RTN","HMPEVNT",409,0)
 Q
"RTN","HMPP3I")
1^4
"RTN","HMPROS2")
1^15
"RTN","HMPROS3")
1^16
"RTN","HMPROS4")
1^17
"RTN","HMPROS7")
1^18
"RTN","HMPTFU2")
0^6^B41602003
"RTN","HMPTFU2",1,0)
HMPTFU2 ;ASMR/JCH,CK,DKK - Utilities for the Treating Facility file 391.91 ;Apr 27, 2016 10:35:07
"RTN","HMPTFU2",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1,2,3**;May 15, 2016;Build 2
"RTN","HMPTFU2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","HMPTFU2",4,0)
 ;
"RTN","HMPTFU2",5,0)
 ; External References          DBIA#
"RTN","HMPTFU2",6,0)
 ; -------------------          -----
"RTN","HMPTFU2",7,0)
 ; DIQ                          2056  ;DE6363 - JD - 8/23/16
"RTN","HMPTFU2",8,0)
 ;
"RTN","HMPTFU2",9,0)
 ; Reference to ^DGCN(391.91 is NOT currently supported; see ICR #2911 for an existing Private ICR between 
"RTN","HMPTFU2",10,0)
 ; Registration and CIRN that would meet the needs of this routine, or provide an example for a new ICR.
"RTN","HMPTFU2",11,0)
 ;
"RTN","HMPTFU2",12,0)
 Q
"RTN","HMPTFU2",13,0)
 ;
"RTN","HMPTFU2",14,0)
TFL(LIST,PT) ;for this PT [patient] (either DFN, ICN or EDIPI) return the list of treating facilities
"RTN","HMPTFU2",15,0)
 ; CALLED FROM RPC HMP LOCAL GET CORRESPONDINGIDS
"RTN","HMPTFU2",16,0)
 ; PT values :   Source ID^Source ID Type^Assigning Authority^Assigning Facility
"RTN","HMPTFU2",17,0)
 ;  ICN example:   1008520438V882204^NI^USVHA^200M
"RTN","HMPTFU2",18,0)
 ;  DFN example:   100000511^PI^USVHA^500
"RTN","HMPTFU2",19,0)
 ;  EDIPI example: 852043888^NI^USDOD^200DOD
"RTN","HMPTFU2",20,0)
 ;
"RTN","HMPTFU2",21,0)
 ; SOURCE ID:      SOURCE ID is the unique system assigned identifier at the identified facility for the
"RTN","HMPTFU2",22,0)
 ;                 patient record.  The value of SOURCE ID varies, depending on the source facility. 
"RTN","HMPTFU2",23,0)
 ;                 If SOURCE ID is from the Master Patient Index, the value is the Integration 
"RTN","HMPTFU2",24,0)
 ;                 Control Number (ICN).  If SOURCE ID is from the Department of Defense (DOD), the
"RTN","HMPTFU2",25,0)
 ;                 value is the Electronic Data Interchange Personal Identifier (EDIPI), which is 
"RTN","HMPTFU2",26,0)
 ;                 their equivalent of an ICN. In the future, SOURCE ID may come from other sources 
"RTN","HMPTFU2",27,0)
 ;                 due to additional initiatives.
"RTN","HMPTFU2",28,0)
 ;
"RTN","HMPTFU2",29,0)
 ; SOURCE ID TYPE: SOURCE ID TYPE defines the data source for the TREATING FACILITY LIST file (#391.91) entry.
"RTN","HMPTFU2",30,0)
 ;                 The source ID type is a reference to the HL7 Table 0203, Identifier Type, and the VA
"RTN","HMPTFU2",31,0)
 ;                 Identity Management user defined values: NI (National Identifier), PI (Patient Identifier)
"RTN","HMPTFU2",32,0)
 ; 
"RTN","HMPTFU2",33,0)
 ; Return:
"RTN","HMPTFU2",34,0)
 ; This will return the ICN and the list of treating facilities in the following format:
"RTN","HMPTFU2",35,0)
 ;   RESULT(n)=Id^IdType^AssigningFacility^AssigningAuthority^IdStatus
"RTN","HMPTFU2",36,0)
 ;     Examples:
"RTN","HMPTFU2",37,0)
 ;      RESULT(1)="1011232151V598646^NI^200M^A"
"RTN","HMPTFU2",38,0)
 ;      RESULT(2)="7168937^PI^91E3^USVHA^A"
"RTN","HMPTFU2",39,0)
 ;      RESULT(3)="852043888^NI^200DOD^USDOD^A"
"RTN","HMPTFU2",40,0)
 ;
"RTN","HMPTFU2",41,0)
 ; ID STATUS:      ID STATUS supports joint VA/DoD medical centers, Veteran's Record Management (VRM), and Virtual 
"RTN","HMPTFU2",42,0)
 ;                 Lifetime Electronic Record (VLER) initiatives.  This field allows the capture of resolved 
"RTN","HMPTFU2",43,0)
 ;                 duplicate events and exposes the related identifier and identifier status to the consuming 
"RTN","HMPTFU2",44,0)
 ;                 applications. A value of ""A"" indicates that the patient record is an active record on 
"RTN","HMPTFU2",45,0)
 ;                 the identifying system (e.g., VAMC or DoD). A value of "H" indicates that the patient 
"RTN","HMPTFU2",46,0)
 ;                 record was identified as part of a duplicate pair, has been merged, and is no longer active 
"RTN","HMPTFU2",47,0)
 ;                 on the identifying system (e.g., VAMC or DoD).
"RTN","HMPTFU2",48,0)
 ;
"RTN","HMPTFU2",49,0)
 N X,ICN,DFN,EDIPI,ASSIGN,ID,SITE,TYPE,SITEIEN,TFIEN
"RTN","HMPTFU2",50,0)
 ;
"RTN","HMPTFU2",51,0)
 ; Master Patient Index (MPI) must be installed to continue
"RTN","HMPTFU2",52,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T S LIST(1)="-1^MPI Not Installed" Q
"RTN","HMPTFU2",53,0)
 ;
"RTN","HMPTFU2",54,0)
 K LIST ; Clear "return" variable
"RTN","HMPTFU2",55,0)
 ;
"RTN","HMPTFU2",56,0)
 ; what do we have
"RTN","HMPTFU2",57,0)
 S TYPE=$P(PT,"^",2) ; SOURCE ID TYPE
"RTN","HMPTFU2",58,0)
 S SITE=$P(PT,"^",4) ; 
"RTN","HMPTFU2",59,0)
 S ID=$P(PT,"^")
"RTN","HMPTFU2",60,0)
 S ASSIGN=$P(PT,"^",3)
"RTN","HMPTFU2",61,0)
 ; check input data
"RTN","HMPTFU2",62,0)
 I ID']"" S LIST(1)="-1^Id is not defined." Q
"RTN","HMPTFU2",63,0)
 I TYPE'="NI",TYPE'="PI" S LIST(1)="-1^Invalid Id Type." Q
"RTN","HMPTFU2",64,0)
 I ASSIGN'="USVHA",ASSIGN'="USDOD" S LIST(1)="-1^Invalid Assigning Authority." Q
"RTN","HMPTFU2",65,0)
 I SITE']"" S LIST(1)="-1^Missing Assigning Facility." Q
"RTN","HMPTFU2",66,0)
 ; find the ien for the station number
"RTN","HMPTFU2",67,0)
 S SITEIEN=$$FIND1^DIC(4,"","X",SITE,"D")
"RTN","HMPTFU2",68,0)
 I 'SITEIEN S LIST(1)="-1^Assigning Facility is not defined in database." Q
"RTN","HMPTFU2",69,0)
 I TYPE="PI",ASSIGN="USVHA" S DFN=ID
"RTN","HMPTFU2",70,0)
 I TYPE="NI",ASSIGN="USVHA",SITE="200M" S ICN=ID
"RTN","HMPTFU2",71,0)
 I TYPE="NI",ASSIGN="USDOD",SITE="200DOD" S EDIPI=ID
"RTN","HMPTFU2",72,0)
 I $D(ICN) S DFN=$$GETDFN^MPIF001(ICN) D  Q:$D(LIST(1))
"RTN","HMPTFU2",73,0)
 . I +DFN<0 S LIST(1)="-1^ICN is not known" Q
"RTN","HMPTFU2",74,0)
 . S SITEIEN=$$IEN^XUAF4($P($$SITE^VASITE,"^",3))
"RTN","HMPTFU2",75,0)
 ;
"RTN","HMPTFU2",76,0)
 I $D(DFN) S ICN=$$GETICN^MPIF001(DFN)
"RTN","HMPTFU2",77,0)
 ; DFN should be defined, but ICN may not.
"RTN","HMPTFU2",78,0)
 ;Use new xref AISS appropriately to retrieve DFN from EDIPI
"RTN","HMPTFU2",79,0)
 I $D(EDIPI)=""!(ASSIGN="")!(TYPE="")!(SITEIEN="") S LIST(1)="-1^Insufficient data" Q
"RTN","HMPTFU2",80,0)
 I $D(EDIPI),'$D(^DGCN(391.91,"AISS",EDIPI,ASSIGN,TYPE,SITEIEN)) D  Q
"RTN","HMPTFU2",81,0)
 . S LIST(1)="-1^EDIPI Record is unknown at this facility"
"RTN","HMPTFU2",82,0)
 I $D(EDIPI),$D(^DGCN(391.91,"AISS",EDIPI,ASSIGN,TYPE,SITEIEN)) D
"RTN","HMPTFU2",83,0)
 .S EN=$O(^DGCN(391.91,"AISS",EDIPI,ASSIGN,TYPE,SITEIEN,0))
"RTN","HMPTFU2",84,0)
 .S DFN=$P($G(^DGCN(391.91,EN,0)),"^")
"RTN","HMPTFU2",85,0)
 ;
"RTN","HMPTFU2",86,0)
 ; if ICN is not defined, it is OK, but DFN should be defined
"RTN","HMPTFU2",87,0)
 ; bad input, such as Id^NI^USVHA^123
"RTN","HMPTFU2",88,0)
 I '$G(DFN) S LIST(1)="-1^Invalid input" Q
"RTN","HMPTFU2",89,0)
 ; check DFN and Site to be matching an entry in file #391.91
"RTN","HMPTFU2",90,0)
 I '$O(^DGCN(391.91,"APAT",DFN,SITEIEN,0)) D  Q
"RTN","HMPTFU2",91,0)
 . S LIST(1)="-1^Id as '"_ID_"'"_" is not in database"
"RTN","HMPTFU2",92,0)
 ; DFN should be defined, but ICN may not.
"RTN","HMPTFU2",93,0)
 S X=$$QUERYTF($P($G(ICN),"V"),"LIST")
"RTN","HMPTFU2",94,0)
 I $P(X,U)="1" S LIST(1)="-1"_U_$P(X,U,2) Q
"RTN","HMPTFU2",95,0)
 Q
"RTN","HMPTFU2",96,0)
 ;
"RTN","HMPTFU2",97,0)
GETICN(EDIPI) ;return the ICN when EDIPI is passed
"RTN","HMPTFU2",98,0)
 N EN,DFN,ICN,IEN
"RTN","HMPTFU2",99,0)
 S IEN=$$IEN^XUAF4("200DOD")
"RTN","HMPTFU2",100,0)
 I 'IEN Q "-1^Unknown Assigning Facility."
"RTN","HMPTFU2",101,0)
 I '$D(^DGCN(391.91,"ASCR",EDIPI,IEN)) Q "-1^EDIPI Record is unknown at this facility"
"RTN","HMPTFU2",102,0)
 I $D(^DGCN(391.91,"ASCR",EDIPI,IEN)) D
"RTN","HMPTFU2",103,0)
 .S EN=$O(^DGCN(391.91,"ASCR",EDIPI,$$IEN^XUAF4("200DOD"),""))
"RTN","HMPTFU2",104,0)
 .S DFN=$P($G(^DGCN(391.91,EN,0)),"^")
"RTN","HMPTFU2",105,0)
 .I DFN'="" S ICN=$$GETICN^MPIF001(DFN)
"RTN","HMPTFU2",106,0)
 .I DFN="" S ICN="-1^No Site Record associated with this entry"
"RTN","HMPTFU2",107,0)
 Q ICN
"RTN","HMPTFU2",108,0)
 ;
"RTN","HMPTFU2",109,0)
QUERYTF(PAT,ARY) ;a query for Treating Facility.
"RTN","HMPTFU2",110,0)
 ;INPUT   PAT - The patient's ICN
"RTN","HMPTFU2",111,0)
 ;        ARY - The array in which to return the Treating facility info.
"RTN","HMPTFU2",112,0)
 ;OUTPUT  A list of the Treating Facilities in the array provided from
"RTN","HMPTFU2",113,0)
 ;        the parameter.  It will be in the structure of x(1), x(2) etc.
"RTN","HMPTFU2",114,0)
 ;  Ex  X(1)=<ID> ^ <ID TYPE> ^ <Assigning Authority> ^ <Assigning Facility> ^ <ID Status>
"RTN","HMPTFU2",115,0)
 ;
"RTN","HMPTFU2",116,0)
 ; This is also a function call.  If there is an error then "1^error description" will be returned. 
"RTN","HMPTFU2",117,0)
 ; If no data is found the array will not be populated and "1^error description" will be returned.
"RTN","HMPTFU2",118,0)
 ;
"RTN","HMPTFU2",119,0)
 N PDFN,HMPER,LP,CTR
"RTN","HMPTFU2",120,0)
 ;
"RTN","HMPTFU2",121,0)
 ; ICN is not required
"RTN","HMPTFU2",122,0)
 I ('$D(ARY)) S HMPER="1^Parameter missing." G QUERYTFQ
"RTN","HMPTFU2",123,0)
 S HMPER=0,CTR=1
"RTN","HMPTFU2",124,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T G QUERYTFQ
"RTN","HMPTFU2",125,0)
 S PDFN=$G(DFN)
"RTN","HMPTFU2",126,0)
 I '$G(PDFN) S HMPER="1^DFN is not defined." G QUERYTFQ
"RTN","HMPTFU2",127,0)
 ;SET FIRST ENTRY TO BE THE ICN - FULL ICN - PAT IS NOT THE ICN
"RTN","HMPTFU2",128,0)
 S @ARY@(CTR)=$$GETICN^MPIF001(PDFN)_"^NI^200M^USVHA^A"
"RTN","HMPTFU2",129,0)
 ;**856 - MVI 1371 (ckn)
"RTN","HMPTFU2",130,0)
 ;Loop through all TFIENs for site
"RTN","HMPTFU2",131,0)
 ;F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PDFN,LP)) Q:'LP  S TFIEN=$O(^(LP,"")) D SET(TFIEN,ARY,.CTR)
"RTN","HMPTFU2",132,0)
 F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PDFN,LP)) Q:'LP  D
"RTN","HMPTFU2",133,0)
 .S TFIEN=0 F  S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,LP,TFIEN)) Q:'TFIEN  D
"RTN","HMPTFU2",134,0)
 ..D SET(TFIEN,ARY,.CTR)
"RTN","HMPTFU2",135,0)
 I $D(@ARY)'>9 S HMPER="1^Could not find Treating Facilities"
"RTN","HMPTFU2",136,0)
QUERYTFQ Q HMPER
"RTN","HMPTFU2",137,0)
 ;
"RTN","HMPTFU2",138,0)
SET(TFIEN,ARY,CTR) ;This sets the array with the treating facility list.
"RTN","HMPTFU2",139,0)
 ;  Ex  ARY(1)=<ID> ^ <ID TYPE> ^ <Assigning Facility> ^ <Assigning Authority> ^ <ID Status>
"RTN","HMPTFU2",140,0)
 N DGCN,INSTIEN,SOURCE,EN,SDFN,STATUS,SITEN,ID,IDTYPE,SITE,ASSAUTH,FOUND,NODE,NODE0,NODE2,STNNUM
"RTN","HMPTFU2",141,0)
 S DGCN(0)=$G(^DGCN(391.91,TFIEN,0)),SITEN=""
"RTN","HMPTFU2",142,0)
 ;
"RTN","HMPTFU2",143,0)
 S INSTIEN=$P($G(DGCN(0)),"^",2) ;            TREATING FACILITY LIST (#391.91) INSTITUTION field (#.02)
"RTN","HMPTFU2",144,0)
 I INSTIEN'="" S SITEN=$$STA^XUAF4(INSTIEN) ; STATION from Institution IEN
"RTN","HMPTFU2",145,0)
 S ID=$P(DGCN(0),"^") ;                       ID=Patient DFN field (#.01)
"RTN","HMPTFU2",146,0)
 S STNNUM=SITEN
"RTN","HMPTFU2",147,0)
 ;
"RTN","HMPTFU2",148,0)
 S NODE2=$G(^DGCN(391.91,TFIEN,2))
"RTN","HMPTFU2",149,0)
 S SDFN=$P(NODE2,"^",2) ; SDFN="SOURCE ID"
"RTN","HMPTFU2",150,0)
 S STATUS=$P(NODE2,"^",3) ; STATUS="IDENTIFIER STATUS"
"RTN","HMPTFU2",151,0)
 S ASSAUTH=$P(NODE2,"^") ; Assigning Authority
"RTN","HMPTFU2",152,0)
 ;
"RTN","HMPTFU2",153,0)
 S NODE0=$G(^DGCN(391.91,TFIEN,0))
"RTN","HMPTFU2",154,0)
 S IDTYPE=$P(NODE0,"^",9) ; SOURCE ID TYPE
"RTN","HMPTFU2",155,0)
 ;
"RTN","HMPTFU2",156,0)
 I SITEN="200DOD"!(SITEN["200N") S IDTYPE="NI"
"RTN","HMPTFU2",157,0)
 I SITEN="200DOD" S ASSAUTH="USDOD"
"RTN","HMPTFU2",158,0)
 I IDTYPE="" S IDTYPE="PI"
"RTN","HMPTFU2",159,0)
 I ASSAUTH="" S ASSAUTH="USVHA"
"RTN","HMPTFU2",160,0)
 I SITEN["200N"&(IDTYPE="NI")&(ASSAUTH="USVHA") S ASSAUTH=""
"RTN","HMPTFU2",161,0)
 I IDTYPE="PI" S SITEN=$$TF2SITEN(TFIEN) Q:(SITEN=""&(STNNUM'="742V1"))
"RTN","HMPTFU2",162,0)
 ;
"RTN","HMPTFU2",163,0)
 ; If VA Internal Patient ID, get site hash from domain associated with Treating Facility
"RTN","HMPTFU2",164,0)
 S NODE0=$G(^DGCN(391.91,TFIEN,0))
"RTN","HMPTFU2",165,0)
 S NODE2=$G(^DGCN(391.91,TFIEN,2))
"RTN","HMPTFU2",166,0)
 S SDFN=$P(NODE2,"^",2),STATUS=$P(NODE2,"^",3),IDTYPE=$P(NODE0,"^",9)
"RTN","HMPTFU2",167,0)
 ; DE2345 - MBS 9/15/2015; Only return active entries
"RTN","HMPTFU2",168,0)
 I STATUS'="A" Q
"RTN","HMPTFU2",169,0)
 S ASSAUTH=$P(NODE2,"^")
"RTN","HMPTFU2",170,0)
 I SITEN="200DOD"!(SITEN["200N") S IDTYPE="NI"
"RTN","HMPTFU2",171,0)
 I SITEN="200DOD" S ASSAUTH="USDOD"
"RTN","HMPTFU2",172,0)
 I IDTYPE="" S IDTYPE="PI"
"RTN","HMPTFU2",173,0)
 I ASSAUTH="" S ASSAUTH="USVHA"
"RTN","HMPTFU2",174,0)
 I SITEN["200N"&(IDTYPE="NI")&(ASSAUTH="USVHA") S ASSAUTH=""
"RTN","HMPTFU2",175,0)
 I SDFN'="" S CTR=CTR+1,@ARY@(CTR)=SDFN_"^"_IDTYPE_"^"_SITEN_"^"_ASSAUTH_"^"_STATUS_"^"_STNNUM,FOUND=1
"RTN","HMPTFU2",176,0)
 Q
"RTN","HMPTFU2",177,0)
TF2SITEN(TFIEN) ;Find the DOMAIN associated with the TREATING FACILITY and return the station number.
"RTN","HMPTFU2",178,0)
 ;Currently, our test systems' station numbers are not set up for local DOMAINs. This would result in these
"RTN","HMPTFU2",179,0)
 ;entries failing all the time, thus breaking existing behavior. For the time being, we will default to
"RTN","HMPTFU2",180,0)
 ;the old behavior if we cannot locate a station number as a temporary measure. In the future, we need to
"RTN","HMPTFU2",181,0)
 ;fix the test systems to set up the station numbers correctly, and then change this code to return
"RTN","HMPTFU2",182,0)
 ;an empty string if the DOMAIN could not be resolved.
"RTN","HMPTFU2",183,0)
 S SITEN=""
"RTN","HMPTFU2",184,0)
 Q:'+$G(TFIEN) ""
"RTN","HMPTFU2",185,0)
 Q:'$D(^DGCN(391.91,TFIEN)) ""
"RTN","HMPTFU2",186,0)
 ;Get station number from Institution file (pointed to from Treating Facility List)
"RTN","HMPTFU2",187,0)
 N INSTNUM,STNNUM,DONE,I
"RTN","HMPTFU2",188,0)
 S INSTNUM=$P($G(^DGCN(391.91,TFIEN,0)),U,2) Q:'+INSTNUM SITEN
"RTN","HMPTFU2",189,0)
 S STNNUM=$$GET1^DIQ(4,INSTNUM_",",99) ;ICR 2056
"RTN","HMPTFU2",190,0)
 Q:'+STNNUM SITEN
"RTN","HMPTFU2",191,0)
 ;DE2345 - MBS 9/15/2015; Do not return entries with station numbers=+200
"RTN","HMPTFU2",192,0)
 I STNNUM?1"200".A Q ""
"RTN","HMPTFU2",193,0)
 ;Domain file doesn't have an x-ref on station number, so we have to brute-force it
"RTN","HMPTFU2",194,0)
 S (I,DONE)=0 F  S I=$O(^DIC(4.2,I)) Q:'+I  D  Q:DONE
"RTN","HMPTFU2",195,0)
 . I $P(^DIC(4.2,I,0),U,13)=STNNUM S SITEN=$$SYS^HMPUTILS($P(^DIC(4.2,I,0),U)),DONE=1
"RTN","HMPTFU2",196,0)
 Q SITEN
"RTN","HMPTFU2",197,0)
 ;
"RTN","HMPTIU")
1^14
"RTN","HMPUPD")
1^7
"RTN","HMPWB5A")
0^8^B33356826
"RTN","HMPWB5A",1,0)
HMPWB5A ;JD/CNP,ASMR/CPC - Write back entry points for Notes, and Encounters;Aug 12, 2016@08:44:47
"RTN","HMPWB5A",2,0)
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**2,3**;Sep 01, 2011;Build 2
"RTN","HMPWB5A",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","HMPWB5A",4,0)
 ;Continued from HMPWB5.
"RTN","HMPWB5A",5,0)
 ;
"RTN","HMPWB5A",6,0)
 ; External References          DBIA#
"RTN","HMPWB5A",7,0)
 ; -------------------          -----
"RTN","HMPWB5A",8,0)
 ; FREQ^LEXU                    5679   ;DE6363 - JD - 8/23/16
"RTN","HMPWB5A",9,0)
 ;
"RTN","HMPWB5A",10,0)
 ;DE6100 - Change call to supported RPC and general code tidy. CPC 8/12/2016
"RTN","HMPWB5A",11,0)
 ;
"RTN","HMPWB5A",12,0)
 Q
"RTN","HMPWB5A",13,0)
 ;
"RTN","HMPWB5A",14,0)
PCELST(TYPE,INPUT,OUTPUT,ERR) ;
"RTN","HMPWB5A",15,0)
 ;TYPE   = Encounter Type (e.g. CPT)
"RTN","HMPWB5A",16,0)
 ;INPUT  = Input array containing data for TYPE (the content varies based on what TYPE is)
"RTN","HMPWB5A",17,0)
 ;OUTPUT = Output array
"RTN","HMPWB5A",18,0)
 N CNT,HMP1,HMP2,HMPC,HMPD,HMPE,HMPF,HMPN,HMPP,HMPR,HMPS,HMPT,I,J,K,L
"RTN","HMPWB5A",19,0)
 S CNT=6,HMP1=0
"RTN","HMPWB5A",20,0)
 F  S HMP1=$O(INPUT(HMP1)) Q:HMP1'=+HMP1  Q:$G(ERR)'=""  D
"RTN","HMPWB5A",21,0)
 .S HMP2=INPUT(HMP1),CNT=CNT+1,ERR="",HMPT=""
"RTN","HMPWB5A",22,0)
 .;
"RTN","HMPWB5A",23,0)
 .I TYPE="CPT" D
"RTN","HMPWB5A",24,0)
 ..;HMP2=CPT code^Modifier1 code;Modifier2 code;...^Quantity^Provider name^Comment
"RTN","HMPWB5A",25,0)
 ..S HMPN=$$UP^XLFSTR($P(HMP2,U))
"RTN","HMPWB5A",26,0)
 ..S HMPD=$O(^ICPT("B",HMPN,""))
"RTN","HMPWB5A",27,0)
 ..I HMPD'=+HMPD S ERR="Invalid CPT code: "_$P(HMP2,U) Q
"RTN","HMPWB5A",28,0)
 ..S HMPP=$$UP^XLFSTR($P(HMP2,U,4))
"RTN","HMPWB5A",29,0)
 ..S HMPP=$O(^VA(200,"B",HMPP,""))
"RTN","HMPWB5A",30,0)
 ..I HMPP'=+HMPP S ERR="Invalid provider name: "_$P(HMP2,U,4) Q
"RTN","HMPWB5A",31,0)
 ..S HMPC=$P(HMP2,U,2),L=0
"RTN","HMPWB5A",32,0)
 ..F I=1:1:$L(HMPC,";") S J=$P(HMPC,";",I) I J'="" D  Q:$G(ERR)'=""
"RTN","HMPWB5A",33,0)
 ...S K=$O(^DIC(81.3,"B",J,""))
"RTN","HMPWB5A",34,0)
 ...I K'=+K S ERR="Invalid CPT modifier code: "_J Q
"RTN","HMPWB5A",35,0)
 ...S L=L+1,HMPT=HMPT_";"_J_"/"_K
"RTN","HMPWB5A",36,0)
 ..I $G(ERR)'="" Q
"RTN","HMPWB5A",37,0)
 ..I $G(HMPT)'="" S HMPT=L_HMPT
"RTN","HMPWB5A",38,0)
 ..S HMPE=$P(HMP2,U,5),I=$P($G(^ICPT(HMPD,0)),U,2)
"RTN","HMPWB5A",39,0)
 ..S OUTPUT(CNT)="CPT+^"_HMPN_"^^"_I_U_$P(HMP2,U,3)_U_HMPP_"^^^"_HMPT_U_HMP1_U
"RTN","HMPWB5A",40,0)
 ..S CNT=CNT+1
"RTN","HMPWB5A",41,0)
 ..S OUTPUT(CNT)="COM^"_HMP1_U_$S(HMPE'="":HMPE,1:"@")
"RTN","HMPWB5A",42,0)
 .;
"RTN","HMPWB5A",43,0)
 .I TYPE="HF" D
"RTN","HMPWB5A",44,0)
 ..;HMP2=Health factor name^Level/severity code^Comment
"RTN","HMPWB5A",45,0)
 ..S HMPN=$$UP^XLFSTR($P(HMP2,U))
"RTN","HMPWB5A",46,0)
 ..S HMPD=$O(^AUTTHF("B",HMPN,""))
"RTN","HMPWB5A",47,0)
 ..I HMPD'=+HMPD S ERR="Invalid health factor name: "_$P(HMP2,U) Q
"RTN","HMPWB5A",48,0)
 ..S HMPR=$$UP^XLFSTR($P(HMP2,U,2))
"RTN","HMPWB5A",49,0)
 ..I (",H,M,MO,")'[(","_HMPR_",") S ERR="Invalid health factor level code: "_$P(HMP2,U,2) Q
"RTN","HMPWB5A",50,0)
 ..S HMPE=$P(HMP2,U,3)
"RTN","HMPWB5A",51,0)
 ..S OUTPUT(CNT)="HF+^"_HMPD_"^^"_HMPN_U_HMPR_"^^^^^"_HMP1
"RTN","HMPWB5A",52,0)
 ..S CNT=CNT+1
"RTN","HMPWB5A",53,0)
 ..S OUTPUT(CNT)="COM^"_HMP1_U_$S(HMPE'="":HMPE,1:"@")
"RTN","HMPWB5A",54,0)
 .;
"RTN","HMPWB5A",55,0)
 .I TYPE="PED" D
"RTN","HMPWB5A",56,0)
 ..;HMP2=Education name^Level of understanding code^Comment
"RTN","HMPWB5A",57,0)
 ..S HMPN=$$UP^XLFSTR($P(HMP2,U))
"RTN","HMPWB5A",58,0)
 ..S HMPD=$O(^AUTTEDT("B",HMPN,""))
"RTN","HMPWB5A",59,0)
 ..I HMPD'=+HMPD S ERR="Invalid education name: "_$P(HMP2,U) Q
"RTN","HMPWB5A",60,0)
 ..S HMPR=$P(HMP2,U,2)
"RTN","HMPWB5A",61,0)
 ..I (",1,2,3,4,5,")'[(","_HMPR_",") S ERR="Invalid education level code: "_$P(HMP2,U,2) Q
"RTN","HMPWB5A",62,0)
 ..S HMPE=$P(HMP2,U,3)
"RTN","HMPWB5A",63,0)
 ..S OUTPUT(CNT)="PED+^"_HMPD_"^^"_HMPN_U_HMPR_"^^^^^"_HMP1
"RTN","HMPWB5A",64,0)
 ..S CNT=CNT+1
"RTN","HMPWB5A",65,0)
 ..S OUTPUT(CNT)="COM^"_HMP1_U_$S(HMPE'="":HMPE,1:"@")
"RTN","HMPWB5A",66,0)
 .;
"RTN","HMPWB5A",67,0)
 .I TYPE="POV" D
"RTN","HMPWB5A",68,0)
 ..;HMP2=Diag. code^Search term^EXACT "problem list items" text^Add to problem list^Comment
"RTN","HMPWB5A",69,0)
 ..S HMPF=$S(HMP1=1:1,1:0)  ;Primary diagnosis flag
"RTN","HMPWB5A",70,0)
 ..S HMPE=$P(HMP2,U,5)      ;Comment
"RTN","HMPWB5A",71,0)
 ..S HMPC=$P(HMP2,U)
"RTN","HMPWB5A",72,0)
 ..S HMPD=$O(^ICD9("AB",HMPC_" ",""))
"RTN","HMPWB5A",73,0)
 ..I HMPD'=+HMPD S ERR="Invalid diagnosis code: "_HMPC
"RTN","HMPWB5A",74,0)
 ..I $P(HMP2,U,2)="",$P(HMP2,U,3)="" S ERR="For POV, either 'search term' or 'problem list items' needs to be present" Q
"RTN","HMPWB5A",75,0)
 ..S HMPD=$P(HMP2,U,2)
"RTN","HMPWB5A",76,0)
 ..I HMPD'="" D  Q:$G(ERR)'=""   ;Search term
"RTN","HMPWB5A",77,0)
 ...;Invoke RPC to make sure we are not returning too many search results
"RTN","HMPWB5A",78,0)
 ...S HMPP=$$FREQ^LEXU(HMPD) ;DE6100 Change RPC to supported one; ICR #5679
"RTN","HMPWB5A",79,0)
 ...I HMPP>5000 S ERR="Your search '"_HMPD_"' matched "_HMPP_" records, that's too many!" Q
"RTN","HMPWB5A",80,0)
 ...I HMPP=0 S ERR="No matches found for your search term: "_HMPD Q
"RTN","HMPWB5A",81,0)
 ...;Invoke the existing RPC: ORWPCE4 LEX; to get more info
"RTN","HMPWB5A",82,0)
 ...D LEX^ORWPCE4(.HMPP,HMPD,"ICD",$$NOW^XLFDT,0,1)
"RTN","HMPWB5A",83,0)
 ...I +$G(HMPP(1))=-1 S ERR="No matches found for your search term: "_HMPD Q
"RTN","HMPWB5A",84,0)
 ...S HMPN=0,HMPR=""
"RTN","HMPWB5A",85,0)
 ...F  S HMPN=$O(HMPP(HMPN)) Q:HMPN'=+HMPN  D  Q:$G(HMPR)'=""
"RTN","HMPWB5A",86,0)
 ....I $P(HMPP(HMPN),U,6)=HMPC S HMPR=1 Q  ; Found a matching diagnosis code
"RTN","HMPWB5A",87,0)
 ...I HMPR="" S ERR="Diagnosis code "_HMPC_" doesn't match the search term: "_HMPD Q
"RTN","HMPWB5A",88,0)
 ...S HMPS=HMPP(HMPN),HMPS=$P(HMPS,U,2)_" ("_$P(HMPS,U,3)_" "_$P(HMPS,U,4)_")"
"RTN","HMPWB5A",89,0)
 ...S HMPT=$S($P(HMP2,U,4)=1:$P(OUTPUT(6),U,2),1:"")  ;Encounter provider IEN
"RTN","HMPWB5A",90,0)
 ...S OUTPUT(CNT)="POV+^"_HMPC_"^^"_HMPS_U_HMPF_U_HMPT_U_+$P(HMP2,U,4)_"^^^"_HMP1
"RTN","HMPWB5A",91,0)
 ...S CNT=CNT+1
"RTN","HMPWB5A",92,0)
 ...S OUTPUT(CNT)="COM^"_HMP1_U_$S(HMPE'="":HMPE,1:"@")
"RTN","HMPWB5A",93,0)
 ..I HMPD="" S HMPD=$P(HMP2,U,3) D  Q:$G(ERR)'=""   ;Problem list item
"RTN","HMPWB5A",94,0)
 ...S OUTPUT(CNT)="POV+^"_HMPC_"^Problem List Items^"_HMPD_U_HMPF_"^^0^^^"_HMP1
"RTN","HMPWB5A",95,0)
 ...S CNT=CNT+1
"RTN","HMPWB5A",96,0)
 ...S OUTPUT(CNT)="COM^"_HMP1_U_$S(HMPE'="":HMPE,1:"@")
"RTN","HMPWB5A",97,0)
 .;
"RTN","HMPWB5A",98,0)
 .I TYPE="SK" D  ;Skin Tests
"RTN","HMPWB5A",99,0)
 ..;HMP2=Skin test name^Result code^Reading^Comment
"RTN","HMPWB5A",100,0)
 ..S HMPN=$$UP^XLFSTR($P(HMP2,U))
"RTN","HMPWB5A",101,0)
 ..S HMPD=$O(^AUTTSK("B",HMPN,""))
"RTN","HMPWB5A",102,0)
 ..I HMPD'=+HMPD S ERR="Invalid skin test name: "_$P(HMP2,U) Q
"RTN","HMPWB5A",103,0)
 ..S HMPR=$$UP^XLFSTR($P(HMP2,U,2))
"RTN","HMPWB5A",104,0)
 ..I (",D,N,O,P,")'[(","_HMPR_",") S ERR="Invalid skin test result code: "_$P(HMP2,U,2) Q
"RTN","HMPWB5A",105,0)
 ..S HMPE=$P(HMP2,U,4)
"RTN","HMPWB5A",106,0)
 ..S OUTPUT(CNT)="SK+^"_HMPD_"^^"_HMPN_U_HMPR_"^^"_$P(HMP2,U,3)_"^^^"_HMP1
"RTN","HMPWB5A",107,0)
 ..S CNT=CNT+1
"RTN","HMPWB5A",108,0)
 ..S OUTPUT(CNT)="COM^"_HMP1_U_$S(HMPE'="":HMPE,1:"@")
"RTN","HMPWB5A",109,0)
 .;
"RTN","HMPWB5A",110,0)
 .I TYPE="XAM" D  ;Exams
"RTN","HMPWB5A",111,0)
 ..;HMP2=Exam name^Result code^Comment
"RTN","HMPWB5A",112,0)
 ..S HMPN=$$UP^XLFSTR($P(HMP2,U))
"RTN","HMPWB5A",113,0)
 ..S HMPD=$O(^AUTTEXAM("B",HMPN,""))
"RTN","HMPWB5A",114,0)
 ..I HMPD'=+HMPD S ERR="Invalid exam name: "_$P(HMP2,U) Q
"RTN","HMPWB5A",115,0)
 ..S HMPR=$$UP^XLFSTR($P(HMP2,U,2))
"RTN","HMPWB5A",116,0)
 ..I (",A,N,")'[(","_HMPR_",") S ERR="Invalid exam result code: "_$P(HMP2,U,2) Q
"RTN","HMPWB5A",117,0)
 ..S HMPE=$P(HMP2,U,3)
"RTN","HMPWB5A",118,0)
 ..S OUTPUT(CNT)="XAM+^"_HMPD_"^^"_HMPN_U_HMPR_"^^^^^"_HMP1
"RTN","HMPWB5A",119,0)
 ..S CNT=CNT+1
"RTN","HMPWB5A",120,0)
 ..S OUTPUT(CNT)="COM^"_HMP1_U_$S(HMPE'="":HMPE,1:"@")
"RTN","HMPWB5A",121,0)
 Q
"VER")
8.0^22.0
**END**
**END**
