ext.set('repo', uploadRepo)
ext.set('groupId', 'us.vistacore.ehmp')
ext.set('artifactId', 'asu')
ext.set('repoVersion', getRepoVersion())
ext.set('commitCountDir', projectDir)

buildscript {
    ext {
        springBootVersion = '1.2.3.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:0.5.0.RELEASE"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

// Disabled tasks
distZip.enabled = false
distTar.enabled = false

jar {
    baseName = 'asu'
    version = '0.0.1'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

springBoot {
    mainClass = "us.vistacore.asu.Application"
}

// The BOM version chosen below for Maven will determine the version of spring-boot and Tomcat
// To change those versions its only necessary to update the BOM version below
dependencyManagement {
  imports {
    mavenBom 'io.spring.platform:platform-bom:2.0.4.RELEASE'
  }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    compile 'org.springframework.data:spring-data-commons'
    compile 'org.springframework:spring-tx'
    compile "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"

    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.2.0'
    compile (group: 'com.codahale.metrics', name: 'metrics-json', version: '3.0.1')
    compile group: 'org.apache.lucene', name: 'lucene-analyzers-common', version: '4.0.0'
    compile group: 'org.apache.lucene', name: 'lucene-queryparser', version: '4.0.0'
    compile group: 'org.apache.lucene', name: 'lucene-core', version: '4.0.0'
    
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-smile', version: "${versions.jacksonVersion}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${versions.jacksonVersion}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${versions.jacksonVersion}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "${versions.jacksonVersion}"
    compile "commons-collections:commons-collections:3.2.1"
    compile "joda-time:joda-time:${versions.jodaTimeVersion}"
    compile("org.apache.poi:poi:3.10-FINAL")
    compile("org.apache.poi:poi-ooxml:3.10-FINAL")

    compile("com.google.guava:guava:14.0.1")
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

def repoCommitCountClosure = {
  def proc = ['sh', '-c', "git rev-list --count --first-parent HEAD ${->commitCountDir}"].execute()
  return proc.text.trim()
}

def repoCommitCount = "${->repoCommitCountClosure()}"
def asuZipVersion = "${->repoVersion + '.' + repoCommitCount}"
version = ""
ext.set('version', asuZipVersion)

task zipAsu(type: Zip) {
  extension = 'zip'
  baseName = 'asu'
  version = asuZipVersion
  destinationDir buildDir
  from ("${buildDir}/libs/asu.war")
}
zipAsu.dependsOn bootRepackage, assemble
bootRepackage.dependsOn = []
bootRepackage.mustRunAfter war
assemble.dependsOn = [bootRepackage, war]

artifacts {
  archives zipAsu
}

configurations.archives.with {
  artifacts.remove artifacts.find { it.archiveTask.is distZip }
  artifacts.remove artifacts.find { it.archiveTask.is distTar }
}
