HMPCORD3 ;;SLC/AGP - Process Order Request from AVIVA System ; 1/4/13
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 49
 ;
 ;
 Q
 ;
BLDDIAL(ORDIALOG,DG,DIAL) ;
 D GETDLG^ORCD(DIAL)
 Q
 ;
BLDROUTE(HMPROUTE) ;
 N IEN,NODE
 S IEN=0 F  S IEN=$O(^PS(51.2,IEN)) Q:IEN'>0  D
 .;I $L($G(^PS(51.2,IEN,1)))'="" Q
 .S NODE=$G(^PS(51.2,IEN,0))
 .S HMPROUTE($P(NODE,U))=IEN_U_$S($P(NODE,U)'="":$P(NODE,U),1:$P(NODE,U))
 .I $P(NODE,U,2)'="" S HMPROUTE($P(NODE,U,2))=IEN
 .I $P(NODE,U,3)'="" S HMPROUTE($P(NODE,U,3))=IEN
 Q
 ;
BLDVALS(IN,OUT,ERROR) ;
 N NUM,LAST,SPACES,STR,X
 S LAST=""
 S NUM=$L(IN,";")
 F X=1:1:NUM D
 .;W !,X_" "_$P(IN,":",X)
 .S STR=$P(IN,";",X)
 .I X=1 S OUT(STR)="" S LAST=STR Q
 .I X=NUM S OUT(LAST)=STR Q
 .S SPACES=$L(STR," ")
 .I LAST'="" S OUT(LAST)=$P(STR," ",1,SPACES-1)
 .S LAST=$P(STR," ",SPACES)
 Q
 ;
GETOCPKG(HMPTYPE) ;
 N RESULT
 S RESULT=$S(HMPTYPE="UD RX":"PSI",HMPTYPE="O RX":"PSO",HMPTYPE="NV RX":"PSH",1:HMPTYPE)
 Q RESULT
 ;
GETSET(TYPE) ;
 S RESULT=$S(TYPE="INPATIENT MEDS":"UD RX",TYPE="OUTPATIENT MEDS":"O RX",TYPE="MEDICATIONS":"RX",TYPE="NON-VA MEDS":"NV RX",1:TYPE)
 Q RESULT
 ;
EN(HMPVALUE,PARAMS) ;
 N DG,DIAL,DLGNAME,ERROR,FAIL,ISIMO,LOC,OIIEN,ORDERSTR,ORDIALOG,PAT,PARDG,TEMPTYPE,HMPCHECK,HMPOREST,HMPTEMP,HMPTYPE,TYPE,VALUES
 K ^TMP("HMPWORD",$J),^TMP("HMPSIG",$J),^TMP($J,"ORDER CHECKS")
 S ORDERSTR=$$UP^XLFSTR($G(PARAMS("orderString"))) I $G(ORDERSTR)="" D AE^HMPCORD1("No order string found",.ERROR) G ENX
 S TYPE=$$UP^XLFSTR($G(PARAMS("type"))) I TYPE="" D AE^HMPCORD1("No order type found",.HMPVALUE) G ENX
 S PAT=$G(PARAMS("patient")),LOC=$G(PARAMS("location")),USER=1089
 ;
 D IMOLOC^ORIMO(.HMPTEMP,LOC,PAT) S ISIMO=HMPTEMP
 ;builds order order values array this code needs to be enhanced somehow
 D BLDVALS(ORDERSTR,.VALUES,.ERROR) I $D(ERROR) G ENX
 S VALUES("LOCATION")=LOC
 I $D(PARAMS("COMMENTS")) M VALUES("COMMENTS")=PARAMS("COMMENTS")
 I $D(VALUES("QO")) D QO(.ERROR,.VALUES,LOC,PAT,ISIMO,.ORD) G ENX
 S HMPTYPE=$$GETSET(TYPE) I HMPTYPE="" D AE^HMPCORD1("Cannot find order package.",.ERROR) G ENX
 S DG=$O(^ORD(100.98,"B",HMPTYPE,"")) I DG="" D AE^HMPCORD1("Cannot find display group.",.ERROR) G ENX
 S TEMPTYPE="" I HMPTYPE=TYPE S TEMPTYPE=$P(^ORD(100.98,DG,0),U,3)
 S OIIEN=+$$VALIDOI(.VALUES,$S(TEMPTYPE'="":TEMPTYPE,1:HMPTYPE)) I OIIEN<1 D AE^HMPCORD1("Cannot find valid OI",.ERROR) G ENX
 S VALUES("ORDERABLE ITEM")=OIIEN_U_VALUES("OI")
 ;
 ;get display group info and dialog information
 S FAIL=0,DIAL=+$P($G(^ORD(100.98,DG,0)),U,4) I DIAL<1 D  I FAIL=1 D AE^HMPCORD1("Cannot find dialog.",.ERROR) G ENX
 .S PARDG=$O(^ORD(100.98,"AD",DG,"")) I PARDG'>0 S FAIL=1 Q
 .S DIAL=+$P($G(^ORD(100.98,PARDG,0)),U,4) I DIAL<1 S FAIL=1
 S DLGNAME=$P($G(^ORD(101.41,DIAL,0)),U)
 ;
 ;get package information
 S PKGID=$P(^ORD(101.41,DIAL,0),U,7) I PKGID<0 D AE^HMPCORD1("Cannot find package",.ERROR) G ENX
 S PKGNAME=$P(^DIC(9.4,PKGID,0),U,2) I PKGNAME="" D AE^HMPCORD1("Cannot find package name",.ERROR) G ENX
 ;
 ;create ORDIALOG array
 D BLDDIAL(.ORDIALOG,DG,DIAL) I '$D(ORDIALOG) D AE^HMPCORD1("Could not build ORDIALOG array",.ERROR) G ENX
 ;populate ORDIALOG array with values
 I $$POPDIAL(.ERROR,.ORDIALOG,.HMPCHECK,.VALUES,HMPTYPE,OIIEN,PAT,LOC)<1 G ENX
 ;
 D PERCHCKS(.ERROR,.ORDIALOG,.HMPCHECK,PAT,LOC,USER,DIAL,DLGNAME,DG,PKGID,PKGNAME,OIIEN,"N") I $D(ERROR) G ENX
 ;
 D SAVE(.HMPOREST,PAT,USER,LOC,DLGNAME,DG,OIIEN,0,.ORDIALOG,.ORD)
 ;
ENX ;
 I $D(ERROR) D ENCODE^HMPJSON("ERROR","HMPVALUE","HMPERR") Q
 ;I $D(ERROR) M HMPVALUE=ERROR Q
 D BLDJSON^HMPCORD2("",.HMPOREST,"",.HMPVALUE,"","",.ORD)
 Q
 ;
ORDRCHKS(PAT,HMPOIFN,HMPPKG,LOC,ORDIALOG,HMPCHECK) ;
 N A,OCO,OCLIST,ORINFO,ORL,OCHKS,PATTYPE,HMPREN,HMPPOSS
 S PATTYPE=$S(+$G(^DPT(PAT,.1))>0:"I",1:"O")
 D ON^ORWDXC(.OCO)
 D DISPLAY^ORWDXC(.OCLIST,PAT,HMPPKG) I $D(OCLIST) D INFO^HMPCORD2(.OCLIST)
 D ACCEPT^ORWDXC(.OCHKS,PAT,HMPPKG,PATTYPE,LOC,.HMPCHECK,HMPOIFN,0) I $D(OCHKS) D INFO^HMPCORD2(.OCHKS)
 Q
 ;
PERCHCKS(ERROR,ORDIALOG,HMPCHECK,PAT,LOC,USER,DIAL,DLGNAME,DG,PKGID,PKGNAME,OIIEN,ORTYPE) ;
 D NPHASKEY^ORWU(.HASKEY,USER,"PROVIDER") I HASKEY=0 D AE^HMPCORD1("DOES NOT HOLD THE PROVIDER KEY",.ERROR) Q
 D ALLWORD^ORALWORD(.HMPOK,USER,OIIEN,ORTYPE,USER) I $G(HMPOK)>0 D AEM^HMPCORD1(.HMPOK,.ERROR) Q
 D ORDRCHKS(PAT,OIIEN,PKGNAME,LOC,.ORDIALOG,.HMPCHECK)
 Q
 ;
POPDIAL(ERROR,ORDIALOG,HMPCHECK,VALUES,HMPTYPE,OIIEN,PAT,LOC) ;
 N CNT,NAME,NODE,NUM,OCPKG,PTR,RESULT,TEMP,WP
 S RESULT=0
 I HMPTYPE["RX" S RESULT=$$PS(.ERROR,.ORDIALOG,.VALUES,HMPTYPE,OIIEN,PAT,LOC) I RESULT=0 Q 0
 S RESULT=$$ORDDIAL(.ERROR,.ORDIALOG,.VALUES,HMPTYPE,OIIEN,PAT,LOC) I RESULT=0 Q 0
 ;
 S NAME="" F  S NAME=$O(VALUES(NAME)) Q:NAME=""  D
 .S PTR=+$$PTR(NAME) I PTR=0 Q
 .I '$D(ORDIALOG(PTR)) Q
 .S ORDIALOG(PTR,1)=$P(VALUES(NAME),U)
 .I NAME="SIG"!(NAME="WORD PROCESSING 1") S ORDIALOG(PTR,1)=VALUES(NAME)
 .S TEMP(PTR)=VALUES(NAME)
 ;
 D POPOC(.ERROR,.ORDIALOG,.TEMP,.HMPCHECK,HMPTYPE,OIIEN)
 Q RESULT
 ;
POPOC(ERROR,ORDIALOG,TEMP,HMPCHECK,HMPTYPE,OIIEN) ;
 N CNT,NAME,NODE,NUM,OCPKG,PTR,WP
 S OCPKG=$$GETOCPKG($G(HMPTYPE)) I OCPKG="" Q
 S CNT=1 S HMPCHECK(CNT)=OIIEN_U_OCPKG_U
 S PTR=0 F  S PTR=$O(ORDIALOG(PTR)) Q:PTR'>0  D
 .S NAME=$P(ORDIALOG(PTR),U,2) I NAME="COMMENT" Q
 .S CNT=CNT+1
 .S NUM=0 F  S NUM=$O(ORDIALOG(PTR,NUM)) Q:+NUM'>0  D
 ..S NODE=OCPKG_U_NAME_U_TEMP(PTR)
 ..I NAME="DRUG" S $P(HMPCHECK(1),U,3)=TEMP(PTR)
 ..I NAME="SIG" D
 ...S WP=TEMP(PTR)
 ...I '$D(@WP@(1,0)) Q
 ...S NODE=OCPKG_U_NAME_U_1_U_U_"WP"_U_U_@WP@(1,0)
 ..S HMPCHECK(CNT)=NODE
 ;
 Q RESULT
 ;
ORDDIAL(ERROR,ORDIALOG,VALUES,HMPTYPE,OIIEN,PAT,LOC) ;
 I $D(VALUES("STARTDATE")) S VALUES("START DATE/TIME")=VALUES("STARTDATE") K VALUES("STARTDATE")
 I $D(VALUES("PREOPDATE")) S VALUES("PRE-OP SCHEDULED DATE/TIME")=VALUES("PREOPDATE") K VALUES("PREOPDATE")
 I $D(VALUES("SUBMIT")) S VALUES("IMAGING LOCATION")=VALUES("SUBMIT") K VALUES("SUBMIT")
 I $D(VALUES("TRANSPORT")) S VALUES("MODE OF TRANSPORT")=VALUES("TRANSPORT") K VALUES("TRANSPORT")
 I $D(VALUES("ISOLATION")) S VALUES("YES/NO")=VALUES("ISOLATION") K VALUES("ISOLATION")
 I $D(VALUES("REASONSTUDY")) S VALUES("STUDY REASON")=VALUES("REASONSTUDY") K VALUES("REASONSTUDY")
 I '$D(VALUES("URGENCY")) S VALUES("URGENCY")=9
 I $D(VALUES("COMMENTS")) D
 .S ^TMP("HMPWORD",$J,1,0)=VALUES("COMMENTS")
 .S VALUES("WORD PROCESSING 1")=$NA(^TMP("HMPWORD",$J))
 .K VALUES("COMMENT")
 Q 1
 ;
PS(ERROR,ORDIALOG,VALUES,HMPTYPE,OIIEN,PAT,LOC) ;
 N ARRAY,CNT,DOSE,DOSENODE,DOSESTR,DRUG,FAIL,FOUND,NODE,PRIORITY,ROUTE,ROUTEIEN,SCH,TEMP,VAL,HMPLST,HMPPRIOR,HMPROUTE,HMPSCH
 S FAIL=0
 I $D(VALUES("STARTDATE")) S VALUES("START DATE/TIME")=VALUES("STARTDATE") K VALUES("STARTDATE")
 D SCHALL^ORWDPS1(.HMPSCH,PAT,LOC)
 D ODSLCT^ORWDPS1(.HMPPRIOR,$E(HMPTYPE),PAT,LOC)
 D OISLCT^ORWDPS2(.HMPLST,OIIEN,$E(HMPTYPE),PAT,"Y","N")
 D BLDROUTE(.HMPROUTE)
 S VALUES("INSTRUCTIONS")=$G(VALUES("DOSE"))_U_$G(VALUES("DOSE")) K VALUES("DOSES")
 ;
PSROUTE ;set route
 I '$D(VALUES("ROUTE")),HMPTYPE="NV RX" G PSSCH
 S TEMP=$G(VALUES("ROUTE"))
 S ROUTEIEN=+$G(HMPROUTE(TEMP)) I ROUTEIEN<1 D AE^HMPCORD1("Could not find a valid route",.ERROR) S FAIL=1
 S ROUTE=$S(HMPTYPE'["UD":$P(HMPROUTE(VALUES("ROUTE")),U,2),1:TEMP)
 I ROUTE="" S ROUTE=TEMP
 S VALUES("ROUTE")=ROUTEIEN_U_TEMP
 ;
PSURG ;build urgency value
 S CNT=0,FOUND=0,PRIOR=0 F  S CNT=$O(HMPPRIOR(CNT)) Q:CNT'>0!(FOUND=1)  D
 .S NODE=HMPPRIOR(CNT) I NODE="~Priority" S PRIOR=1
 .I PRIOR=0 Q
 .I $E(NODE)="~"
 .I $G(VALUES("URGENCY"))'="" D  Q
 ..I $P(NODE,U,2)'=VALUES("URGENCY") Q
 ..S TEMP=$P(NODE,U) S VALUES("URGENCY")=$E(TEMP,2,$L(TEMP)) S FOUND=1
 .I $E(NODE)="i" Q
 .S TEMP=$P(NODE,U) S VALUES("URGENCY")=$E(TEMP,2,$L(TEMP)) S FOUND=1
 ;
PSSCH ;populate additional schedule fields for inpatient meds
 ;TODO move to sub-routine to handle Days of Weeks schedules
 I '$D(VALUES("SCHEDULE")),HMPTYPE="NV RX" G PSSCOM
 S CNT=0,FOUND=0 F  S CNT=$O(HMPSCH(CNT)) Q:CNT'>0!(FOUND=1)  D
 .S NODE=$G(HMPSCH(CNT)) I $P(NODE,U)'=VALUES("SCHEDULE") Q
 .S VALUES("SCHEDULE TYPE")=$P(NODE,U,3)_U_$P(NODE,U,3),VALUES("ADMIN TIMES")=$P(NODE,U,4)_U_$P(NODE,U,4),VALUES("SCHEDULE")=VALUES("SCHEDULE")_U_VALUES("SCHEDULE")
 .S SCH=$S(HMPTYPE'["UD":$P(NODE,U,2),1:$P(NODE,U))
 .S FOUND=1
 ;
PSSCOM ;
 I $D(VALUES("COMMENTS")) D
 .S ^TMP("HMPWORD",$J,1,0)=VALUES("COMMENTS")
 .S VALUES("WORD PROCESSING 1")=$NA(^TMP("HMPWORD",$J))
 .K VALUES("COMMENT")
 ;
PSDRUG ;populate additional felds based off the dose
 S CNT=0,FOUND=0,DOSENODE=0 F  S CNT=$O(HMPLST(CNT)) Q:CNT'>0!(FOUND=1)  D
 .S NODE=HMPLST(CNT) I NODE="~AllDoses" S DOSENODE=1
 .I DOSENODE=0 Q
 .I $E(NODE)="~" Q
 .S DOSE=$P(NODE,U) S DOSE=$E(DOSE,2,$L(DOSE))
 .I $P(VALUES("INSTRUCTIONS"),U)'=DOSE Q
 .S VALUES("DISPENSE DRUG")=$P(NODE,U,2)
 .S VALUES("DOSE")=$P(NODE,U,3)
PSO ;handle outpatient meds
 I $D(VALUES("SUPPLY")) D
 .N CNT,DRG,PRIOR,PTR,QUANTITY,SUP,UPD,X
 .S DRG=$G(VALUES("DISPENSE DRUG")),SUP=VALUES("SUPPLY")
 .K VALUES("SUPPLY")
 .;get quantity do a check to determine if it is valid range or if one is not defined
 .;potentially need to add code to handle complex orders
 .S UPD=$P(VALUES("DOSE"),"&",3)
 .D DAY2QTY^ORWDPS2(.VAL,SUP,UPD_U,$P(VALUES("SCHEDULE"),U)_U,"~^",PAT,DRG)
 .S QUANTITY=+$G(VALUES("QUANTITY"))
 .I QUANTITY=0 S VALUES("QUANTITY")=+VAL
 .I QUANTITY>0 S VALUES("QUANTITY")=$S(QUANTITY<VAL:QUANTITY,+VAL=0:QUANTITY,1:VAL)
 .S VALUES("DAYS SUPPLY")=SUP
 .I +$G(VALUES("DAYS SUPPLY"))=0 D AE^HMPCORD1("Days Supply must be greater then zero",.ERROR) S FAIL=1
 .I +$G(VALUES("QUANTITY"))=0 D AE^HMPCORD1("Quantity must be greater then zero",.ERROR) S FAIL=1
 .;
 .;check refill values to make sure it is in range
 .I +$G(VALUES("REFILLS"))>0 D
 ..K VAL
 ..D MAXREF^ORWDPS2(.VAL,PAT,DRG,SUP,OIIEN,0)
 ..I VALUES("REFILLS")>VAL S VALUES("REFILLS")=VAL
 .I +$G(VALUES("REFILLS"))=0 S VALUES("REFILLS")=0
 .I $D(VALUES("ROUTINE")) D
 ..S PTR=$$PTR("ROUTING") I PTR'>0 Q
 ..S NODE=$P($G(^ORD(101.41,PTR,1)),U,2) I NODE="" Q
 ..S CNT=$L(NODE,";")-1
 ..F X=1:1:CNT D
 ...S TEMP=$P(NODE,";",X) I TEMP="" Q
 ...S ARRAY($P(TEMP,":",2))=$P(TEMP,":")
 ...I $D(ARRAY(VALUES("ROUTING"))) S VALUES("ROUTING")=ARRAY(VALUES("ROUTING"))
 .;
 .;check for valid routing value or set a default value
 .I '$D(VALUES("ROUTING")) D
 ..S CNT=0,FOUND=0,PRIOR=0 F  S CNT=$O(HMPPRIOR(CNT)) Q:CNT'>0!(FOUND=1)  D
 ...S NODE=HMPPRIOR(CNT) I NODE="~Pickup" S PRIOR=1
 ...I PRIOR=0 Q
 ...I $E(NODE)="~" Q
 ...S TEMP=$P(NODE,U) S VALUES("ROUTING")=$E(TEMP,2,$L(TEMP)) S FOUND=1
 ;
 I FAIL>0 Q 0
PSSIG ;build sig value
 N WP
 S ^TMP("HMPSIG",$J,0,0)=$P(VALUES("INSTRUCTIONS"),U)
 I $G(ROUTE)'="" S ^TMP("HMPSIG",$J,1,0)=ROUTE
 I $G(SCH) S ^TMP("HMPSIG",$J,1,0)=$S($G(^TMP("HMPSIG",$J,1,0))'="":^TMP("HMPSIG",$J,1,0)_" "_SCH,1:SCH)
 I $D(VALUES("WORD PROCESSING 1")) D
 .S WP=VALUES("WORD PROCESSING 1")
 .S CNT=1,NUM=1 F  S CNT=$O(@WP@(CNT)) Q:CNT'>0  D
 ..S NUM=NUM+1 S ^TMP("HMPSIG",$J,NUM,0)=@WP@(CNT,0)
 S VALUES("SIG")=$NA(^TMP("HMPSIG",$J))
 Q 1
 ;
QO(ERROR,VALUES,LOC,PAT,ISIMO,ORD) ;
 N BLDRES,DEFIEN,DIEN,IEN,PKGID,PKGNAME,VARSARR,HMPOREST,HMPCHECK
 S IEN=+$O(^ORD(101.41,"B",VALUES("QO"),"")) I IEN'>0 D AE^HMPCORD1("Could not find QO",.ERROR) Q
 ;
 D BEG^HMPCORD2(PAT,LOC,IEN,USER,.VARSARR,.BLDRES,.HMPVALUE) I $D(ERROR) Q
 S PKGID=+$P($G(^ORD(101.41,IEN,0)),U,7) I PKGID'>0 D AE^HMPCORD1("Could not find package for the QO",.ERROR) Q
 S PKGNAME=$P(^DIC(9.4,PKGID,0),U,2) I PKGNAME="" D AE^HMPCORD1("Cannot find package name",.HMPVALUE) Q
 ;
 I $P(BLDRES(0),U,4)'="Q" D AE^HMPCORD1("Item is not a QO",.ERROR) Q
 S ORDTYPE="Q"
 ;I $P(BLDRES(0),U)'=1,$P(BLDRES(0),U)'=2 D AE("Quick Order is not set to Auto-Accept",.HMPVALUE) S HMPOK=2 Q
 S RSPID=$P(BLDRES(0),U,2)
 S DEFIEN=$$DEFDLG^ORCD(IEN)
 S VARSARR("DISPLAY GROUP IEN")=$P($G(^ORD(101.41,DEFIEN,0)),U,5)
 S VARSARR("DISPLAY GROUP")=$P($G(^ORD(101.98,VARSARR("DISPLAY GROUP IEN"),0)),U)
 D BLDORDLG^HMPCORD1(.ORDIALOG,IEN,PAT,RSPID,ORDTYPE)
 ;S DIEN=VARSARR("DISPLAY GROUP IEN")
 D FILLID^ORWDXC(.FILLER,IEN)
 S VARSARR("FILLER ID")=FILLER
 ;I ORDTYPE="E" S DIEN=+$P($G(^OR(100,HMPOIFN,0)),U,5)
 ;I ORDTYPE="Q" S DIEN=HMPOIFN
 S DLGNAME=$P($G(^ORD(101.41,DEFIEN,0)),U)
 I DLGNAME="" D AE^HMPCORD1("INVALID DEFAULT DIALOG",.ERROR) Q
 S VARSARR("DIALOG NAME")=DLGNAME
 D DLGDEF^ORWDX(.DLGDEF,DLGNAME)
 ;build order check array,build dialog structure and build save array
 D BLDARRS^HMPCORD2(.RESULT,.ORDIALOG,.VARSARR,PAT,LOC,.HMPCHECK,.SAVEARR,.HMPPOSS)
 D PERCHCKS(.ERROR,.ORDIALOG,.HMPCHECK,PAT,LOC,USER,DEFIEN,DLGNAME,VARSARR("DISPLAY GROUP IEN"),PKGID,PKGNAME,IEN,"Q") I $D(ERROR) Q
 D SAVE(.HMPOREST,PAT,USER,LOC,DLGNAME,VARSARR("DISPLAY GROUP IEN"),0,IEN,.ORDIALOG,.ORD)
 Q
 ;
SAVE(HMPOREST,PAT,USER,LOC,DLGNAME,DGIEN,ORIFN,QOIEN,SAVEARR,ORD) ;
 ;SAVE(REC,ORVP,ORNP,ORL,DLG,ORDG,ORIT,ORIFN,ORDIALOG,ORDEA,ORAPPT,ORSRC,OREVTDF)
 I QOIEN>0 D SAVE^ORWDX(.HMPOREST,PAT,USER,LOC,DLGNAME,DGIEN,QOIEN,"",.SAVEARR,"",DT,"",0)
 I ORIFN>0 D SAVE^ORWDX(.HMPOREST,PAT,USER,LOC,DLGNAME,DGIEN,"","",.SAVEARR,"",DT,"",0)
 N CNT,DFN,IEN
 S CNT=0,IEN=0 F  S CNT=$O(HMPOREST(CNT)) Q:CNT'>0!(IEN>0)  D
 .I $E(HMPOREST(CNT))="~" S IEN=+$P($P(HMPOREST(CNT),U),"~",2)
 I IEN>0 S DFN=PAT D ORX^HMPDJ01(IEN,.ORD)
 Q
 ;
VALIDOI(VALUES,TYPE) ;
 N IEN,POSSOI
 S IEN=$P(VALUES("OI"),":",5) I IEN'>0 Q -1
 ;S IEN=$P(VALUES("OI"),":",5) I IEN'>0 Q -1
 S POSSOI=$P(^ORD(101.43,IEN,0),U)
 S VALUES("OI")=POSSOI
 ;S SETTYPE=$$GETSET(TYPE) I SETTYPE="" Q -1
 S RESULT=$O(^ORD(101.43,"S."_TYPE,POSSOI,""))
 Q RESULT
 ;
PTR(NAME) ;
 Q $O(^ORD(101.41,"B","OR GTX "_NAME,""))
