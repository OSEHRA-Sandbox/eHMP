HMPCORD1 ; SLC/AGP,JLC - Process Order Request from AVIVA System. ; 9/21/12 5:59pm
 ;;2.0;ENTERPRISE HEALTH MANAGEMENT PLATFORM;**1**;Sep 01, 2011;Build 49
 Q
 ;
ADD(X,HMPVALUE) ; Add a line @NHIN@(n)=X
 N RESULT
 S RESULT("success")="false"
 S RESULT("error")=X
 D ENCODE^HMPJSON("RESULT","HMPVALUE","HMPERR")
 Q
 ;
AE(TEXT,HMPVALUE) ;
 ;N RESULT
 ;S RESULT("success")="false"
 ;S RESULT("error")=TEXT
 ;D ENCODE^HMPJSON("RESULT","HMPVALUE","HMPERR")
 N DATA,TXT
 S TXT(1)=TEXT
 D SETERROR^HMPUTILS(.HMPVALUE,.TXT,.TXT,.DATA)
 Q
 ;
AEM(TEXT,HMPVALUE) ;
 ;N NUM,RESULT
 ;S RESULT("success")="false"
 ;S NUM=0 F  S NUM=$O(TEXT(NUM)) Q:NUM'>0  D
 ;.I $G(RESULT("error"))="" S RESULT("error")=TEXT(NUM)
 ;.S RESULT("error")=RESULT("error")_$C(13,10)_TEXT(NUM)
 ;D ENCODE^HMPJSON("RESULT","HMPVALUE","HMPERR")
 N DATA
 D SETERROR^HMPUTILS(.HMPVALUE,.TEXT,.TEXT,.DATA)
 Q
 ;
CANCEL(UID) ;
 N HMPERARR,HMPERCNT,HMPRES,HMPISORD,HMPOIFN,HMPOK,HMPPOSS
 S HMPERCNT=0,HMPOUT=0
 I UID'["orderID" D AE("UID does not contain an order ID") G EXIT
 S DFN=$P(UID,":",5),HMPOIFN=$P(UID,"D",2),HMPISORD=1
 G UNO
 Q
 ;
 ;DC(HMPVALUE,UID,USER,LOC,ICN,REAS,NAME) ;
DC(HMPVALUE,DFN,ID,USER,LOC,REAS,NAME) ;
 N RESULT,HMPDIEN,HMPERCNT,HMPFILL,HMPISORD,HMPOK,HMPRES
 S HMPISORD=1
 ;I $$VALIDUID(UID)=0  D AE("UID is not valid UID",.HMPVALUE) G DCX
 ;S DFN=$P(UID,":",5)
 S HMPOIFN=ID
 S HMPDIEN=+$P($G(^OR(100,HMPOIFN,0)),U,5)
 D FILLID^ORWDXC(.HMPFILL,HMPDIEN)
 D DC^ORWDXA(.HMPRES,HMPOIFN,USER,LOC,REAS,0,0)
 ;D UNO
 D KILLALRT^HMPCORD2(DFN,HMPFILL)
 I $D(HMPVALUE)>0 G DCX
 S REAS="Discontinue "_NAME_" "_REAS
 D BLDJSON^HMPCORD2(.HMPVALUE,.RESULT,.HMPPOSS,.HMPVALUE,$G(REAS),UID)
DCX ;
 Q
 ;
 ;D DCLREAS(.HMPVALUE,DFN,ID,ORPROV)
DCLREAS(RESULT,DFN,HMPOIFN,USER) ;
 N CNT,NODE,NUM,HMPHSKEY,HMPERARR,HMPISORD,HMPOARRY,HMPOUT,HMPRES,HMPPOSS
 S HMPERCNT=0,HMPOUT=0,HMPISORD=1
 K HMPOUT D OFCPLX^ORWDXA(.HMPOUT,HMPOIFN) I $D(HMPOUT)>0 S RESULT("complexOrder")="true"
 K HMPOUT D DCREN^ORWDX1(.HMPOUT,HMPOIFN) I $D(HMPOUT) S RESULT("pendingRenewal")="true"
 K HMPOUT D DCREASON^ORWDX2(.HMPOUT) I $D(HMPOUT) D
 .S CNT=1,NUM=1 F  S CNT=$O(HMPOUT(CNT)) Q:CNT'>0  D
 ..S NODE=$E(HMPOUT(CNT),2,$L(HMPOUT(CNT)))
 ..S RESULT("lists",NUM,"value")=$P(NODE,U,2),RESULT("lists",NUM,"id")=$P(NODE,U),NUM=NUM+1
 Q
 ;
EN(IEN,DFN,LOC,USER,RSPID,ORDTYPE,CHKONLY,VARSARR,ORDIALOG,ERRARR,HMPPOSS,RESULT,HMPVALUE) ;
 N CHECKS,CNT,DEFDLF,DLGDEF,DLGNAME,DIEN,DRUG,EXT,FILLER,INST,ISCLOZ,INT,NUM
 N ODIEN,ORDCHKOT,ORDERCHK,SAVEARR,STR,TEMP,TEXT
 I ORDTYPE="E" S DIEN=+$P($G(^OR(100,IEN,0)),U,5)
 I ORDTYPE="Q" S DIEN=IEN
 S VARSARR("DISPLAY GROUP IEN")=$P($G(^ORD(101.41,$$DEFDLG^ORCD(DIEN),0)),U,5)
 S VARSARR("DISPLAY GROUP")=$P($G(^ORD(101.98,VARSARR("DISPLAY GROUP IEN"),0)),U)
 D FILLID^ORWDXC(.FILLER,DIEN)
 S VARSARR("FILLER ID")=FILLER
 K ^TMP($J,"ORDER CHECKS")
 I $$GET^XPAR("DIV^SYS^PKG","ORK SYSTEM ENABLE/DISABLE")="E" D
 .D DISPLAY^ORWDXC(.CHECKS,DUZ,VARSARR("FILLER ID")) I $D(CHECKS) D INFO^HMPCORD2(.CHECKS)
 S DLGNAME=$P($G(^ORD(101.41,DIEN,0)),U)
 I ORDTYPE="Q" S DLGNAME=$P($G(^ORD(101.41,ORDIALOG,0)),U)
 I DLGNAME="" D AE("INVALID DEFAULT DIALOG",.HMPVALUE) G ENX
 S VARSARR("DIALOG NAME")=DLGNAME
 D DLGDEF^ORWDX(.DLGDEF,DLGNAME)
 ;build order check array,build dialog structure and build save array
 D BLDARRS^HMPCORD2(.RESULT,.ORDIALOG,.VARSARR,DFN,LOC,.ORDERCHK,.SAVEARR,.HMPPOSS)
 D ACCEPT^ORWDXC(.ORDCHKOT,DFN,VARSARR("FILLER ID"),"",LOC,.ORDERCHK,"",0) D INFO^HMPCORD2(.ORDCHKOT)
 I CHKONLY=1 Q
 S SAVEARR("ORCHECK")=0,SAVEARR("ORTS")=0
 I ORDTYPE="Q"!(ACTION="C") D SAVE(.RESULT,DFN,USER,LOC,VARSARR("DIALOG NAME"),VARSARR("DISPLAY GROUP IEN"),DIEN,0,.SAVEARR)
ENX ;
 Q
 ;
GETSNIPS(HMPVALUE,ICN,USER) ;
 N CNT,DFN,RESULT
 I +$G(DFN)'>0 S DFN=$$GETDFN^MPIF001(ICN)
 S CNT=0 F  S CNT=$O(^XTMP("HMP SNIPPET",DFN,USER,DT,CNT)) Q:CNT'>0  D
 .I $G(RESULT("text"))'="" S RESULT=$G(RESULT("text"))_$C(13,10)_$G(^XTMP("HMP SNIPPET",DFN,USER,DT,CNT,"text")) Q
 .S RESULT("text")=$G(^XTMP("HMP SNIPPET",DFN,USER,DT,CNT,"text"))
 S RESULT("success")=$S($D(RESULT):"true",1:"false")
 D ENCODE^HMPJSON("RESULT","HMPVALUE","ERROR")
 Q
 ;
GETEXT(NAME,VALUE) ;
 N RESULT
 I NAME="ORDERABLE" Q $P(^ORD(101.43,VALUE,0),U)
 I NAME="URGENCY" Q $P(^ORD(101.42,VALUE,0),U)
 I NAME="ROUTE" Q $$GET1^DIQ(51.2,+VALUE_",",.01)
 I NAME="DRUG" Q $$GET1^DIQ(50,+VALUE_",",.01)
 Q VALUE
 ;
 ;entry point for RPC for QO and editing an existing order
 ;ORDERING(.OUT,"",15833,10103,240,1089,"",1,"")
ORDERING(HMPVALUE,UID,QIEN,ICN,LOC,USER,ACTION,CHKONLY,REAS,NAME,HMPPOSS) ;
 N DFN,FAIL,ORDTYPE,RESULT,TEMP,HMPERCNT,HMPISORD,HMPOIFN
 N VARSARR,HMPERARR,HMPRES,HMPBLT
 S HMPBLT=0
 K ^TMP($J,"ORDER CHECKS")
 S HMPERCNT=0,HMPISORD=0
 S FAIL=0
 I $L($G(UID))>0 D
 . ;I UID'["orderID" D AE("UID does not contain an order ID") S FAIL=1
 . S HMPOIFN=$P(UID,":",6)
 I ACTION="R" D RENEW(UID,USER,ICN,CHKONLY) Q:HMPBLT=1  G ORDERUNO
 I FAIL=1 G EXIT
 I +$G(DFN)'>0 S DFN=$$GETDFN^MPIF001(ICN) I DFN'>0 D AE("Cannot find patient dfn from ICN") G EXIT
 ;I QIEN>0 S HMPOIFN=QIEN
 I QIEN>0 D QOSET(QIEN,ACTION,DFN,CHKONLY,.RESULT,.HMPVALUE)
 I +QIEN=0 D PROCESS(HMPOIFN,ACTION,CHKONLY,.RESULT,.HMPVALUE)
 I CHKONLY=1 Q
 S TEMP=REAS
 I QIEN>0 D
 .S NAME="quick order "_$P($G(^ORD(101.41,QIEN,0)),U,2)
 .S REAS="Place "_"qo"_" "_TEMP
 I ACTION="C" S REAS="Copy "_NAME_" "_TEMP
ORDERUNO ;
 Q
 ;
QOSET(QIEN,ACTION,DFN,CHKONLY,RESULT,HMPVALUE) ;
 N NUM,HMPOIFN
 I $P($G(^ORD(101.41,QIEN,0)),U,4)'="O" S HMPOIFN=QIEN D PROCESS(HMPOIFN,ACTION,CHKONLY,.RESULT,.HMPVALUE) Q
 S NUM=0 F  S NUM=$O(^ORD(101.41,QIEN,10,NUM)) Q:NUM'>0  D
 .S HMPOIFN=$P($G(^ORD(101.41,QIEN,10,NUM,0)),U,2) I +$G(HMPOIFN)'>0 Q
 .D PROCESS(HMPOIFN,ACTION,CHKONLY,.RESULT,.HMPVALUE)
 Q
PROCESS(HMPOIFN,ACTION,CHKONLY,RESULT,HMPVALUE,HMPOK) ;
 N BLDRES,ORCAT,ORDARR,ORDIALOG,RSPID,TEMP,TEXT
 S TEMP=$G(ACTION)_HMPOIFN
 I $$BEG^HMPCORD2(DFN,LOC,TEMP,USER,.VARSARR,.BLDRES)=0 G PROCESSX
 I $P(BLDRES(0),U,4)="Q" D
 .S ORDTYPE="Q"
 .I $P(BLDRES(0),U)'=1,$P(BLDRES(0),U)'=2 D AE("Quick Order is not set to Auto-Accept",.HMPVALUE) G PROCESSX
 I $G(ORDTYPE)="" S ORDTYPE=$S(ACTION="C":"E",ACTION="X":"E",1:"N")
 S RSPID=$P(BLDRES(0),U,2)
 I ACTION="X" I $$CHANGE^HMPCORD2(HMPOIFN,DFN,LOC,USER,.ERRARR,.HMPVALUE)=0 G PROCESSX
 I ORDTYPE="Q" D
 .D GETQDLG^ORCD(HMPOIFN)
 .S ORCAT=$S(+$G(^DPT(DFN,.1))>0:"I",1:"O"),PROMPT=$$PTR("SIG")
 .D SIG^ORCDPS2
 I '$D(ORDIALOG) D
 .S ORDIALOG=+$P($G(^OR(100,+HMPOIFN,0)),U,5)
 .D GETDLG1^ORCD(ORDIALOG)
 .D GETORDER^ORCD(+HMPOIFN)
 D EN(+HMPOIFN,DFN,LOC,USER,RSPID,ORDTYPE,CHKONLY,.VARSARR,.ORDIALOG,.ERRARR,.HMPPOSS,.RESULT,.HMPVALUE)
PROCESSX ;
 Q
 ;
QOL(RESULT,LOC,PROV,IEN) ;
 N CNT,BLDRES,DIEN,NAME,NODE,NUM,TEXT,TYPE,VARSARR,HMPERCNT,HMPERARR,HMPOARRY,HMPPOSS
 S HMPERCNT=0
 S DIEN="",NUM=0,TEXT=""
 F  S NUM=$O(^HMPPANEL(IEN,"ORDER DIALOGS",NUM)) Q:NUM'>0  D
 .S DIEN=$G(^HMPPANEL(IEN,"ORDER DIALOGS",NUM,0)) Q:+DIEN'>0
 .S NAME=$P($G(^ORD(101.41,+DIEN,0)),U) I NAME="" Q
 .I $$BEG^HMPCORD2(DFN,LOC,DIEN,PROV,.VARSARR,.BLDRES)=0 G QOLX
 .S TYPE=$P(BLDRES(0),U,4)
 .S RESULT("qo",NUM,"name")=NAME,RESULT("qo",NUM,"id")=DIEN,RESULT("qo",NUM,"type")=TYPE
 I $D(HMPVALUE)>0 G QOLX
QOLX ;
 Q
 ;
RENEW(HMPVALUE,DFN,ID,ORPROV,CHKONLY,REAS,NAME,LOC) ;
 ;RENEW(HMPVALUE,UID,PROVP,CHKONLY,REAS,NAME) ;
 ;Input - DFN of the patient
 ;        RX to be renewed
 ;
 N X,ORY,ORPKG,ORITM,PSOSTAT,A,PDET,ORFLDS,DRUG,DISPLAY,FAIL,LIST,OCHKS,OCO,OCLIST,ORCPLX,ORINFO,ORPVSTS
 N ORL,PCP,PCPN,RESULT,RNWFLDS,SPACES,Y,ORUSR,NEWIFN,PNM,RXE,HMPOIFN
 N HMPERARR,HMPERCNT,HMPRES,HMPISORD,HMPOK
 K ^TMP($J,"ORDER CHECKS")
 S HMPERCNT=0,HMPISORD=1
 S HMPOIFN=ID
 D RNWFLDS^ORWDXR(.RNWFLDS,HMPOIFN) S ORFLDS(1)=RNWFLDS(0)
 D ISCPLX^ORWDXR(.ORCPLX,HMPOIFN) S ORCPLX=+$G(ORCPLX)
 I CHKONLY=1 Q
 D RENEW^ORWDXR(.RESULT,HMPOIFN,DFN,ORPROV,LOC,.ORFLDS,ORCPLX,0)
 S NEWIFN=$P(^OR(100,HMPOIFN,3),"^",6)
 S $P(^OR(100,NEWIFN,8,1,0),"^",13)=ORPROV
 I $D(HMPVALUE)>0 G RENEWX
 S REAS="Renew "_NAME_" "_REAS
RENEWUNO ;
 ;I HMPISORD=1 D UNLKORD^ORWDX(.HMPOK,HMPOIFN) I 'HMPOK D AE("Order unlock Failed") K HMPOK
RENEWUNL ;
 ;D UNLOCK^ORWDX(.HMPOK,DFN) I 'HMPOK D AE("Chart unlock Failed")
RENEWX ;
 ;D ENCODE^HMPJSON("RESULT","HMPVALUE","HMPERR")
 Q
 ;
PTR(NAME) ; -- Returns ptr value of prompt in Dialog file
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
 ;
SAVE(HMPRES,DFN,USER,LOC,DLGNAME,DGIEN,QOIEN,ORIFN,SAVEARR) ;
 N CNT,NUM,HMPOREST
 I QOIEN>0 D SAVE^ORWDX(.HMPOREST,DFN,USER,LOC,DLGNAME,DGIEN,QOIEN,"",.SAVEARR,"",DT,"",0)
 I ORIFN>0 D SAVE^ORWDX(.HMPOREST,DFN,USER,LOC,DLGNAME,DGIEN,"",ORIFN,.SAVEARR,"",DT,"C",0)
 S CNT=$O(HMPRES(""),-1)
 S NUM=0 F  S NUM=$O(HMPOREST(NUM)) Q:NUM'>0  D
 .S CNT=CNT+1,HMPRES("resultText")=$G(HMPRES("resultText"))_$C(13,10)_HMPOREST(NUM)
 Q
 ;
UNO ;
 ;I HMPISORD=1 D UNLKORD^ORWDX(.HMPOK,HMPOIFN) I 'HMPOK D AE("Order unlock Failed") K HMPOK
UNLOCK ;
 ;D UNLOCK^ORWDX(.HMPOK,DFN) I 'HMPOK D AE("Chart unlock Failed")
EXIT ;
 S HMPBLT=1
 ;D BLDXMLD^HMPCORD2(.HMPERARR,.HMPRES,.HMPPOSS)
 K ^TMP($J,"ORDER CHECKS")
 Q
 ;
VAL(REQ,X) ; return value from request
 Q $G(REQ(X,1))
 ;
VALIDUID(UID) ;
 I UID["med" Q 1
 Q 0
 ;
PRECHK(HMPOK,DFN,LOC,HMPOIFN,ORPROV,ACTION,PACTION,VARSARR,SAVEARR,HMPOARRY,ERROR) ;
 N ORDERCHK,ORDTYPE,TEMP,HMPPKG
 I PACTION'="N" D GETPKG^ORWDXR(.HMPPKG,HMPOIFN) I '$D(HMPPKG) D AE("Invalid Order Number",.ERROR) S HMPOK=2 Q
 I HMPPKG["PS" D  I HMPOK>0 Q
 .S ORDTYPE=$S(ACTION="R":"E",PACTION="C":"E",PACTION="X":"E",PACTION="N":"N",1:"Q")
 .D ALLWORD^ORALWORD(.HMPOK,DFN,HMPOIFN,ORDTYPE,ORPROV) I $G(HMPOK)>0 D AEM(.HMPOK,.ERROR) Q
 .I ACTION="DL"!(ACTION="RENEW") D  I HMPOK>0 Q
 .. S ORTYPE=$S(ACTION="DL":"DC",ACTION="RENEW":"RN",1:"") I ORTYPE="" Q
 .. D VALID^ORWDXA(.HMPOK,HMPOIFN,ORTYPE,ORPROV) I $G(HMPOK)'="" D AE(HMPOK,.ERROR) S HMPOK=2 Q
 ..I ACTION="DL" Q
 ..D GTORITM^ORWDXR(.ORITM,HMPOIFN)
 ..I HMPPKG="PSO" D FAILDEA^ORWDPS1(.FAIL,ORITM,ORPROV,"O") I FAIL D AE("Failed DEA Check",.ERROR) S HMPOK=2 Q
 ..D RNWFLDS^ORWDXR(.RNWFLDS,HMPOIFN) S ORFLDS(1)=RNWFLDS(0)
 ..D CHKGRP^ORWDPS2(.DISPLAY,HMPOIFN) ;I DISPLAY'=2 D AE("Package Problem on Order") G UNO
 ;
 I ACTION="P" D  I HMPOK>0 Q 
 .D BLDPORD(HMPOIFN,DFN,LOC,PACTION,ORPROV,.VARSARR,.HMPOK,.HMPOARRY,.ORDERCHK,.SAVEARR)
 ;
 W !,HMPPKG
 W !,HMPOIFN
 D PEROC(.HMPOK,DFN,HMPOIFN,HMPPKG,ACTION,LOC,.ORDERCHK,.VARSARR,.ORDIALOG,.SAVEARR,.HMPOARRY)
 Q
 ;
BLDPORD(HMPOIFN,DFN,LOC,PACTION,ORPROV,VARSARR,HMPOK,ORDIALOG,ORDERCHK,SAVEARR,ERROR) ;
 N BLDRES,DIEN,ORDTYPE,TEMP
 S TEMP=$G(PACTION)_HMPOIFN
 I $$BEG^HMPCORD2(DFN,LOC,TEMP,ORPROV,.VARSARR,.BLDRES)=0 S HMPOK=2 Q
 I $P(BLDRES(0),U,4)="Q" D
 .S ORDTYPE="Q"
 .I $P(BLDRES(0),U)'=1,$P(BLDRES(0),U)'=2 D AE("Quick Order is not set to Auto-Accept",.HMPVALUE) S HMPOK=2 Q
 I $G(ORDTYPE)="" S ORDTYPE=$S(PACTION="C":"E",PACTION="X":"E",1:"N")
 S RSPID=$P(BLDRES(0),U,2)
 I PACTION="X" I $$CHANGE^HMPCORD2(HMPOIFN,DFN,LOC,USER,.ERRARR,.HMPVALUE)=0 G PROCESSX
 S VARSARR("DISPLAY GROUP IEN")=$S(ORDTYPE="Q":$P($G(^ORD(101.41,$$DEFDLG^ORCD(HMPOIFN),0)),U,5),1:+$P(^OR(100,HMPOIFN,0),U,11))
 S VARSARR("DISPLAY GROUP")=$P($G(^ORD(101.98,VARSARR("DISPLAY GROUP IEN"),0)),U)
 D BLDORDLG(.ORDIALOG,HMPOIFN,DFN,RSPID,ORDTYPE)
 S DIEN=VARSARR("DISPLAY GROUP IEN")
 D FILLID^ORWDXC(.FILLER,DIEN)
 S VARSARR("FILLER ID")=FILLER
 I ORDTYPE="E" S DIEN=+$P($G(^OR(100,HMPOIFN,0)),U,5)
 I ORDTYPE="Q" S DIEN=HMPOIFN
 S DLGNAME=$P($G(^ORD(101.41,DIEN,0)),U)
 I DLGNAME="" D AE("INVALID DEFAULT DIALOG",.ERROR) S HMPOK=2 Q
 S VARSARR("DIALOG NAME")=DLGNAME
 D DLGDEF^ORWDX(.DLGDEF,DLGNAME)
 ;build order check array,build dialog structure and build save array
 D BLDARRS^HMPCORD2(.RESULT,.ORDIALOG,.VARSARR,DFN,LOC,.ORDERCHK,.SAVEARR,.HMPPOSS)
 Q
 ;
BLDORDLG(ORDIALOG,HMPOIFN,DFN,RSPID,ORDTYPE) ;
 N PROMPT
 I ORDTYPE="Q" D
 .D GETQDLG^ORCD(HMPOIFN)
 .S ORCAT=$S(+$G(^DPT(DFN,.1))>0:"I",1:"O"),PROMPT=$$PTR("SIG")
 .D SIG^ORCDPS2
 I '$D(ORDIALOG) D
 .S ORDIALOG=+$P($G(^OR(100,+HMPOIFN,0)),U,5)
 .D GETDLG1^ORCD(ORDIALOG)
 .D GETORDER^ORCD(+HMPOIFN)
 Q
 ;
 ;PEROC(.HMPOK,DFN,HMPOIFN,HMPPKG,ACTION)
PEROC(HMPOK,DFN,HMPOIFN,HMPPKG,ACTION,LOC,ORDERCHK,VARSARR,ORDIALOG,SAVEARR,HMPOARRY) ;
 N A,OCO,OCLIST,ORINFO,ORL,OCHKS,PATTYPE,HMPREN,HMPPOSS
 W !,HMPPKG
 W !,HMPOIFN
 S PATTYPE=$S(+$G(^DPT(DFN,.1))>0:"I",1:"O")
 D ON^ORWDXC(.OCO)
 D DISPLAY^ORWDXC(.OCLIST,DFN,HMPPKG) I $D(OCLIST) D INFO^HMPCORD2(.OCLIST)
 S HMPREN=0
 I ACTION="RENEW" D  I HMPOK>0 Q
 .D OXDATA^ORWDXR01(.ORINFO,HMPOIFN)
 .S A=$G(^OR(100,HMPOIFN,0)) I A="" D AE("Order missing from ORDERS file",.HMPVALUE) S HMPOK=2 Q
 .S ORPROV=+$P(A,"^",4),ORL=+$P(A,"^",10)
 .S HMPREN=1
 D ACCEPT^ORWDXC(.OCHKS,DFN,HMPPKG,PATTYPE,LOC,.ORDERCHK,HMPOIFN,HMPREN) I $D(OCHKS) D INFO^HMPCORD2(.OCHKS)
 Q
 ;
ORDERUID(HMPVALUE,INFO) ;
ENORDER ;
 N ACTION,CHKONLY,DFN,ERROR,ID,ISQO,LOC,NAME,ORDIALOG,ORPROV,PACTION,PATIENT,RESULT,SAVEARR,SNIPPET,TEMP,TYPE,UID,USER,HMPOARRY,HMPOK,HMPPOSS
 S UID=$G(INFO("uid")),DFN=""
 S ACTION=$G(INFO("action")),SNIPPET=$G(INFO("snippet")),ORPROV=$G(INFO("user")),PATIENT=$G(INFO("patient")),NAME=$G(INFO("name"))
 S LOC=$G(INFO("location")),CHKONLY=$G(INFO("orderChecksOnly")),ISQO=$G(INFO("isQO")),PACTION=$G(INFO("orderAction")),ID=$G(INFO("qoListId"))
 S ID=$G(INFO("qoId"))
 S TEMP=$S(PACTION="RENEW":"Order can be renew to new order.",PACTION="C":"Order cannot be renew it can be copy to a new order.",1:"")
 S HMPOK=0
 I PACTION'="" D  I HMPOK>0 G ORDERX
 .I $$VALIDUID(UID)=0  D AE("UID is not valid UID",.ERROR)
 .S DFN=$P(UID,":",5)
 .S ID=$P(UID,":",6)
 I DFN="" S DFN=PATIENT
 ;perform Inital Checks
 I PACTION'="" D PRECHK(.HMPOK,LOC,DFN,ID,ORPROV,ACTION,PACTION,.VARSARR,.SAVEARR,.HMPOARRY,.ERROR)
 I HMPOK>1,ACTION="RENEW" K ^TMP($J,"ORDER CHECKS") S INFO("action")="P",INFO("orderAction")="C",INFO("orderChecksOnly")="true" G ENORDER
 I HMPOK>1 G ORDERX
 I CHKONLY="true" S RESULT("resultText")=TEMP G ORDERX
 ;
 ;list Discontinue Reason List
 I ACTION="DL" D  G ORDERX
 .D DCLREAS(.RESULT,DFN,ID,ORPROV)
 ;Discontinue Order
 I ACTION="D" D  G ORDERX
 .S REAS=INFO("dcReason")
 .D DC(.RESULT,DFN,ID,ORPROV,LOC,.SNIPPET,NAME)
 ;Renew Order
 I ACTION="RENEW" D  G ORDERX
 .D RENEW(.RESULT,DFN,ID,ORPROV,CHKONLY,.SNIPPET,NAME,LOC)
 ;
 I ACTION="P" D  G ORDERX
 .N ORDIALOG
 .M ORDIALOG=HMPOARRY
 .S SAVEARR("ORCHECK")=0,SAVEARR("ORTS")=0
 .I PACTION="Q" D SAVE(.RESULT,DFN,ORPROV,LOC,VARSARR("DIALOG NAME"),VARSARR("DISPLAY GROUP IEN"),ID,0,.SAVEARR)
 .i PACTION="C" D SAVE(.RESULT,DFN,ORPROV,LOC,VARSARR("DIALOG NAME"),VARSARR("DISPLAY GROUP IEN"),0,ID,.SAVEARR)
 .I $L($G(RESULT("resultText")))>0 S RESULT("resultText")=TEMP_$C(13,10)_RESULT("resultText")
 ;
 I ACTION="QL" D  G ORDERX
 .D QOL(.RESULT,LOC,ORPROV,ID)
 ;
ORDERX ;
 I '$D(ERROR) D BLDJSON^HMPCORD2(.RESULT,.HMPOARRY,.HMPPOSS,.HMPVALUE,SNIPPET,UID)
 ;I $D(ERROR) M HMPVALUE=ERROR
 I $D(ERROR) D ENCODE^HMPJSON("ERROR","HMPVALUE","HMPERR")
 ;M ^XTMP("AGP INFO")=HMPVALUE
 Q
 ;
